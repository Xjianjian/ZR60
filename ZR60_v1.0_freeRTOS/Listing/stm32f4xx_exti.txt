; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\stm32f4xx_exti.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\stm32f4xx_exti.crf ..\..\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;249      */
;;;250    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;251    {
;;;252      /* Check the parameters */
;;;253      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;254      
;;;255      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;256    }
000004  4770              BX       lr
;;;257    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;287      */
;;;288    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;289    {
;;;290      /* Check the parameters */
;;;291      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;292      
;;;293      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;294    }
000004  4770              BX       lr
;;;295    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;109      */
;;;110    void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;111    {
;;;112      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;113      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;114      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;115      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;116      EXTI->PR = 0x007FFFFF;
000012  4902              LDR      r1,|L3.28|
000014  4802              LDR      r0,|L3.32|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;117    }
00001a  4770              BX       lr
;;;118    
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x007fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;196      */
;;;197    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;198    {
;;;199      /* Check the parameters */
;;;200      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;201      
;;;202      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;203    }
000008  4770              BX       lr
;;;204    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;226      */
;;;227    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;228    {
000002  4601              MOV      r1,r0
;;;229      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;230      /* Check the parameters */
;;;231      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;232      
;;;233      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;234      {
;;;235        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;236      }
;;;237      else
;;;238      {
;;;239        bitstatus = RESET;
;;;240      }
;;;241      return bitstatus;
;;;242    }
00000e  4770              BX       lr
;;;243    
                          ENDP

                  |L5.16|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;263      */
;;;264    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L6.16|
;;;265    {
000002  4601              MOV      r1,r0
;;;266      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;267      /* Check the parameters */
;;;268      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;269      
;;;270      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L6.14|
;;;271      {
;;;272        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L6.14|
;;;273      }
;;;274      else
;;;275      {
;;;276        bitstatus = RESET;
;;;277      }
;;;278      return bitstatus;
;;;279      
;;;280    }
00000e  4770              BX       lr
;;;281    
                          ENDP

                  |L6.16|
                          DCD      0x40013c14

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;125      */
;;;126    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;127    {
;;;128      uint32_t tmp = 0;
;;;129    
;;;130      /* Check the parameters */
;;;131      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;132      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;133      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;134      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;135    
;;;136      tmp = (uint32_t)EXTI_BASE;
000002  4a1a              LDR      r2,|L7.108|
;;;137         
;;;138      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6801              LDR      r1,[r0,#0]            ;127
000008  b353              CBZ      r3,|L7.96|
;;;139      {
;;;140        /* Clear EXTI line configuration */
;;;141        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  6813              LDR      r3,[r2,#0]
00000c  438b              BICS     r3,r3,r1
00000e  6013              STR      r3,[r2,#0]
;;;142        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000010  1d11              ADDS     r1,r2,#4
000012  680b              LDR      r3,[r1,#0]
000014  6804              LDR      r4,[r0,#0]
000016  43a3              BICS     r3,r3,r4
000018  600b              STR      r3,[r1,#0]
;;;143        
;;;144        tmp += EXTI_InitStruct->EXTI_Mode;
00001a  7901              LDRB     r1,[r0,#4]
00001c  4411              ADD      r1,r1,r2
;;;145    
;;;146        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00001e  680b              LDR      r3,[r1,#0]
000020  6804              LDR      r4,[r0,#0]
000022  4323              ORRS     r3,r3,r4
000024  600b              STR      r3,[r1,#0]
;;;147    
;;;148        /* Clear Rising Falling edge configuration */
;;;149        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000026  4b11              LDR      r3,|L7.108|
000028  3308              ADDS     r3,r3,#8
00002a  6819              LDR      r1,[r3,#0]
00002c  6804              LDR      r4,[r0,#0]
00002e  43a1              BICS     r1,r1,r4
000030  6019              STR      r1,[r3,#0]
;;;150        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000032  1d1c              ADDS     r4,r3,#4
000034  6821              LDR      r1,[r4,#0]
000036  6805              LDR      r5,[r0,#0]
000038  43a9              BICS     r1,r1,r5
00003a  6021              STR      r1,[r4,#0]
;;;151        
;;;152        /* Select the trigger for the selected external interrupts */
;;;153        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003c  7941              LDRB     r1,[r0,#5]
00003e  2910              CMP      r1,#0x10
000040  d005              BEQ      |L7.78|
;;;154        {
;;;155          /* Rising Falling edge */
;;;156          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;157          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;158        }
;;;159        else
;;;160        {
;;;161          tmp = (uint32_t)EXTI_BASE;
;;;162          tmp += EXTI_InitStruct->EXTI_Trigger;
000042  4411              ADD      r1,r1,r2
;;;163    
;;;164          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000044  680a              LDR      r2,[r1,#0]
000046  6800              LDR      r0,[r0,#0]
000048  4302              ORRS     r2,r2,r0
00004a  600a              STR      r2,[r1,#0]
;;;165        }
;;;166      }
;;;167      else
;;;168      {
;;;169        tmp += EXTI_InitStruct->EXTI_Mode;
;;;170    
;;;171        /* Disable the selected external lines */
;;;172        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;173      }
;;;174    }
00004c  bd30              POP      {r4,r5,pc}
                  |L7.78|
00004e  6819              LDR      r1,[r3,#0]            ;156
000050  6802              LDR      r2,[r0,#0]            ;156
000052  4311              ORRS     r1,r1,r2              ;156
000054  6019              STR      r1,[r3,#0]            ;156
000056  6821              LDR      r1,[r4,#0]            ;157
000058  6800              LDR      r0,[r0,#0]            ;157
00005a  4301              ORRS     r1,r1,r0              ;157
00005c  6021              STR      r1,[r4,#0]            ;157
00005e  bd30              POP      {r4,r5,pc}
                  |L7.96|
000060  7900              LDRB     r0,[r0,#4]            ;169
000062  4410              ADD      r0,r0,r2              ;169
000064  6802              LDR      r2,[r0,#0]            ;172
000066  438a              BICS     r2,r2,r1              ;172
000068  6002              STR      r2,[r0,#0]            ;172
00006a  bd30              POP      {r4,r5,pc}
;;;175    
                          ENDP

                  |L7.108|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;181      */
;;;182    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;183    {
;;;184      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;185      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;186      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;187      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;188    }
00000c  4770              BX       lr
;;;189    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 153
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____RRX|
#line 328
|__asm___16_stm32f4xx_exti_c_28b3b60e____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
