; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\main.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\main.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\main.crf ..\..\Service\main.c]
                          THUMB

                          AREA ||i.AppTaskCreate||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;52     /* 创建任务 */
;;;53     static void AppTaskCreate(void)
000000  b57f              PUSH     {r0-r6,lr}
;;;54     {
;;;55     	xTaskCreate(Lwip_app_Task, (const char *)"Lwip_app", 512, STD_NULL_PTR, \
000002  2400              MOVS     r4,#0
000004  2503              MOVS     r5,#3
000006  e9cd5400          STRD     r5,r4,[sp,#0]
00000a  f44f7600          MOV      r6,#0x200
00000e  9402              STR      r4,[sp,#8]
000010  4623              MOV      r3,r4
000012  4632              MOV      r2,r6
000014  a10e              ADR      r1,|L1.80|
000016  4811              LDR      r0,|L1.92|
000018  9403              STR      r4,[sp,#0xc]
00001a  f7fffffe          BL       xTaskGenericCreate
00001e  e9cd5400          STRD     r5,r4,[sp,#0]
;;;56     				tskIDLE_PRIORITY + 3, STD_NULL_PTR);
;;;57     	xTaskCreate( Fliter_Task,(const char *)"Fliter", 128,STD_NULL_PTR, \
000022  9402              STR      r4,[sp,#8]
000024  2300              MOVS     r3,#0
000026  2280              MOVS     r2,#0x80
000028  a10d              ADR      r1,|L1.96|
00002a  480f              LDR      r0,|L1.104|
00002c  9403              STR      r4,[sp,#0xc]
00002e  f7fffffe          BL       xTaskGenericCreate
000032  e9cd5400          STRD     r5,r4,[sp,#0]
;;;58     				tskIDLE_PRIORITY + 3,STD_NULL_PTR);
;;;59     	xTaskCreate(ZR60Ctrl_Task, (const char *)"ZR60Ctrl", 512, STD_NULL_PTR, \
000036  9402              STR      r4,[sp,#8]
000038  2300              MOVS     r3,#0
00003a  4632              MOV      r2,r6
00003c  a10b              ADR      r1,|L1.108|
00003e  480e              LDR      r0,|L1.120|
000040  9403              STR      r4,[sp,#0xc]
000042  f7fffffe          BL       xTaskGenericCreate
;;;60     				tskIDLE_PRIORITY + 3,STD_NULL_PTR);
;;;61     	
;;;62     	vTaskStartScheduler();//启动调动器
000046  e8bd407f          POP      {r0-r6,lr}
00004a  f7ffbffe          B.W      vTaskStartScheduler
;;;63     }
;;;64     
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
000050  4c776970          DCB      "Lwip_app",0
000054  5f617070
000058  00      
000059  00                DCB      0
00005a  00                DCB      0
00005b  00                DCB      0
                  |L1.92|
                          DCD      Lwip_app_Task
                  |L1.96|
000060  466c6974          DCB      "Fliter",0
000064  657200  
000067  00                DCB      0
                  |L1.104|
                          DCD      Fliter_Task
                  |L1.108|
00006c  5a523630          DCB      "ZR60Ctrl",0
000070  4374726c
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L1.120|
                          DCD      ZR60Ctrl_Task

                          AREA ||i.Fliter_Task||, CODE, READONLY, ALIGN=1

                  Fliter_Task PROC
                  |L2.0|
;;;91     /* 滤波任务 */
;;;92     static void Fliter_Task(void * pvParameters)
000000  f7fffffe          BL       MngADFliter_mainFunction
;;;93     {
;;;94     	while (1)
;;;95     	{
;;;96     		MngADFliter_mainFunction();
;;;97     		if(0U == GetZR60Ctrl_u_Alarm())//无消防警报
000004  f7fffffe          BL       GetZR60Ctrl_u_Alarm
000008  b908              CBNZ     r0,|L2.14|
;;;98     		{
;;;99     			TskBtnFltr_MainFunction();//按键扫描
00000a  f7fffffe          BL       TskBtnFltr_MainFunction
                  |L2.14|
;;;100    		}
;;;101    		IWDG_Feed();//喂狗
00000e  f7fffffe          BL       IWDG_Feed
;;;102    		vTaskDelay(5 / portTICK_RATE_MS);
000012  2005              MOVS     r0,#5
000014  f7fffffe          BL       vTaskDelay
000018  e7f2              B        |L2.0|
;;;103    	}
;;;104    }
;;;105    
                          ENDP


                          AREA ||i.Lwip_app_Task||, CODE, READONLY, ALIGN=2

                  Lwip_app_Task PROC
;;;65     
;;;66     static void Lwip_app_Task(void * pvParameters)
000000  4c0e              LDR      r4,|L3.60|
                  |L3.2|
;;;67     {
;;;68     	static uint64_t Se_dw_LocalTime = 0U;
;;;69     	while (1)
;;;70     	{	
;;;71     		TskdhcpClient_MainFunction();
000002  f7fffffe          BL       TskdhcpClient_MainFunction
;;;72     		TskdnsAnalysis_MainFunction();
000006  f7fffffe          BL       TskdnsAnalysis_MainFunction
;;;73     		tcp_ShortConnect_MainFunction();
00000a  f7fffffe          BL       tcp_ShortConnect_MainFunction
;;;74     		tcp_LngConnect_MainFunction();
00000e  f7fffffe          BL       tcp_LngConnect_MainFunction
;;;75     		Tskntpclient_MainFunction();
000012  f7fffffe          BL       Tskntpclient_MainFunction
;;;76     		stm8_fm17550_iap_MainFunction();
000016  f7fffffe          BL       stm8_fm17550_iap_MainFunction
;;;77     		http_client_iap_MainFunction();
00001a  f7fffffe          BL       http_client_iap_MainFunction
00001e  e9d40100          LDRD     r0,r1,[r4,#0]
000022  1d40              ADDS     r0,r0,#5
000024  f1410100          ADC      r1,r1,#0
000028  e9c40100          STRD     r0,r1,[r4,#0]
;;;78     	
;;;79     		/*********************************
;;;80     		以下接口需要周期调用
;;;81     		*********************************/
;;;82     		/* handle periodic timers for LwIP */
;;;83     		Se_dw_LocalTime = Se_dw_LocalTime + 5U;
;;;84     		LwIP_Periodic_Handle(Se_dw_LocalTime);
00002c  f7fffffe          BL       LwIP_Periodic_Handle
;;;85     		
;;;86     		IWDG_Feed();//喂狗
000030  f7fffffe          BL       IWDG_Feed
;;;87     		vTaskDelay(5 / portTICK_RATE_MS);
000034  2005              MOVS     r0,#5
000036  f7fffffe          BL       vTaskDelay
00003a  e7e2              B        |L3.2|
;;;88     	}
;;;89     }
;;;90     
                          ENDP

                  |L3.60|
                          DCD      ||.data||

                          AREA ||i.ZR60Ctrl_Task||, CODE, READONLY, ALIGN=1

                  ZR60Ctrl_Task PROC
                  |L4.0|
;;;105    
;;;106    static void ZR60Ctrl_Task(void * pvParameters)
000000  f7fffffe          BL       TskZR60Ctrl_MainFunction
;;;107    {
;;;108    	while (1)
;;;109    	{
;;;110    		/*******************
;;;111    		*	ZR60控制逻辑
;;;112    		********************/	
;;;113    		TskZR60Ctrl_MainFunction();
;;;114    		TskBListMng_MainFunction();
000004  f7fffffe          BL       TskBListMng_MainFunction
;;;115    		//Lcd1062_MainFunction();//lcd1062显示
;;;116    		TskAudioIO_MainFunction();//语音播放
000008  f7fffffe          BL       TskAudioIO_MainFunction
;;;117    		TskMemIf_MainFunction();//写flash或eeprom
00000c  f7fffffe          BL       TskMemIf_MainFunction
;;;118    		
;;;119    		IWDG_Feed();//喂狗
000010  f7fffffe          BL       IWDG_Feed
;;;120    		vTaskDelay(5 / portTICK_RATE_MS);
000014  2005              MOVS     r0,#5
000016  f7fffffe          BL       vTaskDelay
00001a  e7f1              B        |L4.0|
;;;121    	}
;;;122    }
;;;123    
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;38     **************************************************/
;;;39     int main(void)
000000  4904              LDR      r1,|L5.20|
;;;40     {
;;;41     	SCB->VTOR = FLASH_BASE | 0x40000;//中断向量表偏移
000002  4803              LDR      r0,|L5.16|
000004  6008              STR      r0,[r1,#0]
;;;42     	Mcu_Init();/* 初始化 */
000006  f7fffffe          BL       Mcu_Init
;;;43     	
;;;44     	AppTaskCreate();/* 创建任务 */
00000a  f7fffffe          BL       AppTaskCreate
                  |L5.14|
;;;45     	
;;;46     	while (1)
00000e  e7fe              B        |L5.14|
;;;47     	{}
;;;48     }
;;;49     
                          ENDP

                  |L5.16|
                          DCD      0x08040000
                  |L5.20|
                          DCD      0xe000ed08

                          AREA ||.data||, DATA, ALIGN=3

                  Se_dw_LocalTime
000000  00000000          DCQ      0x0000000000000000
000004  00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Service\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 153
|__asm___6_main_c_main____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____RRX|
#line 328
|__asm___6_main_c_main____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
