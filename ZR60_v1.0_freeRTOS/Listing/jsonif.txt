; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\jsonif.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\jsonif.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\jsonif.crf ..\..\Ecal\JsonIf\JsonIf.c]
                          THUMB

                          AREA ||i.Json_DecNumber||, CODE, READONLY, ALIGN=1

                  Json_DecNumber PROC
;;;153    
;;;154    uint32 Json_DecNumber(const char* str)
000000  b510              PUSH     {r4,lr}
;;;155    {
000002  2800              CMP      r0,#0
000004  d00f              BEQ      |L1.38|
;;;156        uint32 value;
;;;157    	
;;;158        if (! str)
;;;159        {
;;;160            return 0;
;;;161        }
;;;162        value = 0;
000006  2100              MOVS     r1,#0
;;;163        while ((*str >= '0') && (*str <= '9'))
;;;164        {
;;;165            value = value*10 + (*str - '0');
000008  f06f042f          MVN      r4,#0x2f
00000c  e005              B        |L1.26|
                  |L1.14|
00000e  eb010181          ADD      r1,r1,r1,LSL #2
000012  eb040141          ADD      r1,r4,r1,LSL #1
000016  4411              ADD      r1,r1,r2
000018  1c40              ADDS     r0,r0,#1
                  |L1.26|
00001a  7802              LDRB     r2,[r0,#0]            ;163
00001c  f1a20330          SUB      r3,r2,#0x30           ;163
000020  2b09              CMP      r3,#9                 ;163
000022  d9f4              BLS      |L1.14|
;;;166            str++;
;;;167        }
;;;168        return value;
000024  4608              MOV      r0,r1
                  |L1.38|
;;;169    }
000026  bd10              POP      {r4,pc}
;;;170    
                          ENDP


                          AREA ||i.Json_HexToJson||, CODE, READONLY, ALIGN=2

                  Json_HexToJson PROC
;;;49     ******************************************************/
;;;50     void Json_HexToJson(void *Le_u_in,uint16* Len,unsigned char type, char *Le_u_out)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;51     {
000004  4698              MOV      r8,r3
000006  4615              MOV      r5,r2
000008  460e              MOV      r6,r1
00000a  4604              MOV      r4,r0
;;;52         uint16  Le_w_i;
;;;53     	char *buf = NULL;
;;;54     	//创建一个空的文档（对象）
;;;55     	cJSON *json = cJSON_CreateObject();
00000c  f7fffffe          BL       cJSON_CreateObject
000010  4682              MOV      r10,r0
;;;56     	switch(type)
000012  2d06              CMP      r5,#6
000014  d245              BCS      |L2.162|
000016  e8dff005          TBB      [pc,r5]
00001a  030c              DCB      0x03,0x0c
00001c  354585aa          DCB      0x35,0x45,0x85,0xaa
;;;57     	{
;;;58     		case JSON_HEART_BEAT:
;;;59     		{
;;;60     			cJSON_AddNumberToObject(json,"t",1);
000020  ed9f0b62          VLDR     d0,|L2.428|
000024  a163              ADR      r1,|L2.436|
000026  4650              MOV      r0,r10
000028  f7fffffe          BL       cJSON_AddNumberToObject
;;;61     			cJSON_AddStringToObject(json,"alias",(char*)Le_u_in);
00002c  4622              MOV      r2,r4
00002e  a162              ADR      r1,|L2.440|
;;;62     		}
;;;63     		break;
000030  e090              B        |L2.340|
;;;64     		case JSON_GET_BLIST:
;;;65     		{	//{"token":"token","type":"黑白名单标志","timeStamp":"时间戳","page":"页码","pageNum":"页大小"}
;;;66     			cJSON_AddStringToObject(json,"token",((tcp_client_BListPullStruct*)Le_u_in)->token);
000032  4622              MOV      r2,r4
000034  a162              ADR      r1,|L2.448|
000036  4650              MOV      r0,r10
000038  f7fffffe          BL       cJSON_AddStringToObject
;;;67     			cJSON_AddNumberToObject(json,"type",((tcp_client_BListPullStruct*)Le_u_in)->Listtype);
00003c  f8140f28          LDRB     r0,[r4,#0x28]!
000040  f7fffffe          BL       __aeabi_ui2d
000044  ec410b10          VMOV     d0,r0,r1
000048  a15f              ADR      r1,|L2.456|
00004a  4650              MOV      r0,r10
00004c  f7fffffe          BL       cJSON_AddNumberToObject
000050  e9d40102          LDRD     r0,r1,[r4,#8]
;;;68     			cJSON_AddNumberToObject(json,"timeStamp",((tcp_client_BListPullStruct*)Le_u_in)->timestamp);
000054  f7fffffe          BL       __aeabi_ul2d
000058  ec410b10          VMOV     d0,r0,r1
00005c  a15c              ADR      r1,|L2.464|
00005e  4650              MOV      r0,r10
000060  f7fffffe          BL       cJSON_AddNumberToObject
;;;69     			cJSON_AddNumberToObject(json,"page",((tcp_client_BListPullStruct*)Le_u_in)->page);
000064  69a0              LDR      r0,[r4,#0x18]
000066  f7fffffe          BL       __aeabi_ui2d
00006a  ec410b10          VMOV     d0,r0,r1
00006e  a15b              ADR      r1,|L2.476|
000070  4650              MOV      r0,r10
000072  f7fffffe          BL       cJSON_AddNumberToObject
;;;70     			cJSON_AddNumberToObject(json,"pageNum",((tcp_client_BListPullStruct*)Le_u_in)->pageSize);
000076  8c20              LDRH     r0,[r4,#0x20]
000078  f7fffffe          BL       __aeabi_ui2d
00007c  ec410b10          VMOV     d0,r0,r1
000080  a158              ADR      r1,|L2.484|
;;;71     		}
;;;72     		break;
000082  e00b              B        |L2.156|
;;;73     		case JSON_REPORT_DOORST:
;;;74     		{	//{"token":"token","state":"门锁状态"}
;;;75     			cJSON_AddStringToObject(json,"token",((tcp_client_doorStStruct*)Le_u_in)->token);
000084  4622              MOV      r2,r4
000086  a14e              ADR      r1,|L2.448|
000088  4650              MOV      r0,r10
00008a  f7fffffe          BL       cJSON_AddStringToObject
;;;76     			cJSON_AddNumberToObject(json,"state",((tcp_client_doorStStruct*)Le_u_in)->state);
00008e  f8940028          LDRB     r0,[r4,#0x28]
000092  f7fffffe          BL       __aeabi_ui2d
000096  ec410b10          VMOV     d0,r0,r1
00009a  a154              ADR      r1,|L2.492|
                  |L2.156|
00009c  4650              MOV      r0,r10                ;70
00009e  f7fffffe          BL       cJSON_AddNumberToObject
                  |L2.162|
0000a2  e05a              B        |L2.346|
;;;77     		}	
;;;78     		break;
;;;79     		case JSON_REPORT_UNLOCKLOG:
;;;80     		{	//{"token":"token","deviceSys":"设备系统","log":[{"openType":"开锁方式","openInfo":"开锁信息","openTime":"开锁时间"}]}
;;;81     			cJSON *log_Array = NULL;
;;;82     			cJSON *Arrayobj = NULL;
;;;83     			cJSON_AddStringToObject(json,"token",((tcp_client_OpenLogStruct*)Le_u_in)->token);
0000a4  4622              MOV      r2,r4
0000a6  a146              ADR      r1,|L2.448|
0000a8  4650              MOV      r0,r10
0000aa  f7fffffe          BL       cJSON_AddStringToObject
;;;84     			cJSON_AddStringToObject(json,"deviceSys",CeZR60Ctrl_u_SoftVersion);
0000ae  4a51              LDR      r2,|L2.500|
0000b0  a151              ADR      r1,|L2.504|
0000b2  4650              MOV      r0,r10
0000b4  f7fffffe          BL       cJSON_AddStringToObject
;;;85     			cJSON_AddItemToObject(json,"log", log_Array = cJSON_CreateArray());  
0000b8  f7fffffe          BL       cJSON_CreateArray
0000bc  4683              MOV      r11,r0
0000be  465a              MOV      r2,r11
0000c0  a150              ADR      r1,|L2.516|
0000c2  4650              MOV      r0,r10
0000c4  f7fffffe          BL       cJSON_AddItemToObject
;;;86     			for(Le_w_i = 0U;Le_w_i < (((tcp_client_OpenLogStruct*)Le_u_in)->LogNum);Le_w_i++)
0000c8  2500              MOVS     r5,#0
0000ca  e026              B        |L2.282|
                  |L2.204|
;;;87     			{
;;;88     				cJSON_AddItemToArray(log_Array,Arrayobj=cJSON_CreateObject());
0000cc  f7fffffe          BL       cJSON_CreateObject
0000d0  4681              MOV      r9,r0
0000d2  4649              MOV      r1,r9
0000d4  4658              MOV      r0,r11
0000d6  f7fffffe          BL       cJSON_AddItemToArray
;;;89     				cJSON_AddNumberToObject(Arrayobj,"openType",((tcp_client_OpenLogStruct*)Le_u_in)->Log[Le_w_i].e_u_Event);
0000da  ebc500c5          RSB      r0,r5,r5,LSL #3
0000de  eb0407c0          ADD      r7,r4,r0,LSL #3
0000e2  f8970060          LDRB     r0,[r7,#0x60]
0000e6  f7fffffe          BL       __aeabi_ui2d
0000ea  ec410b10          VMOV     d0,r0,r1
0000ee  a146              ADR      r1,|L2.520|
0000f0  4648              MOV      r0,r9
0000f2  f7fffffe          BL       cJSON_AddNumberToObject
;;;90     				cJSON_AddStringToObject(Arrayobj,"openInfo",&(((tcp_client_OpenLogStruct*)Le_u_in)->Log[Le_w_i].e_u_ID[0U]));
0000f6  f1070240          ADD      r2,r7,#0x40
0000fa  a146              ADR      r1,|L2.532|
0000fc  4648              MOV      r0,r9
0000fe  f7fffffe          BL       cJSON_AddStringToObject
000102  e9d7010e          LDRD     r0,r1,[r7,#0x38]
;;;91     				cJSON_AddNumberToObject(Arrayobj,"openTime",((tcp_client_OpenLogStruct*)Le_u_in)->Log[Le_w_i].e_u_Time);
000106  f7fffffe          BL       __aeabi_ul2d
00010a  ec410b10          VMOV     d0,r0,r1
00010e  a144              ADR      r1,|L2.544|
000110  4648              MOV      r0,r9
000112  f7fffffe          BL       cJSON_AddNumberToObject
000116  1c6d              ADDS     r5,r5,#1
000118  b2ad              UXTH     r5,r5                 ;86
                  |L2.282|
00011a  f8940028          LDRB     r0,[r4,#0x28]         ;86
00011e  42a8              CMP      r0,r5                 ;86
000120  d8d4              BHI      |L2.204|
000122  e01a              B        |L2.346|
;;;92     			}
;;;93     		}	
;;;94     		break;
;;;95     		case JSON_DEVICE_INIT:
;;;96     		{//{"doorId":"门id","mac":"MAC地址","isWifi":"mac是否是无线的MAC地址","bluetooth":"蓝牙地址"}
;;;97     			cJSON_AddStringToObject(json,"doorId",&(((tcp_client_DeviceInitStruct*)Le_u_in)->doorID[0U]));
000124  4622              MOV      r2,r4
000126  a141              ADR      r1,|L2.556|
000128  4650              MOV      r0,r10
00012a  f7fffffe          BL       cJSON_AddStringToObject
;;;98     			cJSON_AddStringToObject(json,"mac",&(((tcp_client_DeviceInitStruct*)Le_u_in)->mac[0U]));
00012e  f1040221          ADD      r2,r4,#0x21
000132  a140              ADR      r1,|L2.564|
000134  4650              MOV      r0,r10
000136  f7fffffe          BL       cJSON_AddStringToObject
;;;99     			cJSON_AddNumberToObject(json,"isWifi",((tcp_client_DeviceInitStruct*)Le_u_in)->addrtype);
00013a  f8940033          LDRB     r0,[r4,#0x33]
00013e  f7fffffe          BL       __aeabi_ui2d
000142  ec410b10          VMOV     d0,r0,r1
000146  a13c              ADR      r1,|L2.568|
000148  4650              MOV      r0,r10
00014a  f7fffffe          BL       cJSON_AddNumberToObject
;;;100    			cJSON_AddStringToObject(json,"bluetooth",&(((tcp_client_DeviceInitStruct*)Le_u_in)->Blemac[0U]));
00014e  f1040234          ADD      r2,r4,#0x34
000152  a13b              ADR      r1,|L2.576|
                  |L2.340|
000154  4650              MOV      r0,r10                ;61
000156  f7fffffe          BL       cJSON_AddStringToObject
                  |L2.346|
;;;101    		}
;;;102    		break;
;;;103    		case JSON_DEVICE_ECHO_REMOTEUNLOCK:
;;;104    		{//{"t":-5,"mid":"消息id"}
;;;105    			cJSON_AddNumberToObject(json,"t",-5);
;;;106    			cJSON_AddNumberToObject(json,"mid",((cJSON *)Le_u_in)->valuedouble);
;;;107    		}
;;;108    		break;	
;;;109    		default:
;;;110    		break;
;;;111    	}
;;;112    	//将json结构格式化到缓冲区
;;;113    	buf = cJSON_PrintUnformatted(json);
00015a  4650              MOV      r0,r10
00015c  f7fffffe          BL       cJSON_PrintUnformatted
000160  0004              MOVS     r4,r0
;;;114    	if(buf !=NULL)
000162  d01e              BEQ      |L2.418|
;;;115    	{
;;;116    		*Len = strlen(buf);
000164  f7fffffe          BL       strlen
000168  8030              STRH     r0,[r6,#0]
;;;117    		for(Le_w_i = 0U;Le_w_i < (*Len);Le_w_i++)
00016a  2000              MOVS     r0,#0
00016c  e00e              B        |L2.396|
00016e  ed9f0b37          VLDR     d0,|L2.588|
000172  a110              ADR      r1,|L2.436|
000174  4650              MOV      r0,r10                ;105
000176  f7fffffe          BL       cJSON_AddNumberToObject
00017a  ed940b06          VLDR     d0,[r4,#0x18]         ;106
00017e  a135              ADR      r1,|L2.596|
000180  e78c              B        |L2.156|
                  |L2.386|
;;;118    		{
;;;119    			Le_u_out[Le_w_i] = buf[Le_w_i];
000182  5c22              LDRB     r2,[r4,r0]
000184  f8082000          STRB     r2,[r8,r0]
000188  1c40              ADDS     r0,r0,#1
00018a  b280              UXTH     r0,r0                 ;117
                  |L2.396|
00018c  8831              LDRH     r1,[r6,#0]            ;117
00018e  4281              CMP      r1,r0                 ;117
000190  d8f7              BHI      |L2.386|
;;;120    		}
;;;121    		Le_u_out[Le_w_i++]= '\n';//字符串末尾加\n，服务器根据\n判断一帧完整数据
000192  220a              MOVS     r2,#0xa
000194  f8082000          STRB     r2,[r8,r0]
000198  1c40              ADDS     r0,r0,#1
;;;122    		*Len = Le_w_i;
00019a  8030              STRH     r0,[r6,#0]
;;;123    		free(buf);
00019c  4620              MOV      r0,r4
00019e  f7fffffe          BL       free
                  |L2.418|
;;;124    	}
;;;125    	//释放json结构所占用的内存
;;;126    	cJSON_Delete(json);
0001a2  4650              MOV      r0,r10
0001a4  e8bd5ff0          POP      {r4-r12,lr}
0001a8  f7ffbffe          B.W      cJSON_Delete
;;;127    }
;;;128    
                          ENDP

                  |L2.428|
0001ac  00000000          DCFD     0x3ff0000000000000 ; 1
0001b0  3ff00000
                  |L2.436|
0001b4  7400              DCB      "t",0
0001b6  00                DCB      0
0001b7  00                DCB      0
                  |L2.440|
0001b8  616c6961          DCB      "alias",0
0001bc  7300    
0001be  00                DCB      0
0001bf  00                DCB      0
                  |L2.448|
0001c0  746f6b65          DCB      "token",0
0001c4  6e00    
0001c6  00                DCB      0
0001c7  00                DCB      0
                  |L2.456|
0001c8  74797065          DCB      "type",0
0001cc  00      
0001cd  00                DCB      0
0001ce  00                DCB      0
0001cf  00                DCB      0
                  |L2.464|
0001d0  74696d65          DCB      "timeStamp",0
0001d4  5374616d
0001d8  7000    
0001da  00                DCB      0
0001db  00                DCB      0
                  |L2.476|
0001dc  70616765          DCB      "page",0
0001e0  00      
0001e1  00                DCB      0
0001e2  00                DCB      0
0001e3  00                DCB      0
                  |L2.484|
0001e4  70616765          DCB      "pageNum",0
0001e8  4e756d00
                  |L2.492|
0001ec  73746174          DCB      "state",0
0001f0  6500    
0001f2  00                DCB      0
0001f3  00                DCB      0
                  |L2.500|
                          DCD      CeZR60Ctrl_u_SoftVersion
                  |L2.504|
0001f8  64657669          DCB      "deviceSys",0
0001fc  63655379
000200  7300    
000202  00                DCB      0
000203  00                DCB      0
                  |L2.516|
000204  6c6f6700          DCB      "log",0
                  |L2.520|
000208  6f70656e          DCB      "openType",0
00020c  54797065
000210  00      
000211  00                DCB      0
000212  00                DCB      0
000213  00                DCB      0
                  |L2.532|
000214  6f70656e          DCB      "openInfo",0
000218  496e666f
00021c  00      
00021d  00                DCB      0
00021e  00                DCB      0
00021f  00                DCB      0
                  |L2.544|
000220  6f70656e          DCB      "openTime",0
000224  54696d65
000228  00      
000229  00                DCB      0
00022a  00                DCB      0
00022b  00                DCB      0
                  |L2.556|
00022c  646f6f72          DCB      "doorId",0
000230  496400  
000233  00                DCB      0
                  |L2.564|
000234  6d616300          DCB      "mac",0
                  |L2.568|
000238  69735769          DCB      "isWifi",0
00023c  666900  
00023f  00                DCB      0
                  |L2.576|
000240  626c7565          DCB      "bluetooth",0
000244  746f6f74
000248  6800    
00024a  00                DCB      0
00024b  00                DCB      0
                  |L2.588|
00024c  00000000          DCFD     0xc014000000000000 ; -5
000250  c0140000
                  |L2.596|
000254  6d696400          DCB      "mid",0

                          AREA ||i.Json_HexToStr||, CODE, READONLY, ALIGN=1

                  Json_HexToStr PROC
;;;137    */  
;;;138    void Json_HexToStr(char *pszDest, unsigned char *pbSrc, int nLen)  
000000  b570              PUSH     {r4-r6,lr}
;;;139    {  
;;;140        char    ddl, ddh;  
;;;141        for (int i = 0; i < nLen; i++)  
000002  2300              MOVS     r3,#0
;;;142        {  
;;;143            ddh = 48 + pbSrc[i] / 16;  
000004  2630              MOVS     r6,#0x30
000006  e011              B        |L3.44|
                  |L3.8|
000008  5ccc              LDRB     r4,[r1,r3]
00000a  eb061514          ADD      r5,r6,r4,LSR #4
;;;144            ddl = 48 + pbSrc[i] % 16;  
00000e  f004040f          AND      r4,r4,#0xf
000012  3430              ADDS     r4,r4,#0x30
;;;145            if (ddh > 57) ddh = ddh + 7;  
000014  2d39              CMP      r5,#0x39
000016  d900              BLS      |L3.26|
000018  1ded              ADDS     r5,r5,#7
                  |L3.26|
;;;146            if (ddl > 57) ddl = ddl + 7;  
00001a  2c39              CMP      r4,#0x39
00001c  d900              BLS      |L3.32|
00001e  1de4              ADDS     r4,r4,#7
                  |L3.32|
;;;147            pszDest[i * 2] = ddh;  
000020  f8005013          STRB     r5,[r0,r3,LSL #1]
;;;148            pszDest[i * 2 + 1] = ddl;  
000024  eb000543          ADD      r5,r0,r3,LSL #1
000028  1c5b              ADDS     r3,r3,#1
00002a  706c              STRB     r4,[r5,#1]
                  |L3.44|
00002c  4293              CMP      r3,r2                 ;141
00002e  dbeb              BLT      |L3.8|
;;;149        }  
;;;150      
;;;151        pszDest[nLen * 2] = '\0';  
000030  2100              MOVS     r1,#0
000032  f8001012          STRB     r1,[r0,r2,LSL #1]
;;;152    }
000036  bd70              POP      {r4-r6,pc}
;;;153    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\Ecal\\JsonIf\\JsonIf.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_JsonIf_c_11bab9f3____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_JsonIf_c_11bab9f3____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_JsonIf_c_11bab9f3____REVSH|
#line 153
|__asm___8_JsonIf_c_11bab9f3____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_JsonIf_c_11bab9f3____RRX|
#line 328
|__asm___8_JsonIf_c_11bab9f3____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
