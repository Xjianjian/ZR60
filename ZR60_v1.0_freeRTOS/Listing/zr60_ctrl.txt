; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\zr60_ctrl.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\zr60_ctrl.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\zr60_ctrl.crf ..\..\APP\ZR60_Ctrl\ZR60_Ctrl.c]
                          THUMB

                          AREA ||i.CardSet_MainFunction||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  CardSet_MainFunction PROC
;;;675    ******************************************************/
;;;676    static void  CardSet_MainFunction(void)//母卡设置
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;677    {
;;;678    	uint8_t Le_u_i;
;;;679    	static uint32_t SeCardSet_dw_Timer = 0U;
;;;680    	switch(SeCardSet_u_St)
000004  4c37              LDR      r4,|L1.228|
000006  2601              MOVS     r6,#1
000008  2500              MOVS     r5,#0
00000a  7ba0              LDRB     r0,[r4,#0xe]  ; SeCardSet_u_St
00000c  2800              CMP      r0,#0
00000e  d055              BEQ      |L1.188|
000010  2801              CMP      r0,#1
000012  d165              BNE      |L1.224|
;;;681    	{
;;;682    		case 0U://空闲状态
;;;683    		{
;;;684    			if(GetBtnFltr_u_BtnShrtValid(Key_card_set) == STD_ACTIVE)//母卡设置按键有效
;;;685    			{
;;;686    				ClrBtnFltr_BtnShrtValid(Key_card_set);
;;;687    				SetAudioIO_PlayFile(AudioIO_ConfDevice);
;;;688    				SeCardSet_dw_Timer = 0U;
;;;689    				SeCardSet_u_St = 1U;
;;;690    				USART_PRINTF_S("进入母卡设置模式");
;;;691    			}
;;;692    		}
;;;693    		break;
;;;694    		case 1U://等待母卡设置状态
;;;695    		{
;;;696    			SeCardSet_dw_Timer++;
000014  6be0              LDR      r0,[r4,#0x3c]  ; SeCardSet_dw_Timer
000016  1c40              ADDS     r0,r0,#1
;;;697    			if(SeCardSet_dw_Timer <= (uint32_t)1000U)
000018  63e0              STR      r0,[r4,#0x3c]  ; SeCardSet_dw_Timer
00001a  f5b07f7a          CMP      r0,#0x3e8
00001e  d85c              BHI      |L1.218|
;;;698    			{
;;;699    				if(ZR60_CTRL_SETCARD == 1)
000020  4831              LDR      r0,|L1.232|
000022  7801              LDRB     r1,[r0,#0]  ; setcard
000024  2901              CMP      r1,#1
000026  d15b              BNE      |L1.224|
;;;700    				{
;;;701    					ZR60_CTRL_SETCARD = 0;
000028  7005              STRB     r5,[r0,#0]
;;;702    					if(MemIf_WriteEE(EepromCfg_CardInfo,&sminfo,sizeof(sminfo)))
00002a  2251              MOVS     r2,#0x51
00002c  492f              LDR      r1,|L1.236|
00002e  2000              MOVS     r0,#0
000030  f7fffffe          BL       MemIf_WriteEE
000034  b3c8              CBZ      r0,|L1.170|
;;;703    					{
;;;704    						(void)MemIf_WriteEE(EepromCfg_CardInfoBkUpOne,&sminfo,sizeof(sminfo));
000036  2251              MOVS     r2,#0x51
000038  492c              LDR      r1,|L1.236|
00003a  200d              MOVS     r0,#0xd
00003c  f7fffffe          BL       MemIf_WriteEE
;;;705    						(void)MemIf_WriteEE(EepromCfg_CardInfoBkUpTwo,&sminfo,sizeof(sminfo));
000040  2251              MOVS     r2,#0x51
000042  492a              LDR      r1,|L1.236|
000044  200e              MOVS     r0,#0xe
000046  f7fffffe          BL       MemIf_WriteEE
00004a  4b28              LDR      r3,|L1.236|
;;;706    						for(Le_u_i = 0U;Le_u_i < 16U;Le_u_i++)
;;;707    						{
;;;708    							sminfo1.community_id[Le_u_i] = sminfo.community_id[Le_u_i];
00004c  4f28              LDR      r7,|L1.240|
00004e  2000              MOVS     r0,#0                 ;706
                  |L1.80|
;;;709    							sminfo1.build_numOne[Le_u_i] = sminfo.build_numOne[Le_u_i];
000050  183a              ADDS     r2,r7,r0
000052  5c19              LDRB     r1,[r3,r0]            ;708
000054  5439              STRB     r1,[r7,r0]            ;708
000056  1819              ADDS     r1,r3,r0
;;;710    							sminfo1.build_numTwo[Le_u_i] = sminfo.build_numTwo[Le_u_i];
;;;711    							sminfo1.build_id[Le_u_i] = sminfo.build_id[Le_u_i];
;;;712    							sminfo1.door_id[Le_u_i] = sminfo.door_id[Le_u_i];
000058  1c40              ADDS     r0,r0,#1
00005a  f891c010          LDRB     r12,[r1,#0x10]        ;709
00005e  f882c010          STRB     r12,[r2,#0x10]        ;709
000062  f891c020          LDRB     r12,[r1,#0x20]        ;710
000066  f882c020          STRB     r12,[r2,#0x20]        ;710
00006a  f891c030          LDRB     r12,[r1,#0x30]        ;711
00006e  f882c030          STRB     r12,[r2,#0x30]        ;711
000072  f8911040          LDRB     r1,[r1,#0x40]
000076  b2c0              UXTB     r0,r0                 ;706
000078  f8821040          STRB     r1,[r2,#0x40]
00007c  2810              CMP      r0,#0x10              ;706
00007e  d3e7              BCC      |L1.80|
;;;713    						}
;;;714    						sminfo1.suffix = sminfo.suffix;
000080  f8930050          LDRB     r0,[r3,#0x50]  ; sminfo
;;;715    						read_init_sminfo(&sminfo1,&sm);//根据ic卡小区号，楼栋号，单元号的前8位用于sm3密码验证
000084  4917              LDR      r1,|L1.228|
000086  f8870050          STRB     r0,[r7,#0x50]         ;714
00008a  3140              ADDS     r1,r1,#0x40
00008c  4818              LDR      r0,|L1.240|
00008e  f7fffffe          BL       read_init_sminfo
;;;716    						SetAudioIO_PlayFile(AudioIO_ConfSuccess);
000092  2006              MOVS     r0,#6
000094  f7fffffe          BL       SetAudioIO_PlayFile
;;;717    						memset(test_buf,0,sizeof(test_buf));//test_buf[]清0
000098  4816              LDR      r0,|L1.244|
;;;718    						USART_PRINTF_S("母卡设置成功  √");
00009a  a117              ADR      r1,|L1.248|
00009c  6005              STR      r5,[r0,#0]            ;717  ; test_buf
00009e  6045              STR      r5,[r0,#4]            ;717  ; test_buf
0000a0  6085              STR      r5,[r0,#8]            ;717  ; test_buf
0000a2  60c5              STR      r5,[r0,#0xc]  ; test_buf
0000a4  a019              ADR      r0,|L1.268|
0000a6  f7fffffe          BL       __2printf
                  |L1.170|
;;;719    					}
;;;720    					
;;;721    					SeCardSet_u_St = 0U;
;;;722    					ZR60_CTRL_AUTOSEARCHCARD = 1;//开启自动寻卡
0000aa  4819              LDR      r0,|L1.272|
0000ac  73a5              STRB     r5,[r4,#0xe]          ;721
0000ae  7006              STRB     r6,[r0,#0]
;;;723    					USART_PRINTF_S("退出母卡设置模式");
0000b0  a118              ADR      r1,|L1.276|
                  |L1.178|
;;;724    				}
;;;725    			}
;;;726    			else//等待超时
;;;727    			{
;;;728    				SeCardSet_u_St = 0U;
;;;729    				USART_PRINTF_S("等待母卡设置超时，退出母卡设置模式");
0000b2  e8bd41f0          POP      {r4-r8,lr}
0000b6  a015              ADR      r0,|L1.268|
0000b8  f7ffbffe          B.W      __2printf
                  |L1.188|
0000bc  2000              MOVS     r0,#0                 ;684
0000be  f7fffffe          BL       GetBtnFltr_u_BtnShrtValid
0000c2  2801              CMP      r0,#1                 ;684
0000c4  d10c              BNE      |L1.224|
0000c6  2000              MOVS     r0,#0                 ;686
0000c8  f7fffffe          BL       ClrBtnFltr_BtnShrtValid
0000cc  2005              MOVS     r0,#5                 ;687
0000ce  f7fffffe          BL       SetAudioIO_PlayFile
0000d2  63e5              STR      r5,[r4,#0x3c]         ;689  ; SeCardSet_dw_Timer
0000d4  73a6              STRB     r6,[r4,#0xe]          ;689
0000d6  a114              ADR      r1,|L1.296|
0000d8  e7eb              B        |L1.178|
                  |L1.218|
0000da  73a5              STRB     r5,[r4,#0xe]          ;728
0000dc  a117              ADR      r1,|L1.316|
0000de  e7e8              B        |L1.178|
                  |L1.224|
;;;730    			}
;;;731    		}
;;;732    		break;
;;;733    		default:
;;;734    		break;
;;;735    	}
;;;736    }
0000e0  e8bd81f0          POP      {r4-r8,pc}
;;;737    
                          ENDP

                  |L1.228|
                          DCD      ||.data||
                  |L1.232|
                          DCD      setcard
                  |L1.236|
                          DCD      sminfo
                  |L1.240|
                          DCD      sminfo1
                  |L1.244|
                          DCD      ||.bss||
                  |L1.248|
0000f8  c4b8bfa8          DCB      196,184,191,168,201,232,214,195,179,201,185,166,"  ",161
0000fc  c9e8d6c3
000100  b3c9b9a6
000104  2020a1  
000107  cc00              DCB      204,0
000109  00                DCB      0
00010a  00                DCB      0
00010b  00                DCB      0
                  |L1.268|
00010c  25730a00          DCB      "%s\n",0
                  |L1.272|
                          DCD      isSectedCard_flag
                  |L1.276|
000114  cdcbb3f6          DCB      205,203,179,246,196,184,191,168,201,232,214,195,196,163,202
000118  c4b8bfa8
00011c  c9e8d6c3
000120  c4a3ca  
000123  bd00              DCB      189,0
000125  00                DCB      0
000126  00                DCB      0
000127  00                DCB      0
                  |L1.296|
000128  bdf8c8eb          DCB      189,248,200,235,196,184,191,168,201,232,214,195,196,163,202
00012c  c4b8bfa8
000130  c9e8d6c3
000134  c4a3ca  
000137  bd00              DCB      189,0
000139  00                DCB      0
00013a  00                DCB      0
00013b  00                DCB      0
                  |L1.316|
00013c  b5c8b4fd          DCB      181,200,180,253,196,184,191,168,201,232,214,195,179,172,202
000140  c4b8bfa8
000144  c9e8d6c3
000148  b3acca  
00014b  b1a3accd          DCB      177,163,172,205,203,179,246,196,184,191,168,201,232,214,195
00014f  cbb3f6c4
000153  b8bfa8c9
000157  e8d6c3  
00015a  c4a3cabd          DCB      196,163,202,189,0
00015e  00      
00015f  00                DCB      0

                          AREA ||i.ClrZR60Ctrl_BleCnntTimeout||, CODE, READONLY, ALIGN=2

                  ClrZR60Ctrl_BleCnntTimeout PROC
;;;1107   ******************************************************/
;;;1108   void ClrZR60Ctrl_BleCnntTimeout(void)
000000  4901              LDR      r1,|L2.8|
;;;1109   {
;;;1110   	SeCardSet_w_BleDisCnntT = 0U;
000002  2000              MOVS     r0,#0
000004  84c8              STRH     r0,[r1,#0x26]
;;;1111   }
000006  4770              BX       lr
;;;1112   
                          ENDP

                  |L2.8|
                          DCD      ||.data||

                          AREA ||i.ClrZR60Ctrl_BleSt||, CODE, READONLY, ALIGN=2

                  ClrZR60Ctrl_BleSt PROC
;;;1091   ******************************************************/
;;;1092   void ClrZR60Ctrl_BleSt(void)
000000  4901              LDR      r1,|L3.8|
;;;1093   {
;;;1094   	SeCardSet_u_BleSt = 0U;
000002  2000              MOVS     r0,#0
000004  7408              STRB     r0,[r1,#0x10]
;;;1095   }
000006  4770              BX       lr
;;;1096   
                          ENDP

                  |L3.8|
                          DCD      ||.data||

                          AREA ||i.GetZR60Ctrl_u_Alarm||, CODE, READONLY, ALIGN=2

                  GetZR60Ctrl_u_Alarm PROC
;;;1042   ******************************************************/
;;;1043   uint8_t	GetZR60Ctrl_u_Alarm(void)
000000  4801              LDR      r0,|L4.8|
;;;1044   {
;;;1045   	return ALARM;
000002  7a00              LDRB     r0,[r0,#8]  ; ALARM
;;;1046   }
000004  4770              BX       lr
;;;1047   
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      ||.data||

                          AREA ||i.GetZR60Ctrl_u_CardSetSt||, CODE, READONLY, ALIGN=2

                  GetZR60Ctrl_u_CardSetSt PROC
;;;1059   ******************************************************/
;;;1060   uint8_t	GetZR60Ctrl_u_CardSetSt(void)
000000  4801              LDR      r0,|L5.8|
;;;1061   {
;;;1062   	return SeCardSet_u_St;
000002  7b80              LDRB     r0,[r0,#0xe]  ; SeCardSet_u_St
;;;1063   }
000004  4770              BX       lr
;;;1064   
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      ||.data||

                          AREA ||i.GetZR60Ctrl_u_XOR||, CODE, READONLY, ALIGN=1

                  GetZR60Ctrl_u_XOR PROC
;;;1171   ******************************************************/
;;;1172   static uint8 GetZR60Ctrl_u_XOR(uint8* Le_u_Dt,uint16 Le_w_Lng)
000000  b510              PUSH     {r4,lr}
;;;1173   {
;;;1174   	uint16 Le_w_i;
;;;1175   	uint8 Le_u_Xor = 0U;
000002  2300              MOVS     r3,#0
;;;1176   	for(Le_w_i = 0U; Le_w_i < Le_w_Lng;Le_w_i++)
000004  461a              MOV      r2,r3
000006  e003              B        |L6.16|
                  |L6.8|
;;;1177   	{
;;;1178   		Le_u_Xor ^= Le_u_Dt[Le_w_i];
000008  5c84              LDRB     r4,[r0,r2]
00000a  4063              EORS     r3,r3,r4
00000c  1c52              ADDS     r2,r2,#1
00000e  b292              UXTH     r2,r2                 ;1176
                  |L6.16|
000010  428a              CMP      r2,r1                 ;1176
000012  d3f9              BCC      |L6.8|
;;;1179   	}
;;;1180   	Le_u_Xor = (~Le_u_Xor);
000014  43d8              MVNS     r0,r3
000016  b2c0              UXTB     r0,r0
;;;1181   	return Le_u_Xor;
;;;1182   }
000018  bd10              POP      {r4,pc}
;;;1183   
                          ENDP


                          AREA ||i.InitZR60Ctrl_parameter||, CODE, READONLY, ALIGN=2

                  InitZR60Ctrl_parameter PROC
;;;97     ******************************************************/
;;;98     void InitZR60Ctrl_parameter(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;99     {
000004  b0c7              SUB      sp,sp,#0x11c
000006  2600              MOVS     r6,#0
;;;100    	uint8_t  Le_u_i;
;;;101    	uint64_t Le_dw_WaitTimer = 0x1FFFFF;
;;;102    	//uint16_t LeZR60_w_Lng = 0U;
;;;103    	uint8_t LeZR60_u_Xor[3U] = {0};
;;;104    	struct comm_info CardInfo[3U];//母卡配置信息	
;;;105    	uint8_t Le_u_MacAddr[12U] = {0};//mac地址
;;;106    	uint8_t Le_u_MacAddrBkUpOne[12U] = {0};//mac地址
;;;107    	uint8_t Le_u_MacAddrBkUpTwo[12U] = {0};//mac地址
;;;108    
;;;109    	LeZR60_u_Xor[0] = MemIfCfg_FLASH_ReadByte((uint32)(CaEepromCfg_Conf[EepromCfg_CardInfo].SecAddr));//读取扇区0数据校验和（存放母卡信息）
000008  4dab              LDR      r5,|L7.696|
00000a  963d              STR      r6,[sp,#0xf4]         ;105
00000c  963e              STR      r6,[sp,#0xf8]         ;105
00000e  963f              STR      r6,[sp,#0xfc]         ;106
000010  9645              STR      r6,[sp,#0x114]        ;107
000012  9643              STR      r6,[sp,#0x10c]        ;106
000014  9644              STR      r6,[sp,#0x110]        ;106
000016  9640              STR      r6,[sp,#0x100]        ;107
000018  9641              STR      r6,[sp,#0x104]        ;107
00001a  9642              STR      r6,[sp,#0x108]
00001c  4ca5              LDR      r4,|L7.692|
00001e  4637              MOV      r7,r6                 ;103
000020  6868              LDR      r0,[r5,#4]  ; CaEepromCfg_Conf
000022  f7fffffe          BL       MemIfCfg_FLASH_ReadByte
000026  f3600707          BFI      r7,r0,#0,#8
00002a  4680              MOV      r8,r0
;;;110    	LeZR60_u_Xor[1] = MemIfCfg_FLASH_ReadByte((uint32)(CaEepromCfg_Conf[EepromCfg_CardInfoBkUpOne].SecAddr));//读取扇区5数据校验和（存放母卡信息）
00002c  f8d500d4          LDR      r0,[r5,#0xd4]  ; CaEepromCfg_Conf
000030  f7fffffe          BL       MemIfCfg_FLASH_ReadByte
000034  f360270f          BFI      r7,r0,#8,#8
;;;111    	LeZR60_u_Xor[2] = MemIfCfg_FLASH_ReadByte((uint32)(CaEepromCfg_Conf[EepromCfg_CardInfoBkUpTwo].SecAddr));//读取扇区6数据校验和（存放母卡信息）
000038  f8d500e4          LDR      r0,[r5,#0xe4]  ; CaEepromCfg_Conf
00003c  f7fffffe          BL       MemIfCfg_FLASH_ReadByte
000040  f3604717          BFI      r7,r0,#16,#8
;;;112    	(void)MemIf_ReadEE(EepromCfg_CardInfo,CardInfo[0].community_id,sizeof(sminfo1));//读取母卡信息
000044  2251              MOVS     r2,#0x51
000046  4669              MOV      r1,sp
000048  2000              MOVS     r0,#0
00004a  f7fffffe          BL       MemIf_ReadEE
;;;113    	(void)MemIf_ReadEE(EepromCfg_CardInfoBkUpOne,CardInfo[1].community_id,sizeof(sminfo1));//读取母卡信息
00004e  f10d0151          ADD      r1,sp,#0x51
000052  2251              MOVS     r2,#0x51
000054  4689              MOV      r9,r1
000056  200d              MOVS     r0,#0xd
000058  f7fffffe          BL       MemIf_ReadEE
;;;114    	(void)MemIf_ReadEE(EepromCfg_CardInfoBkUpTwo,CardInfo[2].community_id,sizeof(sminfo1));//读取母卡信息
00005c  f10d01a2          ADD      r1,sp,#0xa2
000060  2251              MOVS     r2,#0x51
000062  460d              MOV      r5,r1
000064  200e              MOVS     r0,#0xe
000066  f7fffffe          BL       MemIf_ReadEE
;;;115    	if((LeZR60_u_Xor[0] == GetZR60Ctrl_u_XOR(CardInfo[0].community_id,sizeof(sminfo1))) || \
00006a  2151              MOVS     r1,#0x51
00006c  4668              MOV      r0,sp
00006e  f7fffffe          BL       GetZR60Ctrl_u_XOR
000072  4540              CMP      r0,r8
000074  d00e              BEQ      |L7.148|
;;;116    			(LeZR60_u_Xor[1] == GetZR60Ctrl_u_XOR(CardInfo[1].community_id,sizeof(sminfo1))) || \
000076  2151              MOVS     r1,#0x51
000078  4648              MOV      r0,r9
00007a  f7fffffe          BL       GetZR60Ctrl_u_XOR
00007e  f3c72107          UBFX     r1,r7,#8,#8
000082  4288              CMP      r0,r1
000084  d006              BEQ      |L7.148|
;;;117    			(LeZR60_u_Xor[2] == GetZR60Ctrl_u_XOR(CardInfo[2].community_id,sizeof(sminfo1))))
000086  2151              MOVS     r1,#0x51
000088  4628              MOV      r0,r5
00008a  f7fffffe          BL       GetZR60Ctrl_u_XOR
00008e  0c39              LSRS     r1,r7,#16
000090  4288              CMP      r0,r1
000092  d16f              BNE      |L7.372|
                  |L7.148|
;;;118    	{
;;;119    		printf("\n【3】flash存储的母卡信息数据有效 √");
000094  a089              ADR      r0,|L7.700|
000096  f7fffffe          BL       __2printf
;;;120    		SetMemIf_EEVild(EepromCfg_CardInfo);//数据有效
00009a  2000              MOVS     r0,#0
00009c  f7fffffe          BL       SetMemIf_EEVild
;;;121    		if(LeZR60_u_Xor[0] == GetZR60Ctrl_u_XOR(CardInfo[0].community_id,sizeof(sminfo1)))
0000a0  2151              MOVS     r1,#0x51
0000a2  4668              MOV      r0,sp
0000a4  f7fffffe          BL       GetZR60Ctrl_u_XOR
0000a8  b2f9              UXTB     r1,r7
;;;122    		{
;;;123    			for(Le_u_i = 0U;Le_u_i < 16U;Le_u_i++)
;;;124    			{
;;;125    				sminfo1.community_id[Le_u_i] = CardInfo[0].community_id[Le_u_i];
0000aa  4d8e              LDR      r5,|L7.740|
0000ac  46e8              MOV      r8,sp                 ;104
0000ae  4288              CMP      r0,r1                 ;121
0000b0  d11a              BNE      |L7.232|
0000b2  2000              MOVS     r0,#0                 ;123
0000b4  4643              MOV      r3,r8                 ;104
                  |L7.182|
;;;126    				sminfo1.build_numOne[Le_u_i] = CardInfo[0].build_numOne[Le_u_i];
0000b6  181a              ADDS     r2,r3,r0
0000b8  5c19              LDRB     r1,[r3,r0]            ;125
0000ba  5429              STRB     r1,[r5,r0]            ;125
0000bc  1829              ADDS     r1,r5,r0
0000be  7c17              LDRB     r7,[r2,#0x10]
0000c0  740f              STRB     r7,[r1,#0x10]
;;;127    				sminfo1.build_numTwo[Le_u_i] = CardInfo[0].build_numTwo[Le_u_i];
0000c2  f8927020          LDRB     r7,[r2,#0x20]
0000c6  f8817020          STRB     r7,[r1,#0x20]
;;;128    				sminfo1.build_id[Le_u_i] = CardInfo[0].build_id[Le_u_i];
0000ca  f8927030          LDRB     r7,[r2,#0x30]
0000ce  f8817030          STRB     r7,[r1,#0x30]
;;;129    				sminfo1.door_id[Le_u_i] = CardInfo[0].door_id[Le_u_i];
0000d2  1c40              ADDS     r0,r0,#1
0000d4  f8922040          LDRB     r2,[r2,#0x40]
0000d8  b2c0              UXTB     r0,r0                 ;123
0000da  f8812040          STRB     r2,[r1,#0x40]
0000de  2810              CMP      r0,#0x10              ;123
0000e0  d3e9              BCC      |L7.182|
;;;130    			}
;;;131    			sminfo1.suffix = CardInfo[0].suffix;
0000e2  f89d0050          LDRB     r0,[sp,#0x50]
0000e6  e03d              B        |L7.356|
                  |L7.232|
;;;132    		}
;;;133    		else if(LeZR60_u_Xor[1] == GetZR60Ctrl_u_XOR(CardInfo[1].community_id,sizeof(sminfo1)))
0000e8  2151              MOVS     r1,#0x51
0000ea  4648              MOV      r0,r9
0000ec  f7fffffe          BL       GetZR60Ctrl_u_XOR
0000f0  f3c72107          UBFX     r1,r7,#8,#8
0000f4  4288              CMP      r0,r1
;;;134    		{
;;;135    			for(Le_u_i = 0U;Le_u_i < 16U;Le_u_i++)
;;;136    			{
;;;137    				sminfo1.community_id[Le_u_i] = CardInfo[1].community_id[Le_u_i];
;;;138    				sminfo1.build_numOne[Le_u_i] = CardInfo[1].build_numOne[Le_u_i];
;;;139    				sminfo1.build_numTwo[Le_u_i] = CardInfo[1].build_numTwo[Le_u_i];
;;;140    				sminfo1.build_id[Le_u_i] = CardInfo[1].build_id[Le_u_i];
;;;141    				sminfo1.door_id[Le_u_i] = CardInfo[1].door_id[Le_u_i];
;;;142    			}
;;;143    			sminfo1.suffix = CardInfo[1].suffix;
;;;144    		}
;;;145    		else
;;;146    		{
;;;147    			for(Le_u_i = 0U;Le_u_i < 16U;Le_u_i++)
0000f6  f04f0000          MOV      r0,#0
0000fa  4643              MOV      r3,r8                 ;104
0000fc  d119              BNE      |L7.306|
                  |L7.254|
0000fe  1819              ADDS     r1,r3,r0              ;137
000100  f8112f51          LDRB     r2,[r1,#0x51]!        ;137
000104  542a              STRB     r2,[r5,r0]            ;137
000106  182a              ADDS     r2,r5,r0              ;138
000108  7c0f              LDRB     r7,[r1,#0x10]         ;138
00010a  7417              STRB     r7,[r2,#0x10]         ;138
00010c  f8917020          LDRB     r7,[r1,#0x20]         ;139
000110  f8827020          STRB     r7,[r2,#0x20]         ;139
000114  f8917030          LDRB     r7,[r1,#0x30]         ;140
000118  f8827030          STRB     r7,[r2,#0x30]         ;140
00011c  1c40              ADDS     r0,r0,#1              ;141
00011e  f8911040          LDRB     r1,[r1,#0x40]         ;141
000122  b2c0              UXTB     r0,r0                 ;135
000124  f8821040          STRB     r1,[r2,#0x40]         ;141
000128  2810              CMP      r0,#0x10              ;135
00012a  d3e8              BCC      |L7.254|
00012c  f89d00a1          LDRB     r0,[sp,#0xa1]         ;143
000130  e018              B        |L7.356|
                  |L7.306|
;;;148    			{
;;;149    				sminfo1.community_id[Le_u_i] = CardInfo[2].community_id[Le_u_i];
000132  1819              ADDS     r1,r3,r0
000134  f8112fa2          LDRB     r2,[r1,#0xa2]!
000138  542a              STRB     r2,[r5,r0]
;;;150    				sminfo1.build_numOne[Le_u_i] = CardInfo[2].build_numOne[Le_u_i];
00013a  182a              ADDS     r2,r5,r0
00013c  7c0f              LDRB     r7,[r1,#0x10]
00013e  7417              STRB     r7,[r2,#0x10]
;;;151    				sminfo1.build_numTwo[Le_u_i] = CardInfo[2].build_numTwo[Le_u_i];
000140  f8917020          LDRB     r7,[r1,#0x20]
000144  f8827020          STRB     r7,[r2,#0x20]
;;;152    				sminfo1.build_id[Le_u_i] = CardInfo[2].build_id[Le_u_i];
000148  f8917030          LDRB     r7,[r1,#0x30]
00014c  f8827030          STRB     r7,[r2,#0x30]
;;;153    				sminfo1.door_id[Le_u_i] = CardInfo[2].door_id[Le_u_i];
000150  1c40              ADDS     r0,r0,#1
000152  f8911040          LDRB     r1,[r1,#0x40]
000156  b2c0              UXTB     r0,r0                 ;147
000158  f8821040          STRB     r1,[r2,#0x40]
00015c  2810              CMP      r0,#0x10              ;147
00015e  d3e8              BCC      |L7.306|
;;;154    			}
;;;155    			sminfo1.suffix = CardInfo[2].suffix;
000160  f89d00f2          LDRB     r0,[sp,#0xf2]
                  |L7.356|
000164  f8850050          STRB     r0,[r5,#0x50]         ;143
;;;156    		}
;;;157    		read_init_sminfo(&sminfo1,&sm);//读取母卡文件的数据，并截取ic卡小区号，楼栋号，单元号的前8位用于sm3密码验证
000168  495f              LDR      r1,|L7.744|
00016a  485e              LDR      r0,|L7.740|
00016c  f7fffffe          BL       read_init_sminfo
000170  e003              B        |L7.378|
000172  e7ff              B        |L7.372|
                  |L7.372|
;;;158    	}
;;;159    	else
;;;160    	{
;;;161    		printf("flash存储的母卡信息数据无效 X");
000174  a05d              ADR      r0,|L7.748|
000176  f7fffffe          BL       __2printf
                  |L7.378|
;;;162    	}
;;;163    	
;;;164    	(void)MemIf_ReadEE(EepromCfg_MacInfo,Le_u_MacAddr,sizeof(Se_u_MacAddr));//读取mac地址信息
00017a  220c              MOVS     r2,#0xc
00017c  a93d              ADD      r1,sp,#0xf4
00017e  2002              MOVS     r0,#2
000180  f7fffffe          BL       MemIf_ReadEE
;;;165    	(void)MemIf_ReadEE(EepromCfg_MacInfoBkUpOne,Le_u_MacAddrBkUpOne,sizeof(Se_u_MacAddr));//读取mac地址信息
000184  220c              MOVS     r2,#0xc
000186  a943              ADD      r1,sp,#0x10c
000188  200f              MOVS     r0,#0xf
00018a  f7fffffe          BL       MemIf_ReadEE
;;;166    	(void)MemIf_ReadEE(EepromCfg_MacInfoBkUpTwo,Le_u_MacAddrBkUpTwo,sizeof(Se_u_MacAddr));//读取mac地址信息
00018e  220c              MOVS     r2,#0xc
000190  a940              ADD      r1,sp,#0x100
000192  2010              MOVS     r0,#0x10
000194  f7fffffe          BL       MemIf_ReadEE
;;;167    	if((((1U == ZR60Ctrl_u_ArrayCmp(Le_u_MacAddr,Le_u_MacAddrBkUpOne,sizeof(Se_u_MacAddr))) || \
000198  220c              MOVS     r2,#0xc
00019a  a943              ADD      r1,sp,#0x10c
00019c  a83d              ADD      r0,sp,#0xf4
00019e  f7fffffe          BL       ZR60Ctrl_u_ArrayCmp
;;;168    			(1U == ZR60Ctrl_u_ArrayCmp(Le_u_MacAddr,Le_u_MacAddrBkUpTwo,sizeof(Se_u_MacAddr)))) && \
;;;169    			(1U != ZR60Ctrl_u_ArrayCmp(Le_u_MacAddr,Se_u_MacAddr,sizeof(Se_u_MacAddr)))) || \
;;;170    			((1U == ZR60Ctrl_u_ArrayCmp(Le_u_MacAddrBkUpOne,Le_u_MacAddrBkUpTwo,sizeof(Se_u_MacAddr))) && \
;;;171    			(1U != ZR60Ctrl_u_ArrayCmp(Le_u_MacAddrBkUpTwo,Se_u_MacAddr,sizeof(Se_u_MacAddr)))))
;;;172    	{
;;;173    		printf("\n【6】flash存储的mac地址有效  √\n");
;;;174    		if((1U == ZR60Ctrl_u_ArrayCmp(Le_u_MacAddr,Le_u_MacAddrBkUpOne,sizeof(Se_u_MacAddr))))
;;;175    		{
;;;176    			for(Le_u_i = 0U;Le_u_i < sizeof(Se_u_MacAddr);Le_u_i++)
;;;177    			{
;;;178    				Se_u_MacAddr[Le_u_i] = Le_u_MacAddr[Le_u_i];
;;;179    				if(Se_u_MacAddr[Le_u_i] <=9)
;;;180    				{
;;;181    					DeviceInit.Blemac[Le_u_i] = Se_u_MacAddr[Le_u_i] + 0x30;
;;;182    				}
;;;183    				else
;;;184    				{
;;;185    					DeviceInit.Blemac[Le_u_i] = Se_u_MacAddr[Le_u_i] + 0x37;
;;;186    				}
;;;187    			}
;;;188    		}
;;;189    		else
;;;190    		{
;;;191    			for(Le_u_i = 0U;Le_u_i < sizeof(Se_u_MacAddr);Le_u_i++)
;;;192    			{
;;;193    				Se_u_MacAddr[Le_u_i] = Le_u_MacAddrBkUpTwo[Le_u_i];
;;;194    				if((Se_u_MacAddr[Le_u_i] >=0)&&(Se_u_MacAddr[Le_u_i] <=9))
;;;195    				{
;;;196    					DeviceInit.Blemac[Le_u_i] = Se_u_MacAddr[Le_u_i] + 0x30;
;;;197    				}
;;;198    				else
;;;199    				{
;;;200    					DeviceInit.Blemac[Le_u_i] = Se_u_MacAddr[Le_u_i] + 0x37;
;;;201    				}
;;;202    			}
;;;203    		}
;;;204    		Se_u_BleMacFlg = 1U;
0001a2  4d5a              LDR      r5,|L7.780|
0001a4  2801              CMP      r0,#1                 ;167
0001a6  d006              BEQ      |L7.438|
0001a8  220c              MOVS     r2,#0xc               ;168
0001aa  a940              ADD      r1,sp,#0x100          ;168
0001ac  a83d              ADD      r0,sp,#0xf4           ;168
0001ae  f7fffffe          BL       ZR60Ctrl_u_ArrayCmp
0001b2  2801              CMP      r0,#1                 ;168
0001b4  d106              BNE      |L7.452|
                  |L7.438|
0001b6  220c              MOVS     r2,#0xc               ;169
0001b8  4955              LDR      r1,|L7.784|
0001ba  a83d              ADD      r0,sp,#0xf4           ;169
0001bc  f7fffffe          BL       ZR60Ctrl_u_ArrayCmp
0001c0  2801              CMP      r0,#1                 ;169
0001c2  d10d              BNE      |L7.480|
                  |L7.452|
0001c4  220c              MOVS     r2,#0xc               ;170
0001c6  a940              ADD      r1,sp,#0x100          ;170
0001c8  a843              ADD      r0,sp,#0x10c          ;170
0001ca  f7fffffe          BL       ZR60Ctrl_u_ArrayCmp
0001ce  2801              CMP      r0,#1                 ;170
0001d0  d138              BNE      |L7.580|
0001d2  220c              MOVS     r2,#0xc               ;171
0001d4  494e              LDR      r1,|L7.784|
0001d6  a840              ADD      r0,sp,#0x100          ;171
0001d8  f7fffffe          BL       ZR60Ctrl_u_ArrayCmp
0001dc  2801              CMP      r0,#1                 ;171
0001de  d031              BEQ      |L7.580|
                  |L7.480|
0001e0  a04c              ADR      r0,|L7.788|
0001e2  f7fffffe          BL       __2printf
0001e6  220c              MOVS     r2,#0xc               ;174
0001e8  a943              ADD      r1,sp,#0x10c          ;174
0001ea  a83d              ADD      r0,sp,#0xf4           ;174
0001ec  f7fffffe          BL       ZR60Ctrl_u_ArrayCmp
0001f0  4b47              LDR      r3,|L7.784|
0001f2  4a51              LDR      r2,|L7.824|
0001f4  2801              CMP      r0,#1                 ;174
0001f6  f04f0000          MOV      r0,#0                 ;191
0001fa  d008              BEQ      |L7.526|
0001fc  ac40              ADD      r4,sp,#0x100          ;107
                  |L7.510|
0001fe  eb020600          ADD      r6,r2,r0              ;200
000202  5c21              LDRB     r1,[r4,r0]            ;193
000204  5419              STRB     r1,[r3,r0]            ;193
000206  2909              CMP      r1,#9                 ;194
000208  d812              BHI      |L7.560|
00020a  3130              ADDS     r1,r1,#0x30           ;194
00020c  e011              B        |L7.562|
                  |L7.526|
00020e  ac3d              ADD      r4,sp,#0xf4           ;105
                  |L7.528|
000210  eb020600          ADD      r6,r2,r0              ;185
000214  5c21              LDRB     r1,[r4,r0]            ;178
000216  5419              STRB     r1,[r3,r0]            ;178
000218  2909              CMP      r1,#9                 ;179
00021a  d801              BHI      |L7.544|
00021c  3130              ADDS     r1,r1,#0x30           ;179
00021e  e000              B        |L7.546|
                  |L7.544|
000220  3137              ADDS     r1,r1,#0x37           ;181
                  |L7.546|
000222  1c40              ADDS     r0,r0,#1              ;185
000224  b2c0              UXTB     r0,r0                 ;176
000226  f8861034          STRB     r1,[r6,#0x34]         ;185
00022a  280c              CMP      r0,#0xc               ;176
00022c  d3f0              BCC      |L7.528|
00022e  e006              B        |L7.574|
                  |L7.560|
000230  3137              ADDS     r1,r1,#0x37           ;176
                  |L7.562|
000232  1c40              ADDS     r0,r0,#1              ;200
000234  b2c0              UXTB     r0,r0                 ;191
000236  f8861034          STRB     r1,[r6,#0x34]         ;200
00023a  280c              CMP      r0,#0xc               ;191
00023c  d3df              BCC      |L7.510|
                  |L7.574|
00023e  2001              MOVS     r0,#1
000240  7028              STRB     r0,[r5,#0]
000242  e02e              B        |L7.674|
                  |L7.580|
;;;205    	}
;;;206    	else
;;;207    	{//读取蓝牙mac地址
;;;208    		SetUartCmn_BluetoothTxMsg("AT+ADDR?",strlen("AT+ADDR?"));//获取蓝牙模块MAC地址
000244  2108              MOVS     r1,#8
000246  a03d              ADR      r0,|L7.828|
000248  f7fffffe          BL       SetUartCmn_BluetoothTxMsg
                  |L7.588|
;;;209    		while((Se_u_BleMacFlg != 1) && (--Le_dw_WaitTimer));//等待获取蓝牙mac地址
00024c  7828              LDRB     r0,[r5,#0]  ; Se_u_BleMacFlg
00024e  2801              CMP      r0,#1
000250  d006              BEQ      |L7.608|
000252  1e60              SUBS     r0,r4,#1
000254  f14631ff          ADC      r1,r6,#0xffffffff
000258  4604              MOV      r4,r0
00025a  460e              MOV      r6,r1
00025c  4308              ORRS     r0,r0,r1
00025e  d1f5              BNE      |L7.588|
                  |L7.608|
;;;210    
;;;211    		if(Se_u_BleMacFlg == 1)
000260  7828              LDRB     r0,[r5,#0]  ; Se_u_BleMacFlg
000262  2801              CMP      r0,#1
000264  d007              BEQ      |L7.630|
;;;212    		{
;;;213    			printf("获取蓝牙mac地址成功\n");
;;;214    			(void)MemIf_WriteEE(EepromCfg_MacInfo,Se_u_MacAddr,sizeof(Se_u_MacAddr));//mac地址写入eeprom/flash
;;;215    			(void)MemIf_WriteEE(EepromCfg_MacInfoBkUpOne,Se_u_MacAddr,sizeof(Se_u_MacAddr));//mac地址写入eeprom/flash	
;;;216    			(void)MemIf_WriteEE(EepromCfg_MacInfoBkUpTwo,Se_u_MacAddr,sizeof(Se_u_MacAddr));//mac地址写入eeprom/flash	
;;;217    		}
;;;218    		else
;;;219    		{
;;;220    			printf("获取蓝牙mac地址失败  X\n");
000266  a038              ADR      r0,|L7.840|
000268  f7fffffe          BL       __2printf
;;;221    			if(hym8563_read_datetime(&Ve_h_tm) == 0)
00026c  483c              LDR      r0,|L7.864|
00026e  f7fffffe          BL       hym8563_read_datetime
000272  b198              CBZ      r0,|L7.668|
000274  e015              B        |L7.674|
                  |L7.630|
000276  a03b              ADR      r0,|L7.868|
000278  f7fffffe          BL       __2printf
00027c  220c              MOVS     r2,#0xc               ;214
00027e  4924              LDR      r1,|L7.784|
000280  2002              MOVS     r0,#2                 ;214
000282  f7fffffe          BL       MemIf_WriteEE
000286  220c              MOVS     r2,#0xc               ;215
000288  4921              LDR      r1,|L7.784|
00028a  200f              MOVS     r0,#0xf               ;215
00028c  f7fffffe          BL       MemIf_WriteEE
000290  220c              MOVS     r2,#0xc               ;216
000292  491f              LDR      r1,|L7.784|
000294  2010              MOVS     r0,#0x10              ;216
000296  f7fffffe          BL       MemIf_WriteEE
00029a  e002              B        |L7.674|
                  |L7.668|
;;;222    			{
;;;223    				printf("读取当前时间成功\n");
00029c  a037              ADR      r0,|L7.892|
00029e  f7fffffe          BL       __2printf
                  |L7.674|
;;;224    			}
;;;225    		}
;;;226    	}
;;;227    	dw_5msflag_T1 = GetSysTick_Timer();
0002a2  f7fffffe          BL       GetSysTick_Timer
0002a6  4910              LDR      r1,|L7.744|
0002a8  3940              SUBS     r1,r1,#0x40
;;;228    	dw_5msflag_T2 = dw_5msflag_T1;
0002aa  62c8              STR      r0,[r1,#0x2c]  ; dw_5msflag_T1
0002ac  6308              STR      r0,[r1,#0x30]  ; dw_5msflag_T2
;;;229    }
0002ae  b047              ADD      sp,sp,#0x11c
0002b0  e8bd83f0          POP      {r4-r9,pc}
;;;230    
                          ENDP

                  |L7.692|
                          DCD      0x001fffff
                  |L7.696|
                          DCD      CaEepromCfg_Conf
                  |L7.700|
0002bc  0aa1be33          DCB      "\n",161,190,"3",161,191,"flash",180,230,180,162,181,196
0002c0  a1bf666c
0002c4  617368b4
0002c8  e6b4a2b5
0002cc  c4      
0002cd  c4b8bfa8          DCB      196,184,191,168,208,197,207,162,202,253,190,221,211,208,208
0002d1  d0c5cfa2
0002d5  cafdbedd
0002d9  d3d0d0  
0002dc  a720a1cc          DCB      167," ",161,204,0
0002e0  00      
0002e1  00                DCB      0
0002e2  00                DCB      0
0002e3  00                DCB      0
                  |L7.740|
                          DCD      sminfo1
                  |L7.744|
                          DCD      ||.data||+0x40
                  |L7.748|
0002ec  666c6173          DCB      "flash",180,230,180,162,181,196,196,184,191,168,208,197,207
0002f0  68b4e6b4
0002f4  a2b5c4c4
0002f8  b8bfa8d0
0002fc  c5cf    
0002fe  a2cafdbe          DCB      162,202,253,190,221,206,222,208,167," X",0
000302  ddceded0
000306  a7205800
00030a  00                DCB      0
00030b  00                DCB      0
                  |L7.780|
                          DCD      Se_u_BleMacFlg
                  |L7.784|
                          DCD      Se_u_MacAddr
                  |L7.788|
000314  0aa1be36          DCB      "\n",161,190,"6",161,191,"flash",180,230,180,162,181,196
000318  a1bf666c
00031c  617368b4
000320  e6b4a2b5
000324  c4      
000325  6d6163b5          DCB      "mac",181,216,214,183,211,208,208,167,"  ",161,204,"\n",0
000329  d8d6b7d3
00032d  d0d0a720
000331  20a1cc0a
000335  00      
000336  00                DCB      0
000337  00                DCB      0
                  |L7.824|
                          DCD      DeviceInit
                  |L7.828|
00033c  41542b41          DCB      "AT+ADDR?",0
000340  4444523f
000344  00      
000345  00                DCB      0
000346  00                DCB      0
000347  00                DCB      0
                  |L7.840|
000348  bbf1c8a1          DCB      187,241,200,161,192,182,209,192,"mac",181,216,214,183,202
00034c  c0b6d1c0
000350  6d6163b5
000354  d8d6b7ca
000358  a7b0dc20          DCB      167,176,220,"  X\n",0
00035c  20580a00
                  |L7.864|
                          DCD      ||.bss||+0x10
                  |L7.868|
000364  bbf1c8a1          DCB      187,241,200,161,192,182,209,192,"mac",181,216,214,183,179
000368  c0b6d1c0
00036c  6d6163b5
000370  d8d6b7b3
000374  c9b9a60a          DCB      201,185,166,"\n",0
000378  00      
000379  00                DCB      0
00037a  00                DCB      0
00037b  00                DCB      0
                  |L7.892|
00037c  b6c1c8a1          DCB      182,193,200,161,181,177,199,176,202,177,188,228,179,201,185
000380  b5b1c7b0
000384  cab1bce4
000388  b3c9b9  
00038b  a60a00            DCB      166,"\n",0
00038e  00                DCB      0
00038f  00                DCB      0

                          AREA ||i.PasswordAauth_MainFunction||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  PasswordAauth_MainFunction PROC
;;;798    ******************************************************/
;;;799    static void  PasswordAauth_MainFunction(void)//密码验证
000000  b570              PUSH     {r4-r6,lr}
;;;800    {
;;;801    	struct rtc_time tm;
;;;802    	uint64_t Time;
;;;803    	//char Le_u_UnlockInfo[32U] = {0x00};
;;;804    	
;;;805    	if((SeCardSet_u_PasswordKeySt) == STD_ACTIVE)//按键
000002  4e3e              LDR      r6,|L8.252|
000004  2501              MOVS     r5,#1
000006  2400              MOVS     r4,#0
000008  7bf0              LDRB     r0,[r6,#0xf]  ; SeCardSet_u_PasswordKeySt
00000a  b08c              SUB      sp,sp,#0x30           ;800
00000c  2801              CMP      r0,#1
00000e  d135              BNE      |L8.124|
;;;806    	{
;;;807    		SeCardSet_u_PasswordKeySt = 0U;
000010  73f4              STRB     r4,[r6,#0xf]
;;;808    		//读取触摸按键值的iic接口需要配置
;;;809    		if(i2c_master_reg8_recv(0x6E, 0xAA, buf, 2) == 0 && flag == 1)
000012  2302              MOVS     r3,#2
000014  f1060220          ADD      r2,r6,#0x20
000018  21aa              MOVS     r1,#0xaa
00001a  206e              MOVS     r0,#0x6e
00001c  f7fffffe          BL       i2c_master_reg8_recv
000020  bb60              CBNZ     r0,|L8.124|
000022  7af0              LDRB     r0,[r6,#0xb]  ; flag
000024  2801              CMP      r0,#1
000026  d129              BNE      |L8.124|
;;;810    		{
;;;811    			sec_count = 0;
;;;812    			key = buf[1];
000028  f1060120          ADD      r1,r6,#0x20
00002c  70b4              STRB     r4,[r6,#2]            ;811
00002e  7848              LDRB     r0,[r1,#1]  ; buf
;;;813    			key = (key << 8) | buf[0];
000030  7809              LDRB     r1,[r1,#0]  ; buf
000032  ea512000          ORRS     r0,r1,r0,LSL #8
000036  8470              STRH     r0,[r6,#0x22]
;;;814    			if(key !=0)
000038  d020              BEQ      |L8.124|
;;;815    			{
;;;816    				value = ZR60Ctrl_TonesPlay(key);
00003a  f7fffffe          BL       ZR60Ctrl_TonesPlay
00003e  84b0              STRH     r0,[r6,#0x24]
;;;817    				if( value != 0xff)
000040  28ff              CMP      r0,#0xff
000042  d01b              BEQ      |L8.124|
;;;818    				{
;;;819    					if( value == 'C')
000044  2843              CMP      r0,#0x43
000046  d004              BEQ      |L8.82|
;;;820    					{
;;;821    						key_num = 0;
;;;822    						sm3_flag = 1;		
;;;823    					}
;;;824    					else if( value == 'A')
000048  2841              CMP      r0,#0x41
00004a  d004              BEQ      |L8.86|
;;;825    					{ 												
;;;826    						if(key_num == 6)
;;;827    						{
;;;828    							strncpy(key_buf,test_buf,6);
;;;829    							key_flag = 1;
;;;830    							state = 0;	
;;;831    						}
;;;832    						key_num = 0;
;;;833    						sm3_flag = 0;												 
;;;834    					}
;;;835    					else
;;;836    					{	
;;;837    						if(key_num < sizeof(test_buf))
00004c  7b31              LDRB     r1,[r6,#0xc]  ; key_num
00004e  2910              CMP      r1,#0x10
000050  d30e              BCC      |L8.112|
                  |L8.82|
000052  7334              STRB     r4,[r6,#0xc]          ;821
000054  e010              B        |L8.120|
                  |L8.86|
000056  7b30              LDRB     r0,[r6,#0xc]          ;826  ; key_num
000058  2806              CMP      r0,#6                 ;826
00005a  d106              BNE      |L8.106|
00005c  2206              MOVS     r2,#6                 ;828
00005e  4928              LDR      r1,|L8.256|
000060  4828              LDR      r0,|L8.260|
000062  f7fffffe          BL       strncpy
000066  7375              STRB     r5,[r6,#0xd]          ;829
000068  7074              STRB     r4,[r6,#1]            ;830
                  |L8.106|
00006a  7334              STRB     r4,[r6,#0xc]          ;832
00006c  7034              STRB     r4,[r6,#0]            ;833
00006e  e004              B        |L8.122|
                  |L8.112|
;;;838    						{
;;;839    							test_buf[key_num] = value;
000070  4a23              LDR      r2,|L8.256|
000072  5450              STRB     r0,[r2,r1]
000074  1c49              ADDS     r1,r1,#1
;;;840    							key_num++;
000076  7331              STRB     r1,[r6,#0xc]
                  |L8.120|
;;;841    						}
;;;842    						else
;;;843    						{
;;;844    							key_num = 0;
;;;845    						}
;;;846    						sm3_flag = 1;
000078  7035              STRB     r5,[r6,#0]
                  |L8.122|
;;;847    					}											
;;;848    					state = 1;
00007a  7075              STRB     r5,[r6,#1]
                  |L8.124|
;;;849    				}
;;;850    			}	
;;;851    		}
;;;852    	}
;;;853    
;;;854    	if (key_flag == 1)//按键6位密码标志
00007c  7b70              LDRB     r0,[r6,#0xd]  ; key_flag
00007e  2801              CMP      r0,#1
000080  d122              BNE      |L8.200|
;;;855    	{
;;;856    		key_flag = 0;
000082  7374              STRB     r4,[r6,#0xd]
;;;857    		(void)hym8563_read_datetime(&tm);//读取hym8563日期时间
000084  4668              MOV      r0,sp
000086  f7fffffe          BL       hym8563_read_datetime
;;;858    		SeCardSet_dw_nowtime = GetTick(&tm);
00008a  4668              MOV      r0,sp
00008c  f7fffffe          BL       GetTick
;;;859    		Se_u_PasswordCmpFlag = sm3_time_PasswordAuth(SeCardSet_dw_nowtime,&sm,TIME_STAMP_PASSWORD,machine_type);//生成密码比对
000090  491d              LDR      r1,|L8.264|
000092  63b0              STR      r0,[r6,#0x38]  ; SeCardSet_dw_nowtime
000094  780b              LDRB     r3,[r1,#0]  ; machine_type
000096  4919              LDR      r1,|L8.252|
000098  2200              MOVS     r2,#0
00009a  3140              ADDS     r1,r1,#0x40
00009c  f7fffffe          BL       sm3_time_PasswordAuth
0000a0  7470              STRB     r0,[r6,#0x11]
;;;860    		if(Se_u_PasswordCmpFlag != 1)
0000a2  2801              CMP      r0,#1
0000a4  d001              BEQ      |L8.170|
;;;861    		{
;;;862    			SetAudioIO_PlayFile(AudioIO_ErrKey);		
0000a6  2004              MOVS     r0,#4
0000a8  e024              B        |L8.244|
                  |L8.170|
;;;863    		}
;;;864    		else
;;;865    		{	
;;;866    			if((0U == SeZR60_u_DoorLockRelaySt) && \
0000aa  7930              LDRB     r0,[r6,#4]  ; SeZR60_u_DoorLockRelaySt
0000ac  b918              CBNZ     r0,|L8.182|
;;;867    					(STD_OFF == GetPSFltr_u_PeriSt(DoorLock)))
0000ae  2000              MOVS     r0,#0
0000b0  f7fffffe          BL       GetPSFltr_u_PeriSt
0000b4  b150              CBZ      r0,|L8.204|
                  |L8.182|
;;;868    			{//门锁关闭状态
;;;869    				/*记录开锁信息*/
;;;870    				hym8563_Currenttime(&Time);
;;;871    				WrUnlockLogCache_Queue(&Time,"unknown",UNLOCKLOGCACHE_PASSWORD);//开锁日志记录写入缓存队列
;;;872    					
;;;873    				USART_PRINTF_S("临时密码 -> 开门");
;;;874    				//LED_RED;
;;;875    				LOCK_ON;
;;;876    				SeZR60_u_DoorLockRelaySt = 1U;
;;;877    				Se_w_LockDoorTimer = 0;
;;;878    				memset(key_buf,0,6);
;;;879    				SetAudioIO_PlayFile(AudioIO_WelBack);
;;;880    			}
;;;881    			else
;;;882    			{
;;;883    				if(STD_ON == GetPSFltr_u_PeriSt(DoorLock))
0000b6  2000              MOVS     r0,#0
0000b8  f7fffffe          BL       GetPSFltr_u_PeriSt
0000bc  2801              CMP      r0,#1
0000be  d103              BNE      |L8.200|
;;;884    				{
;;;885    					USART_PRINTF_S("门锁已开");
0000c0  a112              ADR      r1,|L8.268|
0000c2  a015              ADR      r0,|L8.280|
0000c4  f7fffffe          BL       __2printf
                  |L8.200|
;;;886    				}
;;;887    			}
;;;888    		}
;;;889    	}		
;;;890    }
0000c8  b00c              ADD      sp,sp,#0x30
0000ca  bd70              POP      {r4-r6,pc}
                  |L8.204|
0000cc  a80a              ADD      r0,sp,#0x28           ;870
0000ce  f7fffffe          BL       hym8563_Currenttime
0000d2  2203              MOVS     r2,#3                 ;871
0000d4  a111              ADR      r1,|L8.284|
0000d6  a80a              ADD      r0,sp,#0x28           ;871
0000d8  f7fffffe          BL       WrUnlockLogCache_Queue
0000dc  a111              ADR      r1,|L8.292|
0000de  a00e              ADR      r0,|L8.280|
0000e0  f7fffffe          BL       __2printf
0000e4  4814              LDR      r0,|L8.312|
0000e6  8005              STRH     r5,[r0,#0]            ;875
0000e8  4806              LDR      r0,|L8.260|
0000ea  7135              STRB     r5,[r6,#4]            ;876
0000ec  82f4              STRH     r4,[r6,#0x16]         ;877
0000ee  6004              STR      r4,[r0,#0]            ;878  ; key_buf
0000f0  8084              STRH     r4,[r0,#4]            ;878
0000f2  2003              MOVS     r0,#3                 ;879
                  |L8.244|
0000f4  f7fffffe          BL       SetAudioIO_PlayFile
0000f8  e7e6              B        |L8.200|
;;;891    
                          ENDP

0000fa  0000              DCW      0x0000
                  |L8.252|
                          DCD      ||.data||
                  |L8.256|
                          DCD      ||.bss||
                  |L8.260|
                          DCD      key_buf
                  |L8.264|
                          DCD      machine_type
                  |L8.268|
00010c  c3c5cbf8          DCB      195,197,203,248,210,209,191,170,0
000110  d2d1bfaa
000114  00      
000115  00                DCB      0
000116  00                DCB      0
000117  00                DCB      0
                  |L8.280|
000118  25730a00          DCB      "%s\n",0
                  |L8.284|
00011c  756e6b6e          DCB      "unknown",0
000120  6f776e00
                  |L8.292|
000124  c1d9cab1          DCB      193,217,202,177,195,220,194,235," -> ",191,170,195,197,0
000128  c3dcc2eb
00012c  202d3e20
000130  bfaac3c5
000134  00      
000135  00                DCB      0
000136  00                DCB      0
000137  00                DCB      0
                  |L8.312|
                          DCD      0x40020418

                          AREA ||i.SetZR60Ctrl_u_PasswordKey||, CODE, READONLY, ALIGN=2

                  SetZR60Ctrl_u_PasswordKey PROC
;;;1075   ******************************************************/
;;;1076   void SetZR60Ctrl_u_PasswordKey(void)
000000  4901              LDR      r1,|L9.8|
;;;1077   {
;;;1078   	SeCardSet_u_PasswordKeySt = 1U;
000002  2001              MOVS     r0,#1
000004  73c8              STRB     r0,[r1,#0xf]
;;;1079   }
000006  4770              BX       lr
;;;1080   
                          ENDP

                  |L9.8|
                          DCD      ||.data||

                          AREA ||i.TskZR60Ctrl_MainFunction||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  TskZR60Ctrl_MainFunction PROC
;;;241    ******************************************************/
;;;242    void TskZR60Ctrl_MainFunction(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;243    { 
000004  b0ad              SUB      sp,sp,#0xb4
;;;244    	uint16_t Le_w_i;
;;;245    	struct rtc_time Le_h_tm;
;;;246    	char Le_u_UnlockInfo[32U] = {0};
000006  2120              MOVS     r1,#0x20
000008  a814              ADD      r0,sp,#0x50
00000a  f7fffffe          BL       __aeabi_memclr4
00000e  2000              MOVS     r0,#0
000010  e9cd001c          STRD     r0,r0,[sp,#0x70]
;;;247    	uint64_t Time = 0U;
;;;248    	
;;;249    	/*************************************************
;;;250    	*		            母卡设置
;;;251    	*************************************************/	
;;;252    	CardSet_MainFunction();//母卡设置	
000014  f7fffffe          BL       CardSet_MainFunction
;;;253    	
;;;254    	/*************************************************
;;;255    	*		            ic卡开锁
;;;256    	*************************************************/
;;;257    	/*设置读ic卡密码*/
;;;258    	if((0U == ZR60_CTRL_SETKEY) && (1U == GetUartCmn_u_TxIdle()))
000018  48fe              LDR      r0,|L10.1044|
00001a  7800              LDRB     r0,[r0,#0]  ; Sereadcard_SetKeyflag
00001c  b928              CBNZ     r0,|L10.42|
00001e  f7fffffe          BL       GetUartCmn_u_TxIdle
000022  2801              CMP      r0,#1
000024  d101              BNE      |L10.42|
;;;259    	{
;;;260    		Setreadcard_Key();//设置读卡密码
000026  f7fffffe          BL       Setreadcard_Key
                  |L10.42|
;;;261    	}
;;;262    	
;;;263    	/*处理接收的ic卡数据*/
;;;264    	if(GetUartCmn_u_RxMsgRenew() == 1)//收到读卡器发来的一帧数据
00002a  f7fffffe          BL       GetUartCmn_u_RxMsgRenew
00002e  2801              CMP      r0,#1
000030  d116              BNE      |L10.96|
;;;265    	{
;;;266    		GetUartCmn_u_RxMsg(rebackinfo.Dt.Block);
000032  48f9              LDR      r0,|L10.1048|
000034  f7fffffe          BL       GetUartCmn_u_RxMsg
;;;267    		if(rebackinfo.Dt.DtSrt.Seqnr == 0xFF)
000038  48f7              LDR      r0,|L10.1048|
00003a  7801              LDRB     r1,[r0,#0]  ; rebackinfo
00003c  29ff              CMP      r1,#0xff
00003e  d024              BEQ      |L10.138|
;;;268    		{//在线升级，从机响应
;;;269    			Setstm8_fm17550_SlaveReplySt(rebackinfo.Dt.DtSrt.St);
;;;270    		}
;;;271    		else
;;;272    		{
;;;273    			handleMsg(rebackinfo); //处理读卡数据	
000040  f1000110          ADD      r1,r0,#0x10
000044  222b              MOVS     r2,#0x2b
000046  4668              MOV      r0,sp
000048  f7fffffe          BL       __aeabi_memcpy
00004c  223b              MOVS     r2,#0x3b
00004e  49f2              LDR      r1,|L10.1048|
000050  a81e              ADD      r0,sp,#0x78
000052  f7fffffe          BL       __aeabi_memcpy
000056  ac1e              ADD      r4,sp,#0x78
000058  e894000f          LDM      r4,{r0-r3}
00005c  f7fffffe          BL       handleMsg
                  |L10.96|
;;;274    		}
;;;275    	}
;;;276    	
;;;277    	Unlock_MainFunction();//ic卡开锁	
000060  f7fffffe          BL       Unlock_MainFunction
;;;278    	
;;;279    	if(ZR60_CTRL_AUTOSEARCHCARD == 1)//自动寻卡设置
000064  4ded              LDR      r5,|L10.1052|
000066  7828              LDRB     r0,[r5,#0]  ; isSectedCard_flag
;;;280    	{
;;;281    		if(w_SetAutoCard_DelayTime >= 500)//延时2.5s下发自动寻卡设置
000068  2400              MOVS     r4,#0
00006a  4eed              LDR      r6,|L10.1056|
00006c  f44f7afa          MOV      r10,#0x1f4
000070  2801              CMP      r0,#1                 ;279
000072  d00e              BEQ      |L10.146|
;;;282    		{
;;;283    			if(1U == GetUartCmn_u_TxIdle())//串口tx空闲
;;;284    			{
;;;285    				w_SetAutoCard_DelayTime = 0U;
;;;286    				Setreadcard_AutoSearchCard();//下发自动寻卡指令
;;;287    				ZR60_CTRL_AUTOSEARCHCARD = 0;
;;;288    			}
;;;289    		}
;;;290    		else
;;;291    		{
;;;292    			w_SetAutoCard_DelayTime++;
;;;293    		}
;;;294    	}
;;;295    	else
;;;296    	{
;;;297    		w_SetAutoCard_DelayTime = 0U;
000074  8334              STRH     r4,[r6,#0x18]
                  |L10.118|
;;;298    	}
;;;299    	/*************************************************
;;;300    	*		            临时密码开锁
;;;301    	*************************************************/	
;;;302    	PasswordAauth_MainFunction();//临时密码开锁
000076  f7fffffe          BL       PasswordAauth_MainFunction
;;;303    	
;;;304    	/*************************************************
;;;305    	*		            门内开关操作
;;;306    	*************************************************/			
;;;307    	if( GetBtnFltr_u_BtnShrtValid(Key_Unlock) == STD_ACTIVE)//门内开关操作
00007a  2001              MOVS     r0,#1
00007c  f7fffffe          BL       GetBtnFltr_u_BtnShrtValid
;;;308    	{
;;;309    		ClrBtnFltr_BtnShrtValid(Key_Unlock);
;;;310    		if((0U == SeZR60_u_DoorLockRelaySt) && \
;;;311    				(STD_OFF == GetPSFltr_u_PeriSt(DoorLock)))
;;;312    		{//门锁关闭状态
;;;313    			/*记录开锁信息*/
;;;314    			hym8563_Currenttime(&Time);
;;;315    			WrUnlockLogCache_Queue(&Time,"unknown",UNLOCKLOGCACHE_DOORSWITCH);//开锁日志记录写入缓存队列
;;;316    
;;;317    			USART_PRINTF_S("门内开关 -> 开门");
;;;318    			//LED_RED;
;;;319    			LOCK_ON;
000080  4fe8              LDR      r7,|L10.1060|
000082  2501              MOVS     r5,#1                 ;307
000084  2801              CMP      r0,#1                 ;307
000086  d013              BEQ      |L10.176|
000088  e038              B        |L10.252|
                  |L10.138|
00008a  7840              LDRB     r0,[r0,#1]            ;269  ; rebackinfo
00008c  f7fffffe          BL       Setstm8_fm17550_SlaveReplySt
000090  e7e6              B        |L10.96|
                  |L10.146|
000092  8b30              LDRH     r0,[r6,#0x18]         ;281  ; w_SetAutoCard_DelayTime
000094  4550              CMP      r0,r10                ;281
000096  d308              BCC      |L10.170|
000098  f7fffffe          BL       GetUartCmn_u_TxIdle
00009c  2801              CMP      r0,#1                 ;283
00009e  d1ea              BNE      |L10.118|
0000a0  8334              STRH     r4,[r6,#0x18]         ;285
0000a2  f7fffffe          BL       Setreadcard_AutoSearchCard
0000a6  702c              STRB     r4,[r5,#0]            ;287
0000a8  e7e5              B        |L10.118|
                  |L10.170|
0000aa  1c40              ADDS     r0,r0,#1              ;287
0000ac  8330              STRH     r0,[r6,#0x18]         ;292
0000ae  e7e2              B        |L10.118|
                  |L10.176|
0000b0  2001              MOVS     r0,#1                 ;309
0000b2  f7fffffe          BL       ClrBtnFltr_BtnShrtValid
0000b6  7930              LDRB     r0,[r6,#4]            ;310  ; SeZR60_u_DoorLockRelaySt
0000b8  b918              CBNZ     r0,|L10.194|
0000ba  2000              MOVS     r0,#0                 ;311
0000bc  f7fffffe          BL       GetPSFltr_u_PeriSt
0000c0  b128              CBZ      r0,|L10.206|
                  |L10.194|
;;;320    			Se_w_LockDoorTimer = 0;
;;;321    			SeZR60_u_DoorLockRelaySt = 1U;
;;;322    			SetAudioIO_PlayFile(AudioIO_BonVoyage);	
;;;323    		}
;;;324    		else
;;;325    		{
;;;326    			if(STD_ON == GetPSFltr_u_PeriSt(DoorLock))
0000c2  2000              MOVS     r0,#0
0000c4  f7fffffe          BL       GetPSFltr_u_PeriSt
0000c8  2801              CMP      r0,#1
0000ca  d013              BEQ      |L10.244|
0000cc  e016              B        |L10.252|
                  |L10.206|
0000ce  a81c              ADD      r0,sp,#0x70           ;314
0000d0  f7fffffe          BL       hym8563_Currenttime
0000d4  220e              MOVS     r2,#0xe               ;315
0000d6  a1d4              ADR      r1,|L10.1064|
0000d8  a81c              ADD      r0,sp,#0x70           ;315
0000da  f7fffffe          BL       WrUnlockLogCache_Queue
0000de  a1d4              ADR      r1,|L10.1072|
0000e0  a0d8              ADR      r0,|L10.1092|
0000e2  f7fffffe          BL       __2printf
0000e6  803d              STRH     r5,[r7,#0]            ;319
0000e8  82f4              STRH     r4,[r6,#0x16]         ;320
0000ea  7135              STRB     r5,[r6,#4]            ;321
0000ec  2002              MOVS     r0,#2                 ;322
0000ee  f7fffffe          BL       SetAudioIO_PlayFile
0000f2  e003              B        |L10.252|
                  |L10.244|
;;;327    			{
;;;328    				USART_PRINTF_S("门锁已开");
0000f4  a1d4              ADR      r1,|L10.1096|
0000f6  a0d3              ADR      r0,|L10.1092|
0000f8  f7fffffe          BL       __2printf
                  |L10.252|
;;;329    			}
;;;330    		}
;;;331    	}
;;;332    		
;;;333    	/*************************************************
;;;334    	*		            网络开门
;;;335    	*************************************************/	
;;;336    	if( 1U == ZR60_CTRL_REMOTE_UNLOCK)
0000fc  48d5              LDR      r0,|L10.1108|
0000fe  7801              LDRB     r1,[r0,#0]  ; Setcp_client_u_Open
000100  2901              CMP      r1,#1
000102  d127              BNE      |L10.340|
;;;337    	{
;;;338    		ZR60_CTRL_REMOTE_UNLOCK = 0U;
000104  7004              STRB     r4,[r0,#0]
;;;339    		if((0U == SeZR60_u_DoorLockRelaySt) && \
000106  7930              LDRB     r0,[r6,#4]  ; SeZR60_u_DoorLockRelaySt
000108  b918              CBNZ     r0,|L10.274|
;;;340    				(STD_OFF == GetPSFltr_u_PeriSt(DoorLock)))
00010a  2000              MOVS     r0,#0
00010c  f7fffffe          BL       GetPSFltr_u_PeriSt
000110  b128              CBZ      r0,|L10.286|
                  |L10.274|
;;;341    		{//门锁关闭状态
;;;342    			if(SeZR60_u_BleUnlockflag != 1U)//表示一段时间内无蓝牙开门
;;;343    			{
;;;344    				/*记录开锁信息*/
;;;345    				hym8563_Currenttime(&Time);
;;;346    				WrUnlockLogCache_Queue(&Time,Le_u_UnlockInfo,UNLOCKLOGCACHE_REMOTE);//开锁日志记录写入缓存队列
;;;347    				
;;;348    				USART_PRINTF_S("远程 -> 开门");
;;;349    				//LED_RED;
;;;350    				LOCK_ON;
;;;351    				SeZR60_u_DoorLockRelaySt = 1U;
;;;352    				SeZR60_u_NetUnlockflag = 1U;
;;;353    				Se_w_LockDoorTimer = 0;
;;;354    				SetAudioIO_PlayFile(AudioIO_WelBack);	
;;;355    			}
;;;356    		}
;;;357    		else
;;;358    		{
;;;359    			if(STD_ON == GetPSFltr_u_PeriSt(DoorLock))
000112  2000              MOVS     r0,#0
000114  f7fffffe          BL       GetPSFltr_u_PeriSt
000118  2801              CMP      r0,#1
00011a  d017              BEQ      |L10.332|
00011c  e01a              B        |L10.340|
                  |L10.286|
00011e  7970              LDRB     r0,[r6,#5]            ;342  ; SeZR60_u_BleUnlockflag
000120  2801              CMP      r0,#1                 ;342
000122  d017              BEQ      |L10.340|
000124  a81c              ADD      r0,sp,#0x70           ;345
000126  f7fffffe          BL       hym8563_Currenttime
00012a  2207              MOVS     r2,#7                 ;346
00012c  a914              ADD      r1,sp,#0x50           ;346
00012e  a81c              ADD      r0,sp,#0x70           ;346
000130  f7fffffe          BL       WrUnlockLogCache_Queue
000134  a1c8              ADR      r1,|L10.1112|
000136  a0c3              ADR      r0,|L10.1092|
000138  f7fffffe          BL       __2printf
00013c  803d              STRH     r5,[r7,#0]            ;350
00013e  7135              STRB     r5,[r6,#4]            ;351
000140  71b5              STRB     r5,[r6,#6]            ;352
000142  82f4              STRH     r4,[r6,#0x16]         ;353
000144  2003              MOVS     r0,#3                 ;354
000146  f7fffffe          BL       SetAudioIO_PlayFile
00014a  e003              B        |L10.340|
                  |L10.332|
;;;360    			{
;;;361    				USART_PRINTF_S("门锁已开");
00014c  a1be              ADR      r1,|L10.1096|
00014e  a0bd              ADR      r0,|L10.1092|
000150  f7fffffe          BL       __2printf
                  |L10.340|
;;;362    			}
;;;363    		}
;;;364    	}
;;;365    	
;;;366    	/*************************************************
;;;367    	*		            消防报警
;;;368    	*************************************************/	
;;;369    	if(GetBtnFltr_u_BtnShrtValid(Key_Alarm) == STD_ACTIVE)//消防报警
000154  2002              MOVS     r0,#2
000156  f7fffffe          BL       GetBtnFltr_u_BtnShrtValid
00015a  2801              CMP      r0,#1
00015c  d121              BNE      |L10.418|
;;;370    	{
;;;371    		ClrBtnFltr_BtnShrtValid(Key_Alarm);
00015e  2002              MOVS     r0,#2
000160  f7fffffe          BL       ClrBtnFltr_BtnShrtValid
;;;372    		//记录开锁信息
;;;373    		hym8563_Currenttime(&Time);
000164  a81c              ADD      r0,sp,#0x70
000166  f7fffffe          BL       hym8563_Currenttime
;;;374    		WrUnlockLogCache_Queue(&Time,"unknown",UNLOCKLOGCACHE_FIREALARM);//开锁日志记录写入缓存队列
00016a  220f              MOVS     r2,#0xf
00016c  a1ae              ADR      r1,|L10.1064|
00016e  a81c              ADD      r0,sp,#0x70
000170  f7fffffe          BL       WrUnlockLogCache_Queue
;;;375    		
;;;376    		USART_PRINTF_S("消防警报 -> 开门");
000174  a1bc              ADR      r1,|L10.1128|
000176  a0b3              ADR      r0,|L10.1092|
000178  f7fffffe          BL       __2printf
;;;377    		//LED_RED;
;;;378    		LOCK_ON;//开门
00017c  803d              STRH     r5,[r7,#0]
;;;379    		SeZR60_u_DoorLockRelaySt = 1U;
00017e  7135              STRB     r5,[r6,#4]
;;;380    		USART_Cmd(UART5,  DISABLE);//关闭串口5中断
000180  2100              MOVS     r1,#0
000182  48be              LDR      r0,|L10.1148|
000184  f7fffffe          BL       USART_Cmd
;;;381    		USART_Cmd(USART3, DISABLE);//关闭串口3中断
000188  2100              MOVS     r1,#0
00018a  48bd              LDR      r0,|L10.1152|
00018c  f7fffffe          BL       USART_Cmd
;;;382    		USART_Cmd(UART4,  DISABLE);//关闭串口4中断
000190  2100              MOVS     r1,#0
000192  48bc              LDR      r0,|L10.1156|
000194  f7fffffe          BL       USART_Cmd
;;;383    		ALARM = 1;
000198  7235              STRB     r5,[r6,#8]
;;;384    		flag = 0;//关闭按键板读取
00019a  72f4              STRB     r4,[r6,#0xb]
;;;385    		SetAudioIO_PlayFile(AudioIO_FireAlarm);
00019c  2001              MOVS     r0,#1
00019e  f7fffffe          BL       SetAudioIO_PlayFile
                  |L10.418|
;;;386    	}
;;;387    	
;;;388    	if(ALARM == 1)
0001a2  7a30              LDRB     r0,[r6,#8]  ; ALARM
0001a4  2801              CMP      r0,#1
0001a6  d10c              BNE      |L10.450|
;;;389    	{
;;;390    		if(0U == GetAudioIO_u_PlaySt())
0001a8  f7fffffe          BL       GetAudioIO_u_PlaySt
0001ac  b948              CBNZ     r0,|L10.450|
;;;391    		{
;;;392    			SeCardSet_dw_ALARMDlyTime++;
0001ae  6b70              LDR      r0,[r6,#0x34]  ; SeCardSet_dw_ALARMDlyTime
0001b0  1c40              ADDS     r0,r0,#1
;;;393    			if(SeCardSet_dw_ALARMDlyTime >= 400U)//消防报警频率控制
0001b2  6370              STR      r0,[r6,#0x34]  ; SeCardSet_dw_ALARMDlyTime
0001b4  f5b07fc8          CMP      r0,#0x190
0001b8  d303              BCC      |L10.450|
;;;394    			{
;;;395    				SeCardSet_dw_ALARMDlyTime = 0U;
;;;396    				SetAudioIO_PlayFile(AudioIO_FireAlarm);
0001ba  2001              MOVS     r0,#1
0001bc  6374              STR      r4,[r6,#0x34]  ; SeCardSet_dw_ALARMDlyTime
0001be  f7fffffe          BL       SetAudioIO_PlayFile
                  |L10.450|
;;;397    			}
;;;398    		}
;;;399    	}
;;;400    	
;;;401    	/*************************************************
;;;402    	*		            声波开锁
;;;403    	*************************************************/			
;;;404    	if(receive_flag == 1)//声波开锁标志有效
0001c2  48b1              LDR      r0,|L10.1160|
0001c4  7801              LDRB     r1,[r0,#0]  ; receive_flag
;;;405    	{
;;;406    		receive_flag = 0;
;;;407    		if((0U == SeZR60_u_DoorLockRelaySt) && \
;;;408    				(STD_OFF == GetPSFltr_u_PeriSt(DoorLock)))
;;;409    		{//门锁关闭状态
;;;410    			(void)hym8563_read_datetime(&Le_h_tm);//读取hym8563日期时间
;;;411    			SeCardSet_dw_nowtime = GetTick(&Le_h_tm);
;;;412    			Se_u_PasswordCmpFlag = sm3_time_PasswordAuth(SeCardSet_dw_nowtime,&sm,TIME_STAMP_SOUND,machine_type);//生成密码比对
0001c6  f8df92c4          LDR      r9,|L10.1164|
0001ca  2901              CMP      r1,#1                 ;404
0001cc  d136              BNE      |L10.572|
0001ce  7004              STRB     r4,[r0,#0]            ;406
0001d0  7930              LDRB     r0,[r6,#4]            ;407  ; SeZR60_u_DoorLockRelaySt
0001d2  b918              CBNZ     r0,|L10.476|
0001d4  2000              MOVS     r0,#0                 ;408
0001d6  f7fffffe          BL       GetPSFltr_u_PeriSt
0001da  b128              CBZ      r0,|L10.488|
                  |L10.476|
;;;413    			if(Se_u_PasswordCmpFlag != 1)
;;;414    			{
;;;415    				SetAudioIO_PlayFile(AudioIO_ErrKey);
;;;416    			}
;;;417    			else
;;;418    			{
;;;419    				/*记录开锁信息*/
;;;420    				hym8563_Currenttime(&Time);
;;;421    				WrUnlockLogCache_Queue(&Time,"unknown",UNLOCKLOGCACHE_SOUNDWAVE);//开锁日志记录写入缓存队列
;;;422    
;;;423    				USART_PRINTF_S("声波 -> 开门");
;;;424    				//LED_RED;
;;;425    				LOCK_ON;
;;;426    				SeZR60_u_DoorLockRelaySt = 1U;
;;;427    				Se_w_LockDoorTimer = 0;
;;;428    				SetAudioIO_PlayFile(AudioIO_WelBack);		
;;;429    			}
;;;430    		}
;;;431    		else
;;;432    		{
;;;433    			if(STD_ON == GetPSFltr_u_PeriSt(DoorLock))
0001dc  2000              MOVS     r0,#0
0001de  f7fffffe          BL       GetPSFltr_u_PeriSt
0001e2  2801              CMP      r0,#1
0001e4  d026              BEQ      |L10.564|
0001e6  e029              B        |L10.572|
                  |L10.488|
0001e8  a80b              ADD      r0,sp,#0x2c           ;410
0001ea  f7fffffe          BL       hym8563_read_datetime
0001ee  a80b              ADD      r0,sp,#0x2c           ;411
0001f0  f7fffffe          BL       GetTick
0001f4  63b0              STR      r0,[r6,#0x38]         ;412  ; SeCardSet_dw_nowtime
0001f6  f8993000          LDRB     r3,[r9,#0]            ;412  ; machine_type
0001fa  4989              LDR      r1,|L10.1056|
0001fc  2201              MOVS     r2,#1                 ;412
0001fe  3140              ADDS     r1,r1,#0x40           ;412
000200  f7fffffe          BL       sm3_time_PasswordAuth
000204  7470              STRB     r0,[r6,#0x11]         ;412
000206  2801              CMP      r0,#1                 ;413
000208  d001              BEQ      |L10.526|
00020a  2004              MOVS     r0,#4                 ;415
00020c  e00f              B        |L10.558|
                  |L10.526|
00020e  a81c              ADD      r0,sp,#0x70           ;420
000210  f7fffffe          BL       hym8563_Currenttime
000214  2210              MOVS     r2,#0x10              ;421
000216  a184              ADR      r1,|L10.1064|
000218  a81c              ADD      r0,sp,#0x70           ;421
00021a  f7fffffe          BL       WrUnlockLogCache_Queue
00021e  a19c              ADR      r1,|L10.1168|
000220  a088              ADR      r0,|L10.1092|
000222  f7fffffe          BL       __2printf
000226  803d              STRH     r5,[r7,#0]            ;425
000228  7135              STRB     r5,[r6,#4]            ;426
00022a  82f4              STRH     r4,[r6,#0x16]         ;427
00022c  2003              MOVS     r0,#3                 ;428
                  |L10.558|
00022e  f7fffffe          BL       SetAudioIO_PlayFile
000232  e003              B        |L10.572|
                  |L10.564|
;;;434    			{
;;;435    				USART_PRINTF_S("门锁已开");
000234  a184              ADR      r1,|L10.1096|
000236  a083              ADR      r0,|L10.1092|
000238  f7fffffe          BL       __2printf
                  |L10.572|
;;;436    			}
;;;437    		}
;;;438    	}
;;;439    	
;;;440    	/*************************************************
;;;441    	*		           蓝牙开锁
;;;442    	*************************************************/		
;;;443    	if(SeCardSet_u_BleSt == 0U)//蓝牙模块空闲
00023c  7c30              LDRB     r0,[r6,#0x10]  ; SeCardSet_u_BleSt
00023e  b928              CBNZ     r0,|L10.588|
;;;444    	{
;;;445    		SeCardSet_u_BleSt = 1U;
000240  7435              STRB     r5,[r6,#0x10]
;;;446    		SetUartCmn_BluetoothTxMsg("AT+DISA?",strlen("AT+DISA?"));//给蓝牙模块发送扫描指令
000242  2108              MOVS     r1,#8
000244  a096              ADR      r0,|L10.1184|
000246  f7fffffe          BL       SetUartCmn_BluetoothTxMsg
;;;447    		SeCardSet_w_BleDisCnntT = 0U;
00024a  84f4              STRH     r4,[r6,#0x26]
                  |L10.588|
;;;448    		//USART_PRINTF_S("\n\r发送蓝牙扫描指令 AT+DISA?");
;;;449    	}
;;;450    	
;;;451    	/*处理蓝牙发来的时间校准标志*/
;;;452    	if(set_time_flag == 1)
00024c  f8df825c          LDR      r8,|L10.1196|
000250  f8980000          LDRB     r0,[r8,#0]  ; set_time_flag
000254  2801              CMP      r0,#1
000256  d109              BNE      |L10.620|
;;;453    	{
;;;454    		USART_PRINTF_D("蓝牙时间:%s\n",timelist);
000258  4995              LDR      r1,|L10.1200|
00025a  a096              ADR      r0,|L10.1204|
00025c  f7fffffe          BL       __2printf
;;;455    		timestamp_timeCalibration(timelist,TIME_STAMP_BJT);//校准时钟芯片时间
000260  2100              MOVS     r1,#0
000262  4893              LDR      r0,|L10.1200|
000264  f7fffffe          BL       timestamp_timeCalibration
;;;456    		set_time_flag = 0;
000268  f8884000          STRB     r4,[r8,#0]
                  |L10.620|
;;;457    	}
;;;458    	
;;;459    	/**蓝牙开锁**/
;;;460    	if((ble_flag == 1) && (0U == b_5s_flag))
00026c  f8df8254          LDR      r8,|L10.1220|
000270  f8980000          LDRB     r0,[r8,#0]  ; ble_flag
000274  2801              CMP      r0,#1
000276  d149              BNE      |L10.780|
000278  78f0              LDRB     r0,[r6,#3]  ; b_5s_flag
00027a  2800              CMP      r0,#0
00027c  d146              BNE      |L10.780|
;;;461    	{
;;;462    		b_5s_flag = 1U;//5s延时标志，此期间忽略接收到的开门指令
00027e  70f5              STRB     r5,[r6,#3]
;;;463    		b_5s_count = 0U;//5s延时计时器
000280  8274              STRH     r4,[r6,#0x12]
;;;464    		ble_flag = 0;
000282  f8884000          STRB     r4,[r8,#0]
;;;465    		if((0U == SeZR60_u_DoorLockRelaySt) && \
000286  7930              LDRB     r0,[r6,#4]  ; SeZR60_u_DoorLockRelaySt
000288  b918              CBNZ     r0,|L10.658|
;;;466    				(STD_OFF == GetPSFltr_u_PeriSt(DoorLock)))
00028a  2000              MOVS     r0,#0
00028c  f7fffffe          BL       GetPSFltr_u_PeriSt
000290  b128              CBZ      r0,|L10.670|
                  |L10.658|
;;;467    		{//门锁关闭状态
;;;468    			if(SeZR60_u_NetUnlockflag != 1U)//表示一段时间内无网络开门
;;;469    			{
;;;470    				(void)hym8563_read_datetime(&Le_h_tm);//读取hym8563日期时间
;;;471    				USART_PRINTF_DATE("读取hym8563的时间：%d.%d.%d %d:%d:%d\n",Le_h_tm.tm_year,Le_h_tm.tm_mon, \
;;;472    								  Le_h_tm.tm_mday,Le_h_tm.tm_hour,Le_h_tm.tm_min,Le_h_tm.tm_sec);
;;;473    				SeCardSet_dw_nowtime = GetTick(&Le_h_tm);//生成时间戳
;;;474    				Se_u_PasswordCmpFlag = sm3_time_PasswordAuth(SeCardSet_dw_nowtime,&sm,TIME_STAMP_BLE,machine_type);
;;;475    				if(Se_u_PasswordCmpFlag!= 1)//表示收到密码比对没有成功
;;;476    				{
;;;477    					USART_PRINTF_S("蓝牙密码验证失败 X");
;;;478    					SetAudioIO_PlayFile(AudioIO_ErrKey);
;;;479    				}
;;;480    				else
;;;481    				{
;;;482    					USART_PRINTF_S("蓝牙 -> 开门");
;;;483    					//LED_RED;
;;;484    					LOCK_ON;
;;;485    					SeZR60_u_DoorLockRelaySt = 1U;
;;;486    					SeZR60_u_BleUnlockflag = 1U;
;;;487    					SeZR60_u_BleLogFltrflag = 1U;
;;;488    					Se_w_LockDoorTimer = 0;
;;;489    					SetAudioIO_PlayFile(AudioIO_WelBack);
;;;490    				}
;;;491    			}
;;;492    		}
;;;493    		else
;;;494    		{
;;;495    			if(STD_ON == GetPSFltr_u_PeriSt(DoorLock))
000292  2000              MOVS     r0,#0
000294  f7fffffe          BL       GetPSFltr_u_PeriSt
000298  2801              CMP      r0,#1
00029a  d033              BEQ      |L10.772|
00029c  e036              B        |L10.780|
                  |L10.670|
00029e  79b0              LDRB     r0,[r6,#6]            ;468  ; SeZR60_u_NetUnlockflag
0002a0  2801              CMP      r0,#1                 ;468
0002a2  d033              BEQ      |L10.780|
0002a4  a80b              ADD      r0,sp,#0x2c           ;470
0002a6  f7fffffe          BL       hym8563_read_datetime
0002aa  ab0b              ADD      r3,sp,#0x2c           ;470
0002ac  e8930007          LDM      r3,{r0-r2}            ;470
0002b0  9200              STR      r2,[sp,#0]            ;471
0002b2  e9cd1001          STRD     r1,r0,[sp,#4]         ;471
0002b6  e9dd210f          LDRD     r2,r1,[sp,#0x3c]      ;471
0002ba  a083              ADR      r0,|L10.1224|
0002bc  9b0e              LDR      r3,[sp,#0x38]         ;471
0002be  f7fffffe          BL       __2printf
0002c2  a80b              ADD      r0,sp,#0x2c           ;473
0002c4  f7fffffe          BL       GetTick
0002c8  63b0              STR      r0,[r6,#0x38]         ;474  ; SeCardSet_dw_nowtime
0002ca  f8993000          LDRB     r3,[r9,#0]            ;474  ; machine_type
0002ce  4954              LDR      r1,|L10.1056|
0002d0  2202              MOVS     r2,#2                 ;474
0002d2  3140              ADDS     r1,r1,#0x40           ;474
0002d4  f7fffffe          BL       sm3_time_PasswordAuth
0002d8  7470              STRB     r0,[r6,#0x11]         ;474
0002da  2801              CMP      r0,#1                 ;475
0002dc  d005              BEQ      |L10.746|
0002de  a184              ADR      r1,|L10.1264|
0002e0  a058              ADR      r0,|L10.1092|
0002e2  f7fffffe          BL       __2printf
0002e6  2004              MOVS     r0,#4                 ;478
0002e8  e009              B        |L10.766|
                  |L10.746|
0002ea  a186              ADR      r1,|L10.1284|
0002ec  a055              ADR      r0,|L10.1092|
0002ee  f7fffffe          BL       __2printf
0002f2  803d              STRH     r5,[r7,#0]            ;484
0002f4  7135              STRB     r5,[r6,#4]            ;485
0002f6  7175              STRB     r5,[r6,#5]            ;486
0002f8  71f5              STRB     r5,[r6,#7]            ;487
0002fa  82f4              STRH     r4,[r6,#0x16]         ;488
0002fc  2003              MOVS     r0,#3                 ;489
                  |L10.766|
0002fe  f7fffffe          BL       SetAudioIO_PlayFile
000302  e003              B        |L10.780|
                  |L10.772|
;;;496    			{
;;;497    				USART_PRINTF_S("门锁已开");
000304  a150              ADR      r1,|L10.1096|
000306  a04f              ADR      r0,|L10.1092|
000308  f7fffffe          BL       __2printf
                  |L10.780|
;;;498    			}
;;;499    		}
;;;500    	}
;;;501    	
;;;502    	if((1U == Se_u_PhoneNumFlg) && (1U == SeZR60_u_BleLogFltrflag))//上传蓝牙开门日志
00030c  4f81              LDR      r7,|L10.1300|
00030e  7838              LDRB     r0,[r7,#0]  ; Se_u_PhoneNumFlg
000310  2801              CMP      r0,#1
000312  d124              BNE      |L10.862|
000314  79f0              LDRB     r0,[r6,#7]  ; SeZR60_u_BleLogFltrflag
000316  2801              CMP      r0,#1
000318  d121              BNE      |L10.862|
;;;503    	{
;;;504    		Se_u_PhoneNumFlg = 0U;
00031a  703c              STRB     r4,[r7,#0]
;;;505    		SeZR60_u_BleLogFltrflag = 0U;
00031c  71f4              STRB     r4,[r6,#7]
;;;506    		USART_PRINTF_D("接收的手机号：%s\n",Se_u_PhoneNum);
00031e  497e              LDR      r1,|L10.1304|
000320  a07e              ADR      r0,|L10.1308|
000322  f7fffffe          BL       __2printf
;;;507    		hym8563_Currenttime(&Time);
000326  a81c              ADD      r0,sp,#0x70
000328  f7fffffe          BL       hym8563_Currenttime
;;;508    		char temp = 33;
00032c  2121              MOVS     r1,#0x21
00032e  4b7a              LDR      r3,|L10.1304|
;;;509    		for(Le_w_i=0U;Le_w_i < 11U;Le_w_i++)
000330  2000              MOVS     r0,#0
000332  aa14              ADD      r2,sp,#0x50           ;246
                  |L10.820|
;;;510    		{//手机号码解码
;;;511    			Le_u_UnlockInfo[Le_w_i] = Se_u_PhoneNum[Le_w_i] - temp;
000334  f813c000          LDRB     r12,[r3,r0]
000338  ebac0c01          SUB      r12,r12,r1
00033c  f802c000          STRB     r12,[r2,r0]
000340  1e89              SUBS     r1,r1,#2
;;;512    			temp = temp - 2;
000342  1c40              ADDS     r0,r0,#1
000344  b280              UXTH     r0,r0                 ;509
000346  b2c9              UXTB     r1,r1
000348  280b              CMP      r0,#0xb               ;509
00034a  d3f3              BCC      |L10.820|
;;;513    		}
;;;514    		USART_PRINTF_D("接收的手机号解码后：%s\n",Le_u_UnlockInfo);
00034c  4611              MOV      r1,r2
00034e  a078              ADR      r0,|L10.1328|
000350  f7fffffe          BL       __2printf
;;;515    		WrUnlockLogCache_Queue(&Time,Le_u_UnlockInfo,UNLOCKLOGCACHE_BLE);//开锁日志记录写入缓存队列
000354  2206              MOVS     r2,#6
000356  a914              ADD      r1,sp,#0x50
000358  a81c              ADD      r0,sp,#0x70
00035a  f7fffffe          BL       WrUnlockLogCache_Queue
                  |L10.862|
;;;516    	}
;;;517    	
;;;518    	if(1U == b_5s_flag)//蓝牙开门时，计时（用于处理（清除）5s内接收到的蓝牙开门指令）
00035e  78f0              LDRB     r0,[r6,#3]  ; b_5s_flag
000360  2801              CMP      r0,#1
000362  d00b              BEQ      |L10.892|
;;;519    	{
;;;520    		b_5s_count++;
;;;521    		if(b_5s_count >= 650U)//3.25s计时
;;;522    		{//5s计时时间到，清b_5s_flag标志以允许蓝牙开门
;;;523    			b_5s_count = 0U;
;;;524    			ble_flag = 0U;//清开门指令
;;;525    			b_5s_flag = 0U;
;;;526    			Se_u_PhoneNumFlg = 0U;
;;;527    		}
;;;528    	}
;;;529    	else
;;;530    	{
;;;531    		b_5s_count = 0U;
000364  8274              STRH     r4,[r6,#0x12]
                  |L10.870|
;;;532    	}
;;;533    	
;;;534    	if(1U == SeCardSet_u_BleSt)//蓝牙模块非空闲时，计时4s(用于蓝牙串口通信超时处理)
000366  7c30              LDRB     r0,[r6,#0x10]  ; SeCardSet_u_BleSt
000368  2801              CMP      r0,#1
00036a  d015              BEQ      |L10.920|
;;;535    	{
;;;536    		SeCardSet_w_BleDisCnntT++;
;;;537    		if(SeCardSet_w_BleDisCnntT >= 800U)//蓝牙串口通信超时
;;;538    		{
;;;539    			SeCardSet_w_BleDisCnntT = 0U;
;;;540    			SeCardSet_u_BleSt = 0U;
;;;541    			RcvFlag = 0U;
;;;542    			blenum = 0U;
;;;543    		}
;;;544    	}
;;;545    	else
;;;546    	{
;;;547    		SeCardSet_w_BleDisCnntT = 0U;
00036c  84f4              STRH     r4,[r6,#0x26]
                  |L10.878|
;;;548    	}
;;;549    	
;;;550    	if((SeZR60_u_BleUnlockflag == 1U) || (SeZR60_u_NetUnlockflag == 1U))
00036e  7970              LDRB     r0,[r6,#5]  ; SeZR60_u_BleUnlockflag
000370  2801              CMP      r0,#1
000372  d01f              BEQ      |L10.948|
000374  79b0              LDRB     r0,[r6,#6]  ; SeZR60_u_NetUnlockflag
000376  2801              CMP      r0,#1
000378  d01c              BEQ      |L10.948|
00037a  e024              B        |L10.966|
                  |L10.892|
00037c  8a70              LDRH     r0,[r6,#0x12]         ;520  ; b_5s_count
00037e  f240218a          MOV      r1,#0x28a             ;521
000382  1c40              ADDS     r0,r0,#1              ;520
000384  b280              UXTH     r0,r0                 ;520
000386  8270              STRH     r0,[r6,#0x12]         ;520
000388  4288              CMP      r0,r1                 ;521
00038a  d3ec              BCC      |L10.870|
00038c  8274              STRH     r4,[r6,#0x12]         ;523
00038e  f8884000          STRB     r4,[r8,#0]            ;524
000392  70f4              STRB     r4,[r6,#3]            ;525
000394  703c              STRB     r4,[r7,#0]            ;526
000396  e7e6              B        |L10.870|
                  |L10.920|
000398  8cf0              LDRH     r0,[r6,#0x26]         ;536  ; SeCardSet_w_BleDisCnntT
00039a  1c40              ADDS     r0,r0,#1              ;536
00039c  b280              UXTH     r0,r0                 ;536
00039e  84f0              STRH     r0,[r6,#0x26]         ;536
0003a0  f5b07f48          CMP      r0,#0x320             ;537
0003a4  d3e3              BCC      |L10.878|
0003a6  4868              LDR      r0,|L10.1352|
0003a8  84f4              STRH     r4,[r6,#0x26]         ;539
0003aa  7434              STRB     r4,[r6,#0x10]         ;540
0003ac  7004              STRB     r4,[r0,#0]            ;541
0003ae  4867              LDR      r0,|L10.1356|
0003b0  7004              STRB     r4,[r0,#0]            ;542
0003b2  e7dc              B        |L10.878|
                  |L10.948|
;;;551    	{//蓝牙或网络开门
;;;552    		if(w_BleNetExcUnlockDelayTimer >= 500)//2.5s，期间忽略接收到的蓝牙或网络开门请求
0003b4  8bf0              LDRH     r0,[r6,#0x1e]  ; w_BleNetExcUnlockDelayTimer
0003b6  4550              CMP      r0,r10
0003b8  d303              BCC      |L10.962|
;;;553    		{
;;;554    			SeZR60_u_BleUnlockflag = 0U;
0003ba  7174              STRB     r4,[r6,#5]
;;;555    			SeZR60_u_NetUnlockflag = 0U;
0003bc  71b4              STRB     r4,[r6,#6]
;;;556    			w_BleNetExcUnlockDelayTimer = 0U;
0003be  83f4              STRH     r4,[r6,#0x1e]
0003c0  e001              B        |L10.966|
                  |L10.962|
0003c2  1c40              ADDS     r0,r0,#1
;;;557    		}
;;;558    		else
;;;559    		{
;;;560    			w_BleNetExcUnlockDelayTimer++;
0003c4  83f0              STRH     r0,[r6,#0x1e]
                  |L10.966|
;;;561    		}
;;;562    	}
;;;563    	
;;;564    	/*************************************************
;;;565    	*		            门锁状态指示灯控制
;;;566    	*************************************************/	
;;;567    	if((1U == SeZR60_u_DoorLockRelaySt) && \
0003c6  7930              LDRB     r0,[r6,#4]  ; SeZR60_u_DoorLockRelaySt
;;;568    			(STD_ON == GetPSFltr_u_PeriSt(DoorLock)))
;;;569    	{//开锁状态下，点亮红灯
;;;570    		LED_RED;
0003c8  f8dfa184          LDR      r10,|L10.1360|
0003cc  f04f0840          MOV      r8,#0x40
0003d0  f04f0980          MOV      r9,#0x80
0003d4  f1aa0702          SUB      r7,r10,#2
0003d8  f44f7b80          MOV      r11,#0x100
0003dc  2801              CMP      r0,#1                 ;567
0003de  d10a              BNE      |L10.1014|
0003e0  2000              MOVS     r0,#0                 ;568
0003e2  f7fffffe          BL       GetPSFltr_u_PeriSt
0003e6  2801              CMP      r0,#1                 ;568
0003e8  d105              BNE      |L10.1014|
0003ea  f8aa8000          STRH     r8,[r10,#0]
0003ee  f8a79000          STRH     r9,[r7,#0]
0003f2  f8a7b000          STRH     r11,[r7,#0]
                  |L10.1014|
;;;571    	}
;;;572    	if((0U == SeZR60_u_DoorLockRelaySt) && \
0003f6  7930              LDRB     r0,[r6,#4]  ; SeZR60_u_DoorLockRelaySt
0003f8  b948              CBNZ     r0,|L10.1038|
;;;573    			(STD_OFF == GetPSFltr_u_PeriSt(DoorLock)))
0003fa  2000              MOVS     r0,#0
0003fc  f7fffffe          BL       GetPSFltr_u_PeriSt
000400  b928              CBNZ     r0,|L10.1038|
;;;574    	{//闭锁状态下，点亮绿灯
;;;575    		LED_GREEN;
000402  f8a78000          STRH     r8,[r7,#0]
000406  f8aa9000          STRH     r9,[r10,#0]
00040a  f8a7b000          STRH     r11,[r7,#0]
                  |L10.1038|
;;;576    	}
;;;577    	
;;;578    	
;;;579    	/*************************************************
;;;580    	*		            延时关门控制
;;;581    	*************************************************/	
;;;582    	Se_w_LockDoorTimer++;
00040e  8af0              LDRH     r0,[r6,#0x16]  ; Se_w_LockDoorTimer
000410  1c40              ADDS     r0,r0,#1
000412  e09f              B        |L10.1364|
                  |L10.1044|
                          DCD      Sereadcard_SetKeyflag
                  |L10.1048|
                          DCD      rebackinfo
                  |L10.1052|
                          DCD      isSectedCard_flag
                  |L10.1056|
                          DCD      ||.data||
                  |L10.1060|
                          DCD      0x40020418
                  |L10.1064|
000428  756e6b6e          DCB      "unknown",0
00042c  6f776e00
                  |L10.1072|
000430  c3c5c4da          DCB      195,197,196,218,191,170,185,216," -> ",191,170,195,197,0
000434  bfaab9d8
000438  202d3e20
00043c  bfaac3c5
000440  00      
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L10.1092|
000444  25730a00          DCB      "%s\n",0
                  |L10.1096|
000448  c3c5cbf8          DCB      195,197,203,248,210,209,191,170,0
00044c  d2d1bfaa
000450  00      
000451  00                DCB      0
000452  00                DCB      0
000453  00                DCB      0
                  |L10.1108|
                          DCD      Setcp_client_u_Open
                  |L10.1112|
000458  d4b6b3cc          DCB      212,182,179,204," -> ",191,170,195,197,0
00045c  202d3e20
000460  bfaac3c5
000464  00      
000465  00                DCB      0
000466  00                DCB      0
000467  00                DCB      0
                  |L10.1128|
000468  cffbb7c0          DCB      207,251,183,192,190,175,177,168," -> ",191,170,195,197,0
00046c  beafb1a8
000470  202d3e20
000474  bfaac3c5
000478  00      
000479  00                DCB      0
00047a  00                DCB      0
00047b  00                DCB      0
                  |L10.1148|
                          DCD      0x40005000
                  |L10.1152|
                          DCD      0x40004800
                  |L10.1156|
                          DCD      0x40004c00
                  |L10.1160|
                          DCD      receive_flag
                  |L10.1164|
                          DCD      machine_type
                  |L10.1168|
000490  c9f9b2a8          DCB      201,249,178,168," -> ",191,170,195,197,0
000494  202d3e20
000498  bfaac3c5
00049c  00      
00049d  00                DCB      0
00049e  00                DCB      0
00049f  00                DCB      0
                  |L10.1184|
0004a0  41542b44          DCB      "AT+DISA?",0
0004a4  4953413f
0004a8  00      
0004a9  00                DCB      0
0004aa  00                DCB      0
0004ab  00                DCB      0
                  |L10.1196|
                          DCD      set_time_flag
                  |L10.1200|
                          DCD      timelist
                  |L10.1204|
0004b4  c0b6d1c0          DCB      192,182,209,192,202,177,188,228,":%s\n",0
0004b8  cab1bce4
0004bc  3a25730a
0004c0  00      
0004c1  00                DCB      0
0004c2  00                DCB      0
0004c3  00                DCB      0
                  |L10.1220|
                          DCD      ble_flag
                  |L10.1224|
0004c8  b6c1c8a1          DCB      182,193,200,161,"hym8563",181,196,202,177,188,228,163,186
0004cc  68796d38
0004d0  353633b5
0004d4  c4cab1bc
0004d8  e4a3ba  
0004db  25642e25          DCB      "%d.%d.%d %d:%d:%d\n",0
0004df  642e2564
0004e3  2025643a
0004e7  25643a25
0004eb  640a00  
0004ee  00                DCB      0
0004ef  00                DCB      0
                  |L10.1264|
0004f0  c0b6d1c0          DCB      192,182,209,192,195,220,194,235,209,233,214,164,202,167,176
0004f4  c3dcc2eb
0004f8  d1e9d6a4
0004fc  caa7b0  
0004ff  dc205800          DCB      220," X",0
000503  00                DCB      0
                  |L10.1284|
000504  c0b6d1c0          DCB      192,182,209,192," -> ",191,170,195,197,0
000508  202d3e20
00050c  bfaac3c5
000510  00      
000511  00                DCB      0
000512  00                DCB      0
000513  00                DCB      0
                  |L10.1300|
                          DCD      Se_u_PhoneNumFlg
                  |L10.1304|
                          DCD      Se_u_PhoneNum
                  |L10.1308|
00051c  bdd3cad5          DCB      189,211,202,213,181,196,202,214,187,250,186,197,163,186,"%"
000520  b5c4cad6
000524  bbfabac5
000528  a3ba25  
00052b  730a00            DCB      "s\n",0
00052e  00                DCB      0
00052f  00                DCB      0
                  |L10.1328|
000530  bdd3cad5          DCB      189,211,202,213,181,196,202,214,187,250,186,197,189,226,194
000534  b5c4cad6
000538  bbfabac5
00053c  bde2c2  
00053f  ebbaf3a3          DCB      235,186,243,163,186,"%s\n",0
000543  ba25730a
000547  00      
                  |L10.1352|
                          DCD      RcvFlag
                  |L10.1356|
                          DCD      blenum
                  |L10.1360|
                          DCD      0x4002141a
                  |L10.1364|
000554  b280              UXTH     r0,r0
000556  82f0              STRH     r0,[r6,#0x16]
;;;583    	if(Se_w_LockDoorTimer >= (Se_w_DoorLockdelayT/5))
000558  8ab1              LDRH     r1,[r6,#0x14]  ; Se_w_DoorLockdelayT
00055a  2205              MOVS     r2,#5
00055c  fbb1f1f2          UDIV     r1,r1,r2
000560  4281              CMP      r1,r0
000562  d808              BHI      |L10.1398|
;;;584    	{
;;;585    		Se_w_LockDoorTimer = 0U;
;;;586    		LOCK_OFF;
000564  483c              LDR      r0,|L10.1624|
000566  82f4              STRH     r4,[r6,#0x16]         ;585
000568  8005              STRH     r5,[r0,#0]
;;;587    		SeZR60_u_DoorLockRelaySt = 0U;
00056a  7134              STRB     r4,[r6,#4]
;;;588    		USART_PRINTF_S("门锁状态 -> 关闭");
00056c  a13b              ADR      r1,|L10.1628|
00056e  f2af102c          ADR      r0,|L10.1092|
000572  f7fffffe          BL       __2printf
                  |L10.1398|
;;;589    	}
;;;590    
;;;591    	/*************************************************
;;;592    	*		            500ms任务
;;;593    	*************************************************/	
;;;594    	w_500msflag_DelayTime++;
000576  8b70              LDRH     r0,[r6,#0x1a]  ; w_500msflag_DelayTime
000578  1c40              ADDS     r0,r0,#1
00057a  b280              UXTH     r0,r0
00057c  8370              STRH     r0,[r6,#0x1a]
;;;595    	if(w_500msflag_DelayTime >= 100)
00057e  2864              CMP      r0,#0x64
000580  d314              BCC      |L10.1452|
;;;596    	{
;;;597    		w_500msflag_DelayTime = 0;
;;;598    		update_sec ++;
000582  483b              LDR      r0,|L10.1648|
000584  8374              STRH     r4,[r6,#0x1a]         ;597
000586  7801              LDRB     r1,[r0,#0]  ; update_sec
000588  1c49              ADDS     r1,r1,#1
00058a  7001              STRB     r1,[r0,#0]
;;;599    		if(update_sec == 2)
00058c  7801              LDRB     r1,[r0,#0]  ; update_sec
00058e  2902              CMP      r1,#2
000590  d10c              BNE      |L10.1452|
;;;600    		{
;;;601    			update_sec = 0;
000592  7004              STRB     r4,[r0,#0]
;;;602    			if(sm3_flag == 0)
;;;603    			{
;;;604    				//display_time();
;;;605    			}						
;;;606    			sec_count ++;	
000594  78b0              LDRB     r0,[r6,#2]  ; sec_count
000596  1c40              ADDS     r0,r0,#1
000598  b2c0              UXTB     r0,r0
00059a  70b0              STRB     r0,[r6,#2]
;;;607    
;;;608    			if(sec_count >= 20)//lcd1062
00059c  2814              CMP      r0,#0x14
00059e  d305              BCC      |L10.1452|
;;;609    			{
;;;610    				if(sm3_flag == 1)
0005a0  7830              LDRB     r0,[r6,#0]  ; sm3_flag
0005a2  2801              CMP      r0,#1
0005a4  d101              BNE      |L10.1450|
;;;611    				{
;;;612    					sm3_flag = 0;	
0005a6  7034              STRB     r4,[r6,#0]
;;;613    					key_num = 0;
0005a8  7334              STRB     r4,[r6,#0xc]
                  |L10.1450|
;;;614    				}		
;;;615    				sec_count = 0;	
0005aa  70b4              STRB     r4,[r6,#2]
                  |L10.1452|
;;;616    			}
;;;617    		} 
;;;618    	}
;;;619    
;;;620    	/*************************************************
;;;621    	*		            1s任务
;;;622    	*************************************************/	
;;;623    	w_1sflag_DelayTime++;
0005ac  8bb0              LDRH     r0,[r6,#0x1c]  ; w_1sflag_DelayTime
0005ae  1c40              ADDS     r0,r0,#1
0005b0  b280              UXTH     r0,r0
0005b2  83b0              STRH     r0,[r6,#0x1c]
;;;624    	if(w_1sflag_DelayTime >= 200U)
0005b4  28c8              CMP      r0,#0xc8
0005b6  d34c              BCC      |L10.1618|
;;;625    	{
;;;626    		w_1sflag_DelayTime = 0U;
0005b8  83b4              STRH     r4,[r6,#0x1c]
;;;627    		if(0U == Se_u_CloseDoorDelayTimeSetFlag)
0005ba  7ab0              LDRB     r0,[r6,#0xa]  ; Se_u_CloseDoorDelayTimeSetFlag
0005bc  2800              CMP      r0,#0
0005be  d148              BNE      |L10.1618|
;;;628    		{//关门延时时间未设置
;;;629    			/**读取电位器的电压,根据电压设置关门延时时间**/
;;;630    			Voltage_value[0U] = (uint16)((uint32)GetADFliter_ADFliterResult(0)*3300/4096);//每隔1s读取电位器的电压(电压放大1000倍)
0005c0  f7fffffe          BL       GetADFliter_ADFliterResult
0005c4  f64c6140          MOV      r1,#0xce40
0005c8  4f2a              LDR      r7,|L10.1652|
0005ca  4348              MULS     r0,r1,r0
0005cc  0c00              LSRS     r0,r0,#16
0005ce  8038              STRH     r0,[r7,#0]
;;;631    			if(ZR60Ctrl_w_CalPosDifference(Voltage_value[0U],Voltage_value[1U]) <= 100U)
0005d0  8879              LDRH     r1,[r7,#2]  ; Voltage_value
0005d2  4602              MOV      r2,r0
0005d4  4288              CMP      r0,r1
0005d6  d301              BCC      |L10.1500|
0005d8  1a51              SUBS     r1,r2,r1
0005da  e000              B        |L10.1502|
                  |L10.1500|
0005dc  1a89              SUBS     r1,r1,r2
                  |L10.1502|
0005de  b289              UXTH     r1,r1
0005e0  2964              CMP      r1,#0x64
0005e2  d829              BHI      |L10.1592|
;;;632    			{
;;;633    				Se_u_VoltageDifferencCnt++;
0005e4  7a71              LDRB     r1,[r6,#9]  ; Se_u_VoltageDifferencCnt
0005e6  1c49              ADDS     r1,r1,#1
0005e8  b2c9              UXTB     r1,r1
0005ea  7271              STRB     r1,[r6,#9]
;;;634    				if(Se_u_VoltageDifferencCnt >= 5U)
0005ec  2905              CMP      r1,#5
0005ee  d325              BCC      |L10.1596|
;;;635    				{
;;;636    					Se_u_VoltageDifferencCnt = 0U;
0005f0  f6a0401c          SUB      r0,r0,#0xc1c
;;;637    					Se_w_DoorLockdelayT = (uint16)((3100 - Voltage_value[0U]) / 300) + 1U;
0005f4  4240              RSBS     r0,r0,#0
0005f6  f44f7196          MOV      r1,#0x12c
0005fa  fb90f0f1          SDIV     r0,r0,r1
0005fe  1c40              ADDS     r0,r0,#1
000600  b280              UXTH     r0,r0
000602  7274              STRB     r4,[r6,#9]            ;636
000604  82b0              STRH     r0,[r6,#0x14]
;;;638    					if(Se_w_DoorLockdelayT > 10U)
000606  280a              CMP      r0,#0xa
000608  d902              BLS      |L10.1552|
;;;639    					{
;;;640    						Se_w_DoorLockdelayT = 10*1000;
00060a  f2427010          MOV      r0,#0x2710
00060e  e00c              B        |L10.1578|
                  |L10.1552|
;;;641    					}
;;;642    					else if(Se_w_DoorLockdelayT < 3U)
000610  2803              CMP      r0,#3
000612  d202              BCS      |L10.1562|
;;;643    					{
;;;644    						Se_w_DoorLockdelayT = 3*1000;
000614  f64030b8          MOV      r0,#0xbb8
000618  e007              B        |L10.1578|
                  |L10.1562|
;;;645    					}
;;;646    					else
;;;647    					{
;;;648    						Se_w_DoorLockdelayT = Se_w_DoorLockdelayT*1000;
00061a  eb000140          ADD      r1,r0,r0,LSL #1
00061e  ebc110c0          RSB      r0,r1,r0,LSL #7
000622  f64f71ff          MOV      r1,#0xffff
000626  ea0100c0          AND      r0,r1,r0,LSL #3
                  |L10.1578|
00062a  82b0              STRH     r0,[r6,#0x14]         ;644
;;;649    					}
;;;650    					Se_u_CloseDoorDelayTimeSetFlag = 1U;
;;;651    					USART_PRINTF_D("延时关门时间设置完成,时间为：%dms\n",Se_w_DoorLockdelayT);
00062c  b281              UXTH     r1,r0
00062e  72b5              STRB     r5,[r6,#0xa]          ;650
000630  a011              ADR      r0,|L10.1656|
000632  f7fffffe          BL       __2printf
000636  e001              B        |L10.1596|
                  |L10.1592|
;;;652    				}
;;;653    			}
;;;654    			else
;;;655    			{
;;;656    				Voltage_value[1U] = Voltage_value[0U];
000638  8078              STRH     r0,[r7,#2]
;;;657    				Se_u_VoltageDifferencCnt = 0U;
00063a  7274              STRB     r4,[r6,#9]
                  |L10.1596|
;;;658    			}
;;;659    			USART_PRINTF_D("AD采样值：%d\n",GetADFliter_ADFliterResult(0));
00063c  2000              MOVS     r0,#0
00063e  f7fffffe          BL       GetADFliter_ADFliterResult
000642  4601              MOV      r1,r0
000644  a015              ADR      r0,|L10.1692|
000646  f7fffffe          BL       __2printf
;;;660    			USART_PRINTF_D("电压放大1000倍值：%d\n",Voltage_value[0]);
00064a  8839              LDRH     r1,[r7,#0]  ; Voltage_value
00064c  a017              ADR      r0,|L10.1708|
00064e  f7fffffe          BL       __2printf
                  |L10.1618|
;;;661    		}
;;;662    	}
;;;663    }
000652  b02d              ADD      sp,sp,#0xb4
000654  e8bd8ff0          POP      {r4-r11,pc}
;;;664    
                          ENDP

                  |L10.1624|
                          DCD      0x4002041a
                  |L10.1628|
00065c  c3c5cbf8          DCB      195,197,203,248,215,180,204,172," -> ",185,216,177,213,0
000660  d7b4ccac
000664  202d3e20
000668  b9d8b1d5
00066c  00      
00066d  00                DCB      0
00066e  00                DCB      0
00066f  00                DCB      0
                  |L10.1648|
                          DCD      update_sec
                  |L10.1652|
                          DCD      ||.data||+0x28
                  |L10.1656|
000678  d1d3cab1          DCB      209,211,202,177,185,216,195,197,202,177,188,228,201,232,214
00067c  b9d8c3c5
000680  cab1bce4
000684  c9e8d6  
000687  c3cdeab3          DCB      195,205,234,179,201,",",202,177,188,228,206,170,163,186,"%"
00068b  c92ccab1
00068f  bce4ceaa
000693  a3ba25  
000696  646d730a          DCB      "dms\n",0
00069a  00      
00069b  00                DCB      0
                  |L10.1692|
00069c  4144b2c9          DCB      "AD",178,201,209,249,214,181,163,186,"%d\n",0
0006a0  d1f9d6b5
0006a4  a3ba2564
0006a8  0a00    
0006aa  00                DCB      0
0006ab  00                DCB      0
                  |L10.1708|
0006ac  b5e7d1b9          DCB      181,231,209,185,183,197,180,243,"1000",177,182,214,181,163
0006b0  b7c5b4f3
0006b4  31303030
0006b8  b1b6d6b5
0006bc  a3      
0006bd  ba25640a          DCB      186,"%d\n",0
0006c1  00      
0006c2  00                DCB      0
0006c3  00                DCB      0

                          AREA ||i.Unlock_MainFunction||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  Unlock_MainFunction PROC
;;;749    ******************************************************/
;;;750    static void  Unlock_MainFunction(void)//开锁
000000  b570              PUSH     {r4-r6,lr}
;;;751    {
000002  b08a              SUB      sp,sp,#0x28
;;;752    	uint64_t Time;
;;;753    	char Le_u_UnlockInfo[32U] = {0x00};
000004  2120              MOVS     r1,#0x20
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __aeabi_memclr4
;;;754    	if(1U != SeCardSet_u_St)//非卡片设置状态
00000c  4c1c              LDR      r4,|L11.128|
00000e  7ba0              LDRB     r0,[r4,#0xe]  ; SeCardSet_u_St
000010  2801              CMP      r0,#1
000012  d014              BEQ      |L11.62|
;;;755    	{
;;;756    		if(open_door == 1)//开锁
000014  481b              LDR      r0,|L11.132|
000016  7801              LDRB     r1,[r0,#0]  ; open_door
000018  2901              CMP      r1,#1
00001a  d110              BNE      |L11.62|
;;;757    		{	
;;;758    			open_door = 0;
00001c  2600              MOVS     r6,#0
00001e  7006              STRB     r6,[r0,#0]
;;;759    			if((0U == SeZR60_u_DoorLockRelaySt) && \
000020  7920              LDRB     r0,[r4,#4]  ; SeZR60_u_DoorLockRelaySt
000022  b918              CBNZ     r0,|L11.44|
;;;760    					(STD_OFF == GetPSFltr_u_PeriSt(DoorLock)))
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       GetPSFltr_u_PeriSt
00002a  b150              CBZ      r0,|L11.66|
                  |L11.44|
;;;761    			{//门锁关闭状态
;;;762    				/*记录开锁信息*/
;;;763    				hym8563_Currenttime(&Time);
;;;764    				Json_HexToStr(Le_u_UnlockInfo,SeReadcard_h_CardID.CardID,SeReadcard_h_CardID.lng);
;;;765    				WrUnlockLogCache_Queue(&Time,Le_u_UnlockInfo,UNLOCKLOGCACHE_CARD);//开锁日志记录写入缓存队列
;;;766    
;;;767    				USART_PRINTF_S("ic卡 -> 开门");
;;;768    				//LED_RED;
;;;769    				LOCK_ON;
;;;770    				SeZR60_u_DoorLockRelaySt = 1U;
;;;771    				Se_w_LockDoorTimer = 0;
;;;772    				SetAudioIO_PlayFile(AudioIO_WelBack);		
;;;773    				ZR60_CTRL_AUTOSEARCHCARD = 1;//开启自动寻卡
;;;774    				w_SetAutoCard_DelayTime = 0U;
;;;775    			}
;;;776    			else
;;;777    			{
;;;778    				if(STD_ON == GetPSFltr_u_PeriSt(DoorLock))
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       GetPSFltr_u_PeriSt
000032  2801              CMP      r0,#1
000034  d103              BNE      |L11.62|
;;;779    				{
;;;780    					USART_PRINTF_S("门锁已开");
000036  a114              ADR      r1,|L11.136|
000038  a016              ADR      r0,|L11.148|
00003a  f7fffffe          BL       __2printf
                  |L11.62|
;;;781    				}
;;;782    			}
;;;783    		}
;;;784    	}
;;;785    }
00003e  b00a              ADD      sp,sp,#0x28
000040  bd70              POP      {r4-r6,pc}
                  |L11.66|
000042  a808              ADD      r0,sp,#0x20           ;763
000044  f7fffffe          BL       hym8563_Currenttime
000048  4813              LDR      r0,|L11.152|
00004a  4601              MOV      r1,r0                 ;764
00004c  7902              LDRB     r2,[r0,#4]            ;764  ; SeReadcard_h_CardID
00004e  4668              MOV      r0,sp                 ;764
000050  f7fffffe          BL       Json_HexToStr
000054  2201              MOVS     r2,#1                 ;765
000056  4669              MOV      r1,sp                 ;765
000058  a808              ADD      r0,sp,#0x20           ;765
00005a  f7fffffe          BL       WrUnlockLogCache_Queue
00005e  a10f              ADR      r1,|L11.156|
000060  a00c              ADR      r0,|L11.148|
000062  f7fffffe          BL       __2printf
000066  4811              LDR      r0,|L11.172|
000068  2501              MOVS     r5,#1                 ;769
00006a  8005              STRH     r5,[r0,#0]            ;769
00006c  7125              STRB     r5,[r4,#4]            ;770
00006e  82e6              STRH     r6,[r4,#0x16]         ;771
000070  2003              MOVS     r0,#3                 ;772
000072  f7fffffe          BL       SetAudioIO_PlayFile
000076  480e              LDR      r0,|L11.176|
000078  7005              STRB     r5,[r0,#0]            ;773
00007a  8326              STRH     r6,[r4,#0x18]         ;774
00007c  e7df              B        |L11.62|
;;;786    
                          ENDP

00007e  0000              DCW      0x0000
                  |L11.128|
                          DCD      ||.data||
                  |L11.132|
                          DCD      open_door
                  |L11.136|
000088  c3c5cbf8          DCB      195,197,203,248,210,209,191,170,0
00008c  d2d1bfaa
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
                  |L11.148|
000094  25730a00          DCB      "%s\n",0
                  |L11.152|
                          DCD      SeReadcard_h_CardID
                  |L11.156|
00009c  6963bfa8          DCB      "ic",191,168," -> ",191,170,195,197,0
0000a0  202d3e20
0000a4  bfaac3c5
0000a8  00      
0000a9  00                DCB      0
0000aa  00                DCB      0
0000ab  00                DCB      0
                  |L11.172|
                          DCD      0x40020418
                  |L11.176|
                          DCD      isSectedCard_flag

                          AREA ||i.ZR60Ctrl_TonesPlay||, CODE, READONLY, ALIGN=1

                  ZR60Ctrl_TonesPlay PROC
;;;931    ******************************************************/
;;;932    static uint8_t  ZR60Ctrl_TonesPlay(uint16_t temp)
000000  b510              PUSH     {r4,lr}
;;;933    {
;;;934    	uint8_t ret;
;;;935        switch(temp)
000002  2880              CMP      r0,#0x80
000004  d02d              BEQ      |L12.98|
000006  dc11              BGT      |L12.44|
000008  2808              CMP      r0,#8
00000a  d03b              BEQ      |L12.132|
00000c  dc07              BGT      |L12.30|
00000e  b338              CBZ      r0,|L12.96|
000010  2801              CMP      r0,#1
000012  d028              BEQ      |L12.102|
000014  2802              CMP      r0,#2
000016  d02b              BEQ      |L12.112|
000018  2804              CMP      r0,#4
00001a  d121              BNE      |L12.96|
00001c  e02d              B        |L12.122|
                  |L12.30|
00001e  2810              CMP      r0,#0x10
000020  d035              BEQ      |L12.142|
000022  2820              CMP      r0,#0x20
000024  d038              BEQ      |L12.152|
000026  2840              CMP      r0,#0x40
000028  d11a              BNE      |L12.96|
00002a  e01a              B        |L12.98|
                  |L12.44|
00002c  f5b05f80          CMP      r0,#0x1000
000030  d03e              BEQ      |L12.176|
000032  dc0c              BGT      |L12.78|
000034  f5b07f80          CMP      r0,#0x100
000038  d013              BEQ      |L12.98|
00003a  f5b07f00          CMP      r0,#0x200
00003e  d010              BEQ      |L12.98|
000040  f5b06f80          CMP      r0,#0x400
000044  d02a              BEQ      |L12.156|
000046  f5b06f00          CMP      r0,#0x800
00004a  d109              BNE      |L12.96|
00004c  e02b              B        |L12.166|
                  |L12.78|
00004e  f5b05f00          CMP      r0,#0x2000
000052  d032              BEQ      |L12.186|
000054  f5b04f80          CMP      r0,#0x4000
000058  d034              BEQ      |L12.196|
00005a  f5b04f00          CMP      r0,#0x8000
00005e  d036              BEQ      |L12.206|
                  |L12.96|
;;;936        {
;;;937            case 0x0000:
;;;938    			ret = 0xff;
;;;939    		break;
;;;940            case 0x0001:
;;;941    		{
;;;942    			SetAudioIO_PlayFile(AudioIO_cancel);
;;;943    			ret =  'C';
;;;944    		}
;;;945    		break;
;;;946            case 0x0002:
;;;947    		{
;;;948    			SetAudioIO_PlayFile(AudioIO_seven);
;;;949    			ret = '7' ;
;;;950    		}
;;;951            break;
;;;952    		case 0x0004:
;;;953    		{
;;;954    			SetAudioIO_PlayFile(AudioIO_four);
;;;955    			ret =  '4';
;;;956    		}
;;;957    		break;
;;;958            case 0x0008:
;;;959    		{
;;;960    			SetAudioIO_PlayFile(AudioIO_eight);
;;;961    			ret =  '8';
;;;962    		}
;;;963    		break;
;;;964            case 0x0010:
;;;965    		{
;;;966    			SetAudioIO_PlayFile(AudioIO_zero);
;;;967    			ret = '0';
;;;968    		}
;;;969    		break;
;;;970            case 0x0020:
;;;971    			//StartPlay("1:/确定.wav",0);
;;;972    			ret =  'A';
;;;973    		break;
;;;974            case 0x0040:
;;;975    			// ret =  'E';
;;;976    		break;
;;;977            case 0x0080:
;;;978    			// ret =  'F';
;;;979    		break;
;;;980            case 0x0100:
;;;981    			//ret =  'D';
;;;982    		break;
;;;983            case 0x0200:
;;;984    			// ret =  'B';
;;;985    		break;
;;;986            case 0x0400:
;;;987    		{
;;;988    			SetAudioIO_PlayFile(AudioIO_six);
;;;989    			ret =  '6';
;;;990    		}
;;;991    		break;
;;;992            case 0x0800:
;;;993    		{
;;;994    			SetAudioIO_PlayFile(AudioIO_nine);
;;;995    			ret =  '9';
;;;996    		}
;;;997    		break;
;;;998            case 0x1000:
;;;999    		{
;;;1000   			SetAudioIO_PlayFile(AudioIO_three);
;;;1001   			ret = '3';
;;;1002   		}
;;;1003   		break;
;;;1004           case 0x2000:
;;;1005   		{
;;;1006   			SetAudioIO_PlayFile(AudioIO_two);
;;;1007   			ret = '2';
;;;1008   		}
;;;1009   		break;
;;;1010           case 0x4000:
;;;1011   		{
;;;1012   			SetAudioIO_PlayFile(AudioIO_five);
;;;1013   			ret = '5';
;;;1014   		}
;;;1015   		break;
;;;1016           case 0x8000:
;;;1017   		{
;;;1018   			SetAudioIO_PlayFile(AudioIO_one);
;;;1019   			ret = '1';
;;;1020   		}
;;;1021   		break;
;;;1022   		default:
;;;1023   		{
;;;1024   			ret = 0xff;
000060  21ff              MOVS     r1,#0xff
                  |L12.98|
;;;1025   		}
;;;1026   		break;
;;;1027       }
;;;1028   		return ret;
000062  4608              MOV      r0,r1
;;;1029   }
000064  bd10              POP      {r4,pc}
                  |L12.102|
000066  2012              MOVS     r0,#0x12              ;942
000068  f7fffffe          BL       SetAudioIO_PlayFile
00006c  2143              MOVS     r1,#0x43              ;943
00006e  e7f8              B        |L12.98|
                  |L12.112|
000070  200f              MOVS     r0,#0xf               ;948
000072  f7fffffe          BL       SetAudioIO_PlayFile
000076  2137              MOVS     r1,#0x37              ;949
000078  e7f3              B        |L12.98|
                  |L12.122|
00007a  200c              MOVS     r0,#0xc               ;954
00007c  f7fffffe          BL       SetAudioIO_PlayFile
000080  2134              MOVS     r1,#0x34              ;955
000082  e7ee              B        |L12.98|
                  |L12.132|
000084  2010              MOVS     r0,#0x10              ;960
000086  f7fffffe          BL       SetAudioIO_PlayFile
00008a  2138              MOVS     r1,#0x38              ;961
00008c  e7e9              B        |L12.98|
                  |L12.142|
00008e  2008              MOVS     r0,#8                 ;966
000090  f7fffffe          BL       SetAudioIO_PlayFile
000094  2130              MOVS     r1,#0x30              ;967
000096  e7e4              B        |L12.98|
                  |L12.152|
000098  2141              MOVS     r1,#0x41              ;972
00009a  e7e2              B        |L12.98|
                  |L12.156|
00009c  200e              MOVS     r0,#0xe               ;988
00009e  f7fffffe          BL       SetAudioIO_PlayFile
0000a2  2136              MOVS     r1,#0x36              ;989
0000a4  e7dd              B        |L12.98|
                  |L12.166|
0000a6  2011              MOVS     r0,#0x11              ;994
0000a8  f7fffffe          BL       SetAudioIO_PlayFile
0000ac  2139              MOVS     r1,#0x39              ;995
0000ae  e7d8              B        |L12.98|
                  |L12.176|
0000b0  200b              MOVS     r0,#0xb               ;1000
0000b2  f7fffffe          BL       SetAudioIO_PlayFile
0000b6  2133              MOVS     r1,#0x33              ;1001
0000b8  e7d3              B        |L12.98|
                  |L12.186|
0000ba  200a              MOVS     r0,#0xa               ;1006
0000bc  f7fffffe          BL       SetAudioIO_PlayFile
0000c0  2132              MOVS     r1,#0x32              ;1007
0000c2  e7ce              B        |L12.98|
                  |L12.196|
0000c4  200d              MOVS     r0,#0xd               ;1012
0000c6  f7fffffe          BL       SetAudioIO_PlayFile
0000ca  2135              MOVS     r1,#0x35              ;1013
0000cc  e7c9              B        |L12.98|
                  |L12.206|
0000ce  2009              MOVS     r0,#9                 ;1018
0000d0  f7fffffe          BL       SetAudioIO_PlayFile
0000d4  2131              MOVS     r1,#0x31              ;1019
0000d6  e7c4              B        |L12.98|
;;;1030   
                          ENDP


                          AREA ||i.ZR60Ctrl_u_ArrayCmp||, CODE, READONLY, ALIGN=1

                  ZR60Ctrl_u_ArrayCmp PROC
;;;1151   ******************************************************/
;;;1152   char ZR60Ctrl_u_ArrayCmp(unsigned char *a,unsigned char *b, unsigned int len)
000000  b530              PUSH     {r4,r5,lr}
;;;1153   {
;;;1154   	unsigned int Le_w_i;
;;;1155   	for(Le_w_i = 0; Le_w_i < len; Le_w_i++)
000002  2300              MOVS     r3,#0
000004  e006              B        |L13.20|
                  |L13.6|
;;;1156   		if(a[Le_w_i]!=b[Le_w_i]) return 0;//出现不相等元素，返回0.
000006  5cc4              LDRB     r4,[r0,r3]
000008  5ccd              LDRB     r5,[r1,r3]
00000a  42ac              CMP      r4,r5
00000c  d001              BEQ      |L13.18|
00000e  2000              MOVS     r0,#0
;;;1157   	return 1;//完全相等，返回1。
;;;1158   }
000010  bd30              POP      {r4,r5,pc}
                  |L13.18|
000012  1c5b              ADDS     r3,r3,#1
                  |L13.20|
000014  4293              CMP      r3,r2                 ;1155
000016  d3f6              BCC      |L13.6|
000018  2001              MOVS     r0,#1                 ;1157
00001a  bd30              POP      {r4,r5,pc}
;;;1159   
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  test_buf
                          %        16
                  Ve_h_tm
                          %        36

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  CeZR60Ctrl_u_SoftVersion
000000  5a523630          DCB      0x5a,0x52,0x36,0x30
000004  5f76322e          DCB      0x5f,0x76,0x32,0x2e
000008  3000              DCB      0x30,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  sm3_flag
000000  00                DCB      0x00
                  state
000001  00                DCB      0x00
                  sec_count
000002  00                DCB      0x00
                  b_5s_flag
000003  00                DCB      0x00
                  SeZR60_u_DoorLockRelaySt
000004  00                DCB      0x00
                  SeZR60_u_BleUnlockflag
000005  00                DCB      0x00
                  SeZR60_u_NetUnlockflag
000006  00                DCB      0x00
                  SeZR60_u_BleLogFltrflag
000007  00                DCB      0x00
                  ALARM
000008  00                DCB      0x00
                  Se_u_VoltageDifferencCnt
000009  00                DCB      0x00
                  Se_u_CloseDoorDelayTimeSetFlag
00000a  00                DCB      0x00
                  flag
00000b  01                DCB      0x01
                  key_num
00000c  00                DCB      0x00
                  key_flag
00000d  00                DCB      0x00
                  SeCardSet_u_St
00000e  00                DCB      0x00
                  SeCardSet_u_PasswordKeySt
00000f  00                DCB      0x00
                  SeCardSet_u_BleSt
000010  00                DCB      0x00
                  Se_u_PasswordCmpFlag
000011  00                DCB      0x00
                  b_5s_count
000012  0000              DCW      0x0000
                  Se_w_DoorLockdelayT
000014  ffff              DCW      0xffff
                  Se_w_LockDoorTimer
000016  0000              DCW      0x0000
                  w_SetAutoCard_DelayTime
000018  0000              DCW      0x0000
                  w_500msflag_DelayTime
00001a  0000              DCW      0x0000
                  w_1sflag_DelayTime
00001c  0000              DCW      0x0000
                  w_BleNetExcUnlockDelayTimer
00001e  0000              DCW      0x0000
                  buf
000020  2000              DCB      0x20,0x00
                  key
000022  0000              DCW      0x0000
                  value
000024  0000              DCW      0x0000
                  SeCardSet_w_BleDisCnntT
000026  0000              DCW      0x0000
                  Voltage_value
000028  0000              DCW      0x0000
00002a  0000              DCB      0x00,0x00
                  dw_5msflag_T1
                          DCD      0x00000000
                  dw_5msflag_T2
                          DCD      0x00000000
                  SeCardSet_dw_ALARMDlyTime
                          DCD      0x00000000
                  SeCardSet_dw_nowtime
                          DCD      0x00000000
                  SeCardSet_dw_Timer
                          DCD      0x00000000
                  ||sm||
000040  46464646          DCB      0x46,0x46,0x46,0x46
000044  46464646          DCB      0x46,0x46,0x46,0x46
000048  46464646          DCB      0x46,0x46,0x46,0x46
00004c  46464646          DCB      0x46,0x46,0x46,0x46
000050  46464646          DCB      0x46,0x46,0x46,0x46
000054  46464646          DCB      0x46,0x46,0x46,0x46
000058  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\APP\\ZR60_Ctrl\\ZR60_Ctrl.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_ZR60_Ctrl_c_0eb8c92e____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_ZR60_Ctrl_c_0eb8c92e____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_ZR60_Ctrl_c_0eb8c92e____REVSH|
#line 153
|__asm___11_ZR60_Ctrl_c_0eb8c92e____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_ZR60_Ctrl_c_0eb8c92e____RRX|
#line 328
|__asm___11_ZR60_Ctrl_c_0eb8c92e____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
