; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\memp.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\memp.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\memp.crf ..\..\Lwip\lwip-1.4.1\src\core\memp.c]
                          THUMB

                          AREA ||i.memp_free||, CODE, READONLY, ALIGN=2

                  memp_free PROC
;;;434    void
;;;435    memp_free(memp_t type, void *mem)
000000  b570              PUSH     {r4-r6,lr}
;;;436    {
000002  000c              MOVS     r4,r1
000004  4605              MOV      r5,r0
000006  d00a              BEQ      |L1.30|
;;;437    	struct memp *memp;
;;;438    	SYS_ARCH_DECL_PROTECT(old_level);
;;;439    
;;;440    	if (mem == NULL) 
;;;441    	{
;;;442    		return;
;;;443    	}
;;;444    	LWIP_ASSERT("memp_free: mem properly aligned",
000008  07a0              LSLS     r0,r4,#30
00000a  d002              BEQ      |L1.18|
00000c  a004              ADR      r0,|L1.32|
00000e  f7fffffe          BL       __2printf
                  |L1.18|
;;;445    				((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
;;;446    
;;;447    	memp = (struct memp *)(void *)((u8_t*)mem - MEMP_SIZE);
;;;448    
;;;449    	SYS_ARCH_PROTECT(old_level);
;;;450    	#if MEMP_OVERFLOW_CHECK
;;;451    	#if MEMP_OVERFLOW_CHECK >= 2
;;;452    	memp_overflow_check_all();
;;;453    	#else
;;;454    	memp_overflow_check_element_overflow(memp, type);
;;;455    	memp_overflow_check_element_underflow(memp, type);
;;;456    	#endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;457    	#endif /* MEMP_OVERFLOW_CHECK */
;;;458    
;;;459    	MEMP_STATS_DEC(used, type); 
;;;460    
;;;461    	memp->next = memp_tab[type]; 
000012  480b              LDR      r0,|L1.64|
000014  f8501025          LDR      r1,[r0,r5,LSL #2]
;;;462    	memp_tab[type] = memp;
000018  6021              STR      r1,[r4,#0]
00001a  f8404025          STR      r4,[r0,r5,LSL #2]
                  |L1.30|
;;;463    
;;;464    	#if MEMP_SANITY_CHECK
;;;465    	LWIP_ASSERT("memp sanity", memp_sanity());
;;;466    	#endif /* MEMP_SANITY_CHECK */
;;;467    
;;;468    	SYS_ARCH_UNPROTECT(old_level);
;;;469    }
00001e  bd70              POP      {r4-r6,pc}
;;;470    
                          ENDP

                  |L1.32|
000020  6d656d70          DCB      "memp_free: mem properly aligned",0
000024  5f667265
000028  653a206d
00002c  656d2070
000030  726f7065
000034  726c7920
000038  616c6967
00003c  6e656400
                  |L1.64|
                          DCD      ||.bss||

                          AREA ||i.memp_init||, CODE, READONLY, ALIGN=2

                  memp_init PROC
;;;337    void
;;;338    memp_init(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;339    {
;;;340      struct memp *memp;
;;;341      u16_t i, j;
;;;342    
;;;343      for (i = 0; i < MEMP_MAX; ++i) {
000002  2000              MOVS     r0,#0
                  |L2.4|
000004  1c40              ADDS     r0,r0,#1
000006  b280              UXTH     r0,r0
000008  2809              CMP      r0,#9
00000a  d3fb              BCC      |L2.4|
;;;344        MEMP_STATS_AVAIL(used, i, 0);
;;;345        MEMP_STATS_AVAIL(max, i, 0);
;;;346        MEMP_STATS_AVAIL(err, i, 0);
;;;347        MEMP_STATS_AVAIL(avail, i, memp_num[i]);
;;;348      }
;;;349    
;;;350    #if !MEMP_SEPARATE_POOLS
;;;351      memp = (struct memp *)LWIP_MEM_ALIGN(memp_memory);
00000c  4810              LDR      r0,|L2.80|
;;;352    #endif /* !MEMP_SEPARATE_POOLS */
;;;353      /* for every pool: */
;;;354      for (i = 0; i < MEMP_MAX; ++i) {
;;;355        memp_tab[i] = NULL;
00000e  4c10              LDR      r4,|L2.80|
000010  f0200103          BIC      r1,r0,#3              ;351
000014  2000              MOVS     r0,#0                 ;354
;;;356    #if MEMP_SEPARATE_POOLS
;;;357        memp = (struct memp*)memp_bases[i];
;;;358    #endif /* MEMP_SEPARATE_POOLS */
;;;359        /* create a linked list of memp elements */
;;;360        for (j = 0; j < memp_num[i]; ++j) {
;;;361          memp->next = memp_tab[i];
;;;362          memp_tab[i] = memp;
;;;363          memp = (struct memp *)(void *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]
000016  4e0f              LDR      r6,|L2.84|
000018  4607              MOV      r7,r0                 ;354
00001a  3c27              SUBS     r4,r4,#0x27           ;355
00001c  f1060512          ADD      r5,r6,#0x12           ;360
                  |L2.32|
000020  f8447020          STR      r7,[r4,r0,LSL #2]     ;355
000024  2200              MOVS     r2,#0                 ;360
000026  e009              B        |L2.60|
                  |L2.40|
000028  f8543020          LDR      r3,[r4,r0,LSL #2]     ;361
00002c  600b              STR      r3,[r1,#0]            ;362
00002e  f8441020          STR      r1,[r4,r0,LSL #2]     ;362
000032  f8363010          LDRH     r3,[r6,r0,LSL #1]
000036  1c52              ADDS     r2,r2,#1
000038  4419              ADD      r1,r1,r3
00003a  b292              UXTH     r2,r2                 ;360
                  |L2.60|
00003c  f8353010          LDRH     r3,[r5,r0,LSL #1]     ;360
000040  4293              CMP      r3,r2                 ;360
000042  d8f1              BHI      |L2.40|
000044  1c40              ADDS     r0,r0,#1              ;360
000046  b280              UXTH     r0,r0                 ;354
000048  2809              CMP      r0,#9                 ;354
00004a  d3e9              BCC      |L2.32|
;;;364    #if MEMP_OVERFLOW_CHECK
;;;365            + MEMP_SANITY_REGION_AFTER_ALIGNED
;;;366    #endif
;;;367          );
;;;368        }
;;;369      }
;;;370    #if MEMP_OVERFLOW_CHECK
;;;371      memp_overflow_init();
;;;372      /* check everything a first time to see if it worked */
;;;373      memp_overflow_check_all();
;;;374    #endif /* MEMP_OVERFLOW_CHECK */
;;;375    }
00004c  bdf0              POP      {r4-r7,pc}
;;;376    
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
                          DCD      ||.bss||+0x27
                  |L2.84|
                          DCD      ||.constdata||

                          AREA ||i.memp_malloc||, CODE, READONLY, ALIGN=2

                  memp_malloc PROC
;;;389    #if !MEMP_OVERFLOW_CHECK
;;;390    memp_malloc(memp_t type)
000000  b510              PUSH     {r4,lr}
;;;391    #else
;;;392    memp_malloc_fn(memp_t type, const char* file, const int line)
;;;393    #endif
;;;394    {
;;;395      struct memp *memp;
;;;396      SYS_ARCH_DECL_PROTECT(old_level);
;;;397     
;;;398      LWIP_ERROR("memp_malloc: type < MEMP_MAX", (type < MEMP_MAX), return NULL;);
000002  2809              CMP      r0,#9
000004  d304              BCC      |L3.16|
000006  a009              ADR      r0,|L3.44|
000008  f7fffffe          BL       __2printf
00000c  2000              MOVS     r0,#0
;;;399    
;;;400      SYS_ARCH_PROTECT(old_level);
;;;401    #if MEMP_OVERFLOW_CHECK >= 2
;;;402      memp_overflow_check_all();
;;;403    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;404    
;;;405      memp = memp_tab[type];
;;;406      
;;;407      if (memp != NULL) {
;;;408        memp_tab[type] = memp->next;
;;;409    #if MEMP_OVERFLOW_CHECK
;;;410        memp->next = NULL;
;;;411        memp->file = file;
;;;412        memp->line = line;
;;;413    #endif /* MEMP_OVERFLOW_CHECK */
;;;414        MEMP_STATS_INC_USED(used, type);
;;;415        LWIP_ASSERT("memp_malloc: memp properly aligned",
;;;416                    ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
;;;417        memp = (struct memp*)(void *)((u8_t*)memp + MEMP_SIZE);
;;;418      } else {
;;;419        LWIP_DEBUGF(MEMP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("memp_malloc: out of memory in pool %s\n", memp_desc[type]));
;;;420        MEMP_STATS_INC(err, type);
;;;421      }
;;;422    
;;;423      SYS_ARCH_UNPROTECT(old_level);
;;;424    
;;;425      return memp;
;;;426    }
00000e  bd10              POP      {r4,pc}
                  |L3.16|
000010  490e              LDR      r1,|L3.76|
000012  f8514020          LDR      r4,[r1,r0,LSL #2]     ;405
000016  b13c              CBZ      r4,|L3.40|
000018  6822              LDR      r2,[r4,#0]            ;408
00001a  f8412020          STR      r2,[r1,r0,LSL #2]     ;408
00001e  07a0              LSLS     r0,r4,#30             ;415
000020  d002              BEQ      |L3.40|
000022  a00b              ADR      r0,|L3.80|
000024  f7fffffe          BL       __2printf
                  |L3.40|
000028  4620              MOV      r0,r4                 ;425
00002a  bd10              POP      {r4,pc}
;;;427    
                          ENDP

                  |L3.44|
00002c  6d656d70          DCB      "memp_malloc: type < MEMP_MAX",0
000030  5f6d616c
000034  6c6f633a
000038  20747970
00003c  65203c20
000040  4d454d50
000044  5f4d4158
000048  00      
000049  00                DCB      0
00004a  00                DCB      0
00004b  00                DCB      0
                  |L3.76|
                          DCD      ||.bss||
                  |L3.80|
000050  6d656d70          DCB      "memp_malloc: memp properly aligned",0
000054  5f6d616c
000058  6c6f633a
00005c  206d656d
000060  70207072
000064  6f706572
000068  6c792061
00006c  6c69676e
000070  656400  
000073  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  memp_tab
                          %        36
                  memp_memory
                          %        14663

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  memp_sizes
000000  001c0020          DCW      0x001c,0x0020
000004  0098001c          DCW      0x0098,0x001c
000008  00100020          DCW      0x0010,0x0020
00000c  00180010          DCW      0x0018,0x0010
000010  05c4              DCW      0x05c4
                  memp_num
000012  0004              DCW      0x0004
000014  000c0006          DCW      0x000c,0x0006
000018  00010028          DCW      0x0001,0x0028
00001c  0005000f          DCW      0x0005,0x000f
000020  00100008          DCW      0x0010,0x0008
