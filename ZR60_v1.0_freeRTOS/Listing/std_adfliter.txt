; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\std_adfliter.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\std_adfliter.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\std_adfliter.crf ..\..\Ecal\STD_ADFliter\STD_ADFliter.c]
                          THUMB

                          AREA ||i.ADFliter_ADFliterDeal||, CODE, READONLY, ALIGN=2

                  ADFliter_ADFliterDeal PROC
;;;176    ******************************************************/
;;;177    static void ADFliter_ADFliterDeal(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;178    {
;;;179    	uint8 LeADFliter_u_Index;
;;;180    	uint8 LeADFliter_u_Middle;
;;;181    	for(LeADFliter_u_Index=0;LeADFliter_u_Index < ADFLITERCFG_CHANNELNUM;LeADFliter_u_Index++)
;;;182    	{
;;;183    		if(STD_ACTIVE == SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_FliterArrayFullFlag)
;;;184    		{
;;;185    			SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_FliterArrayFullFlag = STD_INACTIVE;
;;;186    			/*****************冒泡排序****************/
;;;187    			ALibrary_AscendingBubbleSort(SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADData,	\
000004  f8df9080          LDR      r9,|L1.136|
000008  f8dfa080          LDR      r10,|L1.140|
00000c  2400              MOVS     r4,#0                 ;181
                  |L1.14|
00000e  eb040144          ADD      r1,r4,r4,LSL #1       ;183
000012  eb0a1101          ADD      r1,r10,r1,LSL #4      ;183
000016  7808              LDRB     r0,[r1,#0]            ;183
000018  2801              CMP      r0,#1                 ;183
00001a  d126              BNE      |L1.106|
00001c  2000              MOVS     r0,#0                 ;185
00001e  7008              STRB     r0,[r1,#0]            ;185
000020  f819c004          LDRB     r12,[r9,r4]
000024  1d0b              ADDS     r3,r1,#4
000026  4602              MOV      r2,r0
000028  f1ac0801          SUB      r8,r12,#1
00002c  e012              B        |L1.84|
                  |L1.46|
00002e  f1ac0001          SUB      r0,r12,#1
000032  e00c              B        |L1.78|
                  |L1.52|
000034  eb030780          ADD      r7,r3,r0,LSL #2
000038  f8536020          LDR      r6,[r3,r0,LSL #2]
00003c  f8575c04          LDR      r5,[r7,#-4]
000040  42ae              CMP      r6,r5
000042  da03              BGE      |L1.76|
000044  f8435020          STR      r5,[r3,r0,LSL #2]
000048  f8476c04          STR      r6,[r7,#-4]
                  |L1.76|
00004c  1e40              SUBS     r0,r0,#1
                  |L1.78|
00004e  4290              CMP      r0,r2
000050  dcf0              BGT      |L1.52|
000052  1c52              ADDS     r2,r2,#1
                  |L1.84|
000054  4542              CMP      r2,r8
000056  dbea              BLT      |L1.46|
;;;188    										 CaADFliter_u_ADDataSampleNum[LeADFliter_u_Index]);
;;;189    			/*****************************************/
;;;190    			LeADFliter_u_Middle = (CaADFliter_u_ADDataSampleNum[LeADFliter_u_Index] >> 1);
000058  f8192004          LDRB     r2,[r9,r4]
00005c  0850              LSRS     r0,r2,#1
;;;191    			if(0 == (CaADFliter_u_ADDataSampleNum[LeADFliter_u_Index]%2))//滤波数组中数据个数为偶数
00005e  07d2              LSLS     r2,r2,#31
000060  d009              BEQ      |L1.118|
;;;192    			{//取中间2个值的均值作为AD滤波结果
;;;193    				SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADResult = \
;;;194    				((SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADData[LeADFliter_u_Middle] \
;;;195    				+ SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADData[(LeADFliter_u_Middle-1)]) >> 1);
;;;196    			}
;;;197    			else//滤波数组中数据个数为奇数
;;;198    			{                                                            //取中间值作为AD滤波结果
;;;199    				SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADResult = \
000062  eb010080          ADD      r0,r1,r0,LSL #2
000066  8880              LDRH     r0,[r0,#4]
                  |L1.104|
000068  85c8              STRH     r0,[r1,#0x2e]         ;193
                  |L1.106|
00006a  1c64              ADDS     r4,r4,#1              ;193
00006c  f01404ff          ANDS     r4,r4,#0xff           ;181
000070  d0cd              BEQ      |L1.14|
;;;200    					SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADData[LeADFliter_u_Middle]; 
;;;201    			}
;;;202    		}
;;;203    		else
;;;204    		{}
;;;205    	}
;;;206    }
000072  e8bd87f0          POP      {r4-r10,pc}
                  |L1.118|
000076  eb010280          ADD      r2,r1,r0,LSL #2       ;193
00007a  f8510020          LDR      r0,[r1,r0,LSL #2]     ;193
00007e  6852              LDR      r2,[r2,#4]            ;193
000080  4410              ADD      r0,r0,r2              ;193
000082  1040              ASRS     r0,r0,#1              ;193
000084  e7f0              B        |L1.104|
;;;207    
                          ENDP

000086  0000              DCW      0x0000
                  |L1.136|
                          DCD      CaADFliter_u_ADDataSampleNum
                  |L1.140|
                          DCD      ||.bss||

                          AREA ||i.ADFliter_FliterArrayFill||, CODE, READONLY, ALIGN=2

                  ADFliter_FliterArrayFill PROC
;;;144    ******************************************************/
;;;145    static void ADFliter_FliterArrayFill(void)
000000  b570              PUSH     {r4-r6,lr}
;;;146    {
;;;147    	uint8 LeADFliter_u_Index;
;;;148    	for(LeADFliter_u_Index =0;LeADFliter_u_Index < ADFLITERCFG_CHANNELNUM;LeADFliter_u_Index++)
;;;149    	{
;;;150    		SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADData[SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_ADDataCnt] = \
000002  4c10              LDR      r4,|L2.68|
;;;151    			GetADFliter_sw_ADSampleData(LeADFliter_u_Index);
;;;152    		SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_ADDataCnt++;
;;;153    		/*防止溢出，滤波数组填充完成*/
;;;154    		if(CaADFliter_u_ADDataSampleNum[LeADFliter_u_Index] == SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_ADDataCnt)
000004  4d10              LDR      r5,|L2.72|
000006  4b11              LDR      r3,|L2.76|
000008  2000              MOVS     r0,#0                 ;148
                  |L2.10|
00000a  8822              LDRH     r2,[r4,#0]            ;150  ; ADC_ConvertedValue
00000c  eb000140          ADD      r1,r0,r0,LSL #1       ;150
000010  eb031101          ADD      r1,r3,r1,LSL #4       ;150
000014  f891602c          LDRB     r6,[r1,#0x2c]         ;150
000018  eb010686          ADD      r6,r1,r6,LSL #2       ;150
00001c  6072              STR      r2,[r6,#4]            ;152
00001e  f891202c          LDRB     r2,[r1,#0x2c]         ;152
000022  1c52              ADDS     r2,r2,#1              ;152
000024  b2d2              UXTB     r2,r2                 ;152
000026  f881202c          STRB     r2,[r1,#0x2c]         ;152
00002a  5c2e              LDRB     r6,[r5,r0]
00002c  4296              CMP      r6,r2
00002e  d104              BNE      |L2.58|
;;;155    		{
;;;156    			SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_ADDataCnt = STD_NULL;//清零，确保下次循环重新填充
000030  2200              MOVS     r2,#0
000032  f881202c          STRB     r2,[r1,#0x2c]
;;;157    			SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_FliterArrayFullFlag = STD_ACTIVE;
000036  2201              MOVS     r2,#1
000038  700a              STRB     r2,[r1,#0]
                  |L2.58|
00003a  1c40              ADDS     r0,r0,#1
00003c  f01000ff          ANDS     r0,r0,#0xff           ;148
000040  d0e3              BEQ      |L2.10|
;;;158    		}
;;;159    		else
;;;160    		{}
;;;161    	}
;;;162    }
000042  bd70              POP      {r4-r6,pc}
;;;163    
                          ENDP

                  |L2.68|
                          DCD      ADC_ConvertedValue
                  |L2.72|
                          DCD      CaADFliter_u_ADDataSampleNum
                  |L2.76|
                          DCD      ||.bss||

                          AREA ||i.GetADFliter_ADFliterResult||, CODE, READONLY, ALIGN=2

                  GetADFliter_ADFliterResult PROC
;;;219    ******************************************************/
;;;220    int16 GetADFliter_ADFliterResult(uint8 LeADFliter_u_IndexCH)
000000  4903              LDR      r1,|L3.16|
;;;221    {
;;;222    	return SaADFliter_h_FliterParm[LeADFliter_u_IndexCH].e_sw_ADResult;
000002  eb000040          ADD      r0,r0,r0,LSL #1
000006  eb011000          ADD      r0,r1,r0,LSL #4
00000a  f9b0002e          LDRSH    r0,[r0,#0x2e]
;;;223    }
00000e  4770              BX       lr
;;;224    
                          ENDP

                  |L3.16|
                          DCD      ||.bss||

                          AREA ||i.InitADFliter_parameter||, CODE, READONLY, ALIGN=2

                  InitADFliter_parameter PROC
;;;50     ******************************************************/
;;;51     void InitADFliter_parameter(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;52     {
;;;53     	uint8 LeADFliter_u_Index;
;;;54     	uint8 LeADFliter_u_ArrayIndex;
;;;55     	SeADFliter_u_ADFliterSt = ADFLITERTYPES_PWRONFASTFLITER;//上电快速滤波状态
000002  4c0f              LDR      r4,|L4.64|
000004  2300              MOVS     r3,#0
;;;56     	for(LeADFliter_u_Index=0;LeADFliter_u_Index < ADFLITERCFG_CHANNELNUM;LeADFliter_u_Index++)
;;;57     	{
;;;58     		SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_FliterArrayFullFlag = STD_INACTIVE;
000006  4d0f              LDR      r5,|L4.68|
;;;59     		for(LeADFliter_u_ArrayIndex=0;LeADFliter_u_ArrayIndex < ADFLITERCFG_ADARRAYLENGTH_MAX;LeADFliter_u_ArrayIndex++)
;;;60     		{
;;;61     			SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADData[LeADFliter_u_ArrayIndex] = STD_NULL;
;;;62     		}
;;;63     		SaADFliter_h_FliterParm[LeADFliter_u_Index].e_u_ADDataCnt = STD_NULL;
;;;64     		SaADFliter_h_FliterParm[LeADFliter_u_Index].e_sw_ADResult = CaADFliter_sw_DefaultADResult[LeADFliter_u_Index];
000008  4e0f              LDR      r6,|L4.72|
00000a  7023              STRB     r3,[r4,#0]            ;55
00000c  4619              MOV      r1,r3                 ;56
                  |L4.14|
00000e  eb010041          ADD      r0,r1,r1,LSL #1       ;58
000012  eb051200          ADD      r2,r5,r0,LSL #4       ;58
000016  2000              MOVS     r0,#0                 ;59
000018  7013              STRB     r3,[r2,#0]            ;58
                  |L4.26|
00001a  eb020780          ADD      r7,r2,r0,LSL #2       ;61
00001e  1c40              ADDS     r0,r0,#1              ;61
000020  b2c0              UXTB     r0,r0                 ;59
000022  607b              STR      r3,[r7,#4]            ;59
000024  280a              CMP      r0,#0xa               ;59
000026  d3f8              BCC      |L4.26|
000028  f882302c          STRB     r3,[r2,#0x2c]         ;63
00002c  f8360011          LDRH     r0,[r6,r1,LSL #1]
000030  1c49              ADDS     r1,r1,#1
000032  85d0              STRH     r0,[r2,#0x2e]
000034  f01101ff          ANDS     r1,r1,#0xff           ;56
000038  d0e9              BEQ      |L4.14|
;;;65     	}
;;;66     	SeADFliter_u_GetADTimer = STD_NULL;
00003a  7063              STRB     r3,[r4,#1]
;;;67     }
00003c  bdf0              POP      {r4-r7,pc}
;;;68     
                          ENDP

00003e  0000              DCW      0x0000
                  |L4.64|
                          DCD      ||.data||
                  |L4.68|
                          DCD      ||.bss||
                  |L4.72|
                          DCD      CaADFliter_sw_DefaultADResult

                          AREA ||i.MngADFliter_mainFunction||, CODE, READONLY, ALIGN=2

                  MngADFliter_mainFunction PROC
;;;80     ******************************************************/
;;;81     void MngADFliter_mainFunction(void)
000000  b570              PUSH     {r4-r6,lr}
;;;82     {
;;;83     	switch(SeADFliter_u_ADFliterSt)
000002  4c12              LDR      r4,|L5.76|
000004  7820              LDRB     r0,[r4,#0]  ; SeADFliter_u_ADFliterSt
000006  b170              CBZ      r0,|L5.38|
000008  2801              CMP      r0,#1
00000a  d11b              BNE      |L5.68|
;;;84     	{
;;;85     		case  ADFLITERTYPES_PWRONFASTFLITER:
;;;86     		{
;;;87     			ADFliter_PwrOnFastFliter();//上电快速滤波
;;;88     			SeADFliter_u_ADFliterSt = ADFLITERTYPES_NORMALFLITER;//状态机切换  
;;;89     		}
;;;90     		break;
;;;91     		case  ADFLITERTYPES_NORMALFLITER:
;;;92     		{
;;;93     			if(CaADFliter_u_GetADTimeReach == SeADFliter_u_GetADTimer)
00000c  4810              LDR      r0,|L5.80|
00000e  7801              LDRB     r1,[r0,#0]  ; CaADFliter_u_GetADTimeReach
000010  7860              LDRB     r0,[r4,#1]  ; SeADFliter_u_GetADTimer
000012  4281              CMP      r1,r0
000014  d117              BNE      |L5.70|
;;;94     			{
;;;95     				SeADFliter_u_GetADTimer = STD_NULL;
000016  2000              MOVS     r0,#0
000018  7060              STRB     r0,[r4,#1]
;;;96     				ADFliter_FliterArrayFill();//填充滤波数组
00001a  f7fffffe          BL       ADFliter_FliterArrayFill
;;;97     				ADFliter_ADFliterDeal();//对填充好的滤波数组滤波处理  
00001e  e8bd4070          POP      {r4-r6,lr}
000022  f7ffbffe          B.W      ADFliter_ADFliterDeal
                  |L5.38|
000026  4a0b              LDR      r2,|L5.84|
000028  490b              LDR      r1,|L5.88|
00002a  2000              MOVS     r0,#0
                  |L5.44|
00002c  8813              LDRH     r3,[r2,#0]  ; ADC_ConvertedValue
00002e  eb000540          ADD      r5,r0,r0,LSL #1
000032  eb011505          ADD      r5,r1,r5,LSL #4
000036  1c40              ADDS     r0,r0,#1
000038  85eb              STRH     r3,[r5,#0x2e]
00003a  f01000ff          ANDS     r0,r0,#0xff
00003e  d0f5              BEQ      |L5.44|
000040  2001              MOVS     r0,#1                 ;88
000042  7020              STRB     r0,[r4,#0]            ;88
                  |L5.68|
;;;98     			}
;;;99     			else
;;;100    			{
;;;101    				SeADFliter_u_GetADTimer++;
;;;102    			}
;;;103    		}
;;;104    		break;
;;;105    		default:
;;;106    		break;
;;;107    	}
;;;108    }
000044  bd70              POP      {r4-r6,pc}
                  |L5.70|
000046  1c40              ADDS     r0,r0,#1
000048  7060              STRB     r0,[r4,#1]            ;101
00004a  bd70              POP      {r4-r6,pc}
;;;109    
                          ENDP

                  |L5.76|
                          DCD      ||.data||
                  |L5.80|
                          DCD      CaADFliter_u_GetADTimeReach
                  |L5.84|
                          DCD      ADC_ConvertedValue
                  |L5.88|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  SaADFliter_h_FliterParm
                          %        48

                          AREA ||.data||, DATA, ALIGN=0

                  SeADFliter_u_ADFliterSt
000000  00                DCB      0x00
                  SeADFliter_u_GetADTimer
000001  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Ecal\\STD_ADFliter\\STD_ADFliter.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_STD_ADFliter_c_f1b93cca____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_STD_ADFliter_c_f1b93cca____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_STD_ADFliter_c_f1b93cca____REVSH|
#line 153
|__asm___14_STD_ADFliter_c_f1b93cca____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_STD_ADFliter_c_f1b93cca____RRX|
#line 328
|__asm___14_STD_ADFliter_c_f1b93cca____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
