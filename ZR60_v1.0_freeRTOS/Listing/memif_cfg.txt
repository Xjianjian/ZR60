; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\memif_cfg.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\memif_cfg.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\memif_cfg.crf ..\..\Ecal\MemIf\MemIf_cfg.c]
                          THUMB

                          AREA ||i.MemIfCfg_FLASH_IDLE||, CODE, READONLY, ALIGN=1

                  MemIfCfg_FLASH_IDLE PROC
;;;173    ******************************************************/
;;;174    uint8 MemIfCfg_FLASH_IDLE(void)
000000  b510              PUSH     {r4,lr}
;;;175    {
;;;176    	uint8 ret = 0U;
000002  2400              MOVS     r4,#0
;;;177    	if((0U == GetAudioIO_u_PlaySt()) && (0U == SPI_FLASH_WrInProgStatus()))
000004  f7fffffe          BL       GetAudioIO_u_PlaySt
000008  b918              CBNZ     r0,|L1.18|
00000a  f7fffffe          BL       SPI_FLASH_WrInProgStatus
00000e  b900              CBNZ     r0,|L1.18|
;;;178    	{
;;;179    		ret = 1U;
000010  2401              MOVS     r4,#1
                  |L1.18|
;;;180    	}
;;;181    	return ret;
000012  4620              MOV      r0,r4
;;;182    }
000014  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.MemIfCfg_FLASH_Lock||, CODE, READONLY, ALIGN=1

                  MemIfCfg_FLASH_Lock PROC
;;;102    ******************************************************/
;;;103    void MemIfCfg_FLASH_Lock(void)
000000  b510              PUSH     {r4,lr}
;;;104    {
;;;105    	W25QXX_Write_SR(0x1c);//CMP=0时，开启W25Q128 16M memory写保护
000002  201c              MOVS     r0,#0x1c
000004  f7fffffe          BL       W25QXX_Write_SR
;;;106    	W25QXX_Write_Disable();//EEPROM加上保护
000008  e8bd4010          POP      {r4,lr}
00000c  f7ffbffe          B.W      W25QXX_Write_Disable
;;;107    }
;;;108    
                          ENDP


                          AREA ||i.MemIfCfg_FLASH_ProgramByte||, CODE, READONLY, ALIGN=1

                  MemIfCfg_FLASH_ProgramByte PROC
;;;119    ******************************************************/
;;;120    void MemIfCfg_FLASH_ProgramByte(uint32 Address, uint8 Data)
000000  b513              PUSH     {r0,r1,r4,lr}
;;;121    {
;;;122    	SPI_FLASH_BufferWrite(&Data,Address,1);
000002  4601              MOV      r1,r0
000004  2201              MOVS     r2,#1
000006  a801              ADD      r0,sp,#4
000008  f7fffffe          BL       SPI_FLASH_BufferWrite
;;;123    }
00000c  bd1c              POP      {r2-r4,pc}
;;;124    
                          ENDP


                          AREA ||i.MemIfCfg_FLASH_ReadByte||, CODE, READONLY, ALIGN=1

                  MemIfCfg_FLASH_ReadByte PROC
;;;135    ******************************************************/
;;;136    uint8 MemIfCfg_FLASH_ReadByte(uint32 Le_u_Addr)
000000  b508              PUSH     {r3,lr}
;;;137    {
;;;138    	uint8 ReadByte;
;;;139    	
;;;140    	SPI_FLASH_BufferRead(&ReadByte,Le_u_Addr,1);
000002  4601              MOV      r1,r0
000004  2201              MOVS     r2,#1
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       SPI_FLASH_BufferRead
;;;141    	
;;;142    	return ReadByte;
00000c  f89d0000          LDRB     r0,[sp,#0]
;;;143    }
000010  bd08              POP      {r3,pc}
;;;144    
                          ENDP


                          AREA ||i.MemIfCfg_FLASH_SectorErase||, CODE, READONLY, ALIGN=1

                  MemIfCfg_FLASH_SectorErase PROC
;;;156    ******************************************************/
;;;157    void MemIfCfg_FLASH_SectorErase(uint32 Le_u_Addr)
000000  f7ffbffe          B.W      SPI_FLASH_SectorErase
;;;158    {
;;;159    	SPI_FLASH_SectorErase(Le_u_Addr);
;;;160    }
;;;161    
                          ENDP


                          AREA ||i.MemIfCfg_FLASH_Unlock||, CODE, READONLY, ALIGN=1

                  MemIfCfg_FLASH_Unlock PROC
;;;85     ******************************************************/
;;;86     void MemIfCfg_FLASH_Unlock(void)
000000  b510              PUSH     {r4,lr}
;;;87     {
;;;88     	W25QXX_Write_SR(0x00);//CMP=0时，解除W25Q128 16M memory写保护
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       W25QXX_Write_SR
;;;89     	W25QXX_Write_Enable(); //EEPROM解除保护
000008  e8bd4010          POP      {r4,lr}
00000c  f7ffbffe          B.W      W25QXX_Write_Enable
;;;90     }
;;;91     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  CaEepromCfg_Conf
000000  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00005000
                          DCD      0x00005003
                          DCD      sminfo
000010  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x0000a000
                          DCD      0x0000a003
                          DCD      CardNumCache+0x4
000020  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00001000
                          DCD      0x00001003
                          DCD      Se_u_MacAddr
000030  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x0000b000
                          DCD      0x0000b003
                          DCD      CardNumCache+0x328
000040  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x0000c000
                          DCD      0x0000c003
                          DCD      CardNumCache+0x64c
000050  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x0000d000
                          DCD      0x0000d003
                          DCD      CardNumCache+0x970
000060  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x0000e000
                          DCD      0x0000e003
                          DCD      CardNumCache+0xc94
000070  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x0000f000
                          DCD      0x0000f003
                          DCD      CardNumCache+0xfb8
000080  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00010000
                          DCD      0x00010003
                          DCD      CardNumCache+0x12dc
000090  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00011000
                          DCD      0x00011003
                          DCD      CardNumCache+0x1600
0000a0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00012000
                          DCD      0x00012003
                          DCD      CardNumCache+0x1924
0000b0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00013000
                          DCD      0x00013003
                          DCD      CardNumCache+0x1c48
0000c0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00002000
                          DCD      0x00002003
                          DCD      BListPull
0000d0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00014000
                          DCD      0x00014003
                          DCD      sminfo
0000e0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00023000
                          DCD      0x00023003
                          DCD      sminfo
0000f0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00015000
                          DCD      0x00015003
                          DCD      Se_u_MacAddr
000100  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      0x00024000
                          DCD      0x00024003
                          DCD      Se_u_MacAddr

                          AREA ||area_number.10||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.10||, ||.constdata||
                  CaEepromCfg_CheckSumObj
000000  00020d0e          DCB      0x00,0x02,0x0d,0x0e
000004  0f10              DCB      0x0f,0x10

                          AREA ||area_number.11||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.11||, ||.constdata||
                  CaEepromCfg_ObjDtLng
000000  510c5151          DCB      0x51,0x0c,0x51,0x51
000004  0c0c              DCB      0x0c,0x0c

;*** Start embedded assembler ***

#line 1 "..\\..\\Ecal\\MemIf\\MemIf_cfg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_MemIf_cfg_c_bc8916ec____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_MemIf_cfg_c_bc8916ec____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_MemIf_cfg_c_bc8916ec____REVSH|
#line 153
|__asm___11_MemIf_cfg_c_bc8916ec____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_MemIf_cfg_c_bc8916ec____RRX|
#line 328
|__asm___11_MemIf_cfg_c_bc8916ec____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
