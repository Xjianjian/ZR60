; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\blistmng.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\blistmng.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\blistmng.crf ..\..\APP\BlackListMng\BListMng.c]
                          THUMB

                          AREA ||i.BListMng_BinSearch||, CODE, READONLY, ALIGN=1

                  BListMng_BinSearch PROC
;;;370    ******************************************************/
;;;371    static uint8 BListMng_BinSearch(uint32 num, BListMng_Struct* Le_p_data, uint16 length,uint8* Le_u_pos)/*num为待查找数字，length为数组a的长度*/
000000  b570              PUSH     {r4-r6,lr}
;;;372    {
;;;373        int low, mid, high;//必须为有符号型
;;;374        low = 0;
000002  2500              MOVS     r5,#0
000004  1e52              SUBS     r2,r2,#1
000006  e00e              B        |L1.38|
                  |L1.8|
;;;375        high = length - 1;
;;;376    
;;;377        while( low <= high )
;;;378        {
;;;379            mid = ( low + high ) / 2;
000008  18ac              ADDS     r4,r5,r2
00000a  eb0474d4          ADD      r4,r4,r4,LSR #31
00000e  1064              ASRS     r4,r4,#1
;;;380            if( *((uint32*)(&(Le_p_data->CardNumArray[mid]))) > num )
000010  eb010684          ADD      r6,r1,r4,LSL #2
000014  6876              LDR      r6,[r6,#4]
000016  4286              CMP      r6,r0
000018  d902              BLS      |L1.32|
;;;381    		{
;;;382                high = mid - 1;
00001a  f1a40201          SUB      r2,r4,#1
00001e  e002              B        |L1.38|
                  |L1.32|
;;;383    		}
;;;384            else if(*((uint32*)(&(Le_p_data->CardNumArray[mid]))) < num )
000020  d205              BCS      |L1.46|
000022  f1040501          ADD      r5,r4,#1
                  |L1.38|
000026  4295              CMP      r5,r2                 ;377
000028  ddee              BLE      |L1.8|
;;;385    		{
;;;386                low = mid + 1;
;;;387    		}
;;;388            else
;;;389    		{
;;;390    			*Le_u_pos = mid;//返回位置
;;;391    			return 1U;/*查找到num返回1*/
;;;392    		}
;;;393        }
;;;394    
;;;395        return 0U;        /*未查找到num返回0*/
00002a  2000              MOVS     r0,#0
;;;396    }
00002c  bd70              POP      {r4-r6,pc}
                  |L1.46|
00002e  701c              STRB     r4,[r3,#0]            ;390
000030  2001              MOVS     r0,#1                 ;391
000032  bd70              POP      {r4-r6,pc}
;;;397    
                          ENDP


                          AREA ||i.BListMng_Init||, CODE, READONLY, ALIGN=2

                  BListMng_Init PROC
;;;50     ******************************************************/
;;;51     void BListMng_Init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;52     {
;;;53     	uint8 Le_u_i;
;;;54     #ifdef BLISTMNG_SAVEPOWEROFF
;;;55     	uint16 	Le_w_Lng = 0U;
;;;56     	printf("\n【5】\n");
;;;57     #endif	
;;;58     	for(Le_u_i = 0U;Le_u_i < BLISTMNG_BLIST_NUM;Le_u_i++)
000002  2000              MOVS     r0,#0
;;;59     	{
;;;60     #ifdef BLISTMNG_SAVEPOWEROFF
;;;61     		if(1U == GetBListMngCfg_u_DtVild(CeBListMng_u_BlockIndex[Le_u_i]))
;;;62     		{//非易失性存储区数据读入ram缓存
;;;63     			printf("\n非易失性存储器数据块区 %d 的数据有效\n",Le_u_i);
;;;64     			Le_w_Lng = GetBListMngCfg_w_DtLng(CeBListMng_u_BlockIndex[Le_u_i]);//当前数据块区数据有效数据长
;;;65     			//剩余存储空间可存储卡的数量
;;;66     			printf("\n剩余存储空间可存储卡的数量 %d\n",(((BLISTMNG_CARD_NO_LNG * BLISTMNG_CARD_NUM)-Le_w_Lng)/BLISTMNG_CARD_NO_LNG));
;;;67     			BListMngCfg_RdEE(CeBListMng_u_BlockIndex[Le_u_i],&CardNumCache[Le_u_i].CardNumArray[0U].CardNum[0U], Le_w_Lng);
;;;68     			CardNumCache[Le_u_i].lng = Le_w_Lng;
;;;69     			CardNumCache[Le_u_i].validity = 1U;
;;;70     			printf("\n非易失性存储器数据块区 %d 的数据读入ram缓存\n",Le_u_i);
;;;71     		}
;;;72     		else
;;;73     		{
;;;74     			printf("\n非易失性存储器数据块区 %d 的数据无效  √\n",Le_u_i);
;;;75     		}
;;;76     #else
;;;77     	CardNumCache[Le_u_i].lng = 0U;
000004  4b0a              LDR      r3,|L2.48|
;;;78     	CardNumCache[Le_u_i].validity = 0U;
;;;79     	CardNumCacheBkUp[Le_u_i].lng = 0U;
000006  4c0b              LDR      r4,|L2.52|
;;;80     	CardNumCacheBkUp[Le_u_i].validity = 0U;
;;;81     	Se_u_UpdataFlag[Le_u_i] = 0U;
000008  4d0b              LDR      r5,|L2.56|
00000a  4602              MOV      r2,r0                 ;58
                  |L2.12|
00000c  21c9              MOVS     r1,#0xc9              ;77
00000e  4341              MULS     r1,r0,r1              ;77
000010  eb030681          ADD      r6,r3,r1,LSL #2       ;77
000014  8072              STRH     r2,[r6,#2]            ;77
000016  eb040681          ADD      r6,r4,r1,LSL #2       ;79
00001a  f8032021          STRB     r2,[r3,r1,LSL #2]     ;78
00001e  8072              STRH     r2,[r6,#2]            ;79
000020  f8042021          STRB     r2,[r4,r1,LSL #2]     ;80
000024  542a              STRB     r2,[r5,r0]
000026  1c40              ADDS     r0,r0,#1
000028  b2c0              UXTB     r0,r0                 ;58
00002a  280a              CMP      r0,#0xa               ;58
00002c  d3ee              BCC      |L2.12|
;;;82     #endif
;;;83     	}
;;;84     }
00002e  bd70              POP      {r4-r6,pc}
;;;85     
                          ENDP

                  |L2.48|
                          DCD      CardNumCache
                  |L2.52|
                          DCD      CardNumCacheBkUp
                  |L2.56|
                          DCD      ||.bss||

                          AREA ||i.BListMng_u_ContrastBList||, CODE, READONLY, ALIGN=2

                  BListMng_u_ContrastBList PROC
;;;271    ******************************************************/
;;;272    uint8 BListMng_u_ContrastBList(uint32 Le_dw_data)
000000  b5f8              PUSH     {r3-r7,lr}
;;;273    {
;;;274    	uint8 	Le_u_i;
;;;275    	uint16 	Le_w_Lng = 0U;
;;;276    	uint8 	Le_u_pos;
;;;277    	
;;;278    	for(Le_u_i = 0U;Le_u_i < BLISTMNG_BLIST_NUM;Le_u_i++)
;;;279    	{
;;;280    		if(1U == CardNumCacheBkUp[Le_u_i].validity)
000002  4d0d              LDR      r5,|L3.56|
000004  4606              MOV      r6,r0                 ;273
000006  2400              MOVS     r4,#0                 ;278
                  |L3.8|
000008  20c9              MOVS     r0,#0xc9
00000a  fb04f100          MUL      r1,r4,r0
00000e  f8150021          LDRB     r0,[r5,r1,LSL #2]
000012  2801              CMP      r0,#1
000014  d109              BNE      |L3.42|
;;;281    		{//当前数据块区数据有效
;;;282    			Le_w_Lng = (CardNumCacheBkUp[Le_u_i].lng/BLISTMNG_CARD_NO_LNG);//卡号个数
000016  eb050181          ADD      r1,r5,r1,LSL #2
;;;283    			if(1U == BListMng_BinSearch(Le_dw_data,&CardNumCacheBkUp[Le_u_i],Le_w_Lng,&Le_u_pos))
00001a  466b              MOV      r3,sp
00001c  8848              LDRH     r0,[r1,#2]            ;282
00001e  0882              LSRS     r2,r0,#2              ;282
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       BListMng_BinSearch
000026  2801              CMP      r0,#1
000028  d004              BEQ      |L3.52|
                  |L3.42|
00002a  1c64              ADDS     r4,r4,#1
00002c  b2e4              UXTB     r4,r4                 ;278
00002e  2c0a              CMP      r4,#0xa               ;278
000030  d3ea              BCC      |L3.8|
;;;284    			{//当前卡号已存在
;;;285    				return 1U;
;;;286    			}
;;;287    		}
;;;288    	}
;;;289    	
;;;290    	return 0U;
000032  2000              MOVS     r0,#0
                  |L3.52|
;;;291    }
000034  bdf8              POP      {r3-r7,pc}
;;;292    
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      CardNumCacheBkUp

                          AREA ||i.ClrBListMng_ListData||, CODE, READONLY, ALIGN=2

                  ClrBListMng_ListData PROC
;;;410    ******************************************************/
;;;411    void ClrBListMng_ListData(void)
000000  2000              MOVS     r0,#0
;;;412    {
;;;413    	uint8 	Le_u_i;
;;;414    	for(Le_u_i = 0U;Le_u_i < BLISTMNG_BLIST_NUM;Le_u_i++)
;;;415    	{
;;;416    		CardNumCache[Le_u_i].validity = 0U;
000002  4a05              LDR      r2,|L4.24|
000004  4601              MOV      r1,r0                 ;414
                  |L4.6|
000006  23c9              MOVS     r3,#0xc9
000008  4343              MULS     r3,r0,r3
00000a  1c40              ADDS     r0,r0,#1
00000c  b2c0              UXTB     r0,r0                 ;414
00000e  f8021023          STRB     r1,[r2,r3,LSL #2]
000012  280a              CMP      r0,#0xa               ;414
000014  d3f7              BCC      |L4.6|
;;;417    	}
;;;418    }
000016  4770              BX       lr
                          ENDP

                  |L4.24|
                          DCD      CardNumCache

                          AREA ||i.TskBListMng_MainFunction||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  TskBListMng_MainFunction PROC
;;;96     ******************************************************/
;;;97     void TskBListMng_MainFunction(void)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;98     {
;;;99     	uint8   Le_u_CardNum[BLISTMNG_CARD_NO_LNG] = {0};
;;;100    	uint8 	Le_u_i;
;;;101    	uint16 	Le_w_j;
;;;102    	uint16 	Le_w_n;
;;;103    	uint16 	Le_w_num;
;;;104    	uint16 	Le_w_Lng = 0U;
;;;105    #ifdef BLISTMNG_SAVEPOWEROFF
;;;106    	if(1U !=GetBListMngCfg_EEIdle())
;;;107    	{
;;;108    		return;
;;;109    	}
;;;110    #endif
;;;111    	if(1U == GetBListCache_u_BListValidity())
000004  f7fffffe          BL       GetBListCache_u_BListValidity
;;;112    	{//检查黑名单卡号，黑名单卡号存到本地非易失性存储器
;;;113    #ifdef TIME_DEBUG
;;;114    		SeBListMng_dw_time[0]  = GetSysTick_Timer();
;;;115    #endif
;;;116    		for(Le_u_i = 0U;Le_u_i < BLISTMNG_BLIST_NUM;Le_u_i++)
;;;117    		{
;;;118    			if(1U == CardNumCache[Le_u_i].validity)
000008  f8dfa250          LDR      r10,|L5.604|
00000c  2801              CMP      r0,#1                 ;111
00000e  d17d              BNE      |L5.268|
000010  2500              MOVS     r5,#0                 ;116
;;;119    			{//当前数据块区数据有效
;;;120    				Le_w_Lng = CardNumCache[Le_u_i].lng;
;;;121    				if((Le_w_Lng%BLISTMNG_CARD_NO_LNG == 0) && (Le_w_Lng < (BLISTMNG_CARD_NO_LNG * BLISTMNG_CARD_NUM)))
000012  f44f7848          MOV      r8,#0x320
000016  4657              MOV      r7,r10                ;118
                  |L5.24|
000018  21c9              MOVS     r1,#0xc9              ;118
00001a  fb05f901          MUL      r9,r5,r1              ;118
00001e  46ba              MOV      r10,r7                ;118
000020  f8170029          LDRB     r0,[r7,r9,LSL #2]     ;118
000024  2801              CMP      r0,#1                 ;118
000026  d00c              BEQ      |L5.66|
;;;122    				{//当前数据块有多余存储空间，数据写入当前数据块
;;;123    					USART_PRINTF_D("非易失性存储器数据块区 %d 有多余存储空间，黑名单卡号可写入\n",Le_u_i);
;;;124    					Le_w_n = (Le_w_Lng/BLISTMNG_CARD_NO_LNG);//当前数据块存储的卡号数量
;;;125    					for(Le_w_j = 0U;Le_w_j < Le_w_n;Le_w_j++)
;;;126    					{
;;;127    						*((uint32*)(&CARD_Array[Le_w_j])) =  *((uint32*)(&CardNumCache[Le_u_i].CardNumArray[Le_w_j]));
;;;128    					}
;;;129    					Le_w_num = (((BLISTMNG_CARD_NO_LNG * BLISTMNG_CARD_NUM)-Le_w_Lng)/BLISTMNG_CARD_NO_LNG);//当前数据块剩余存储空间可存储卡的数量
;;;130    					USART_PRINTF_D("剩余存储空间可存储卡的数量 %d\n",Le_w_num);
;;;131    				}
;;;132    				else
;;;133    				{
;;;134    					USART_PRINTF_D("非易失性存储器数据块区 %d 无多余存储空间\n",Le_u_i);
;;;135    					continue;
;;;136    				}
;;;137    			}
;;;138    			else
;;;139    			{//当前数据块区数据无效
;;;140    				USART_PRINTF_D("非易失性存储器数据块区 %d 为空，黑名单卡号可写入\n",Le_u_i);
000028  4629              MOV      r1,r5
00002a  a08d              ADR      r0,|L5.608|
00002c  f7fffffe          BL       __2printf
;;;141    				Le_w_num = ((BLISTMNG_CARD_NO_LNG * BLISTMNG_CARD_NUM)/BLISTMNG_CARD_NO_LNG);//剩余存储空间可存储卡的数量
000030  20c8              MOVS     r0,#0xc8
000032  4683              MOV      r11,r0
;;;142    				USART_PRINTF_D("剩余存储空间可存储卡的数量 %d\n",Le_w_num);
000034  4601              MOV      r1,r0
000036  a097              ADR      r0,|L5.660|
000038  f7fffffe          BL       __2printf
;;;143    				Le_w_Lng = 0U;
00003c  2400              MOVS     r4,#0
                  |L5.62|
;;;144    			}
;;;145    #ifdef TIME_DEBUG
;;;146    			SeBListMng_dw_time[6]  = GetSysTick_Timer();
;;;147    #endif
;;;148    			for(Le_w_j = 0U;Le_w_j < Le_w_num;Le_w_j++)
00003e  2000              MOVS     r0,#0
000040  e060              B        |L5.260|
                  |L5.66|
000042  eb0a0689          ADD      r6,r10,r9,LSL #2      ;120
000046  8874              LDRH     r4,[r6,#2]            ;120
000048  07a0              LSLS     r0,r4,#30             ;121
00004a  d11f              BNE      |L5.140|
00004c  4544              CMP      r4,r8                 ;121
00004e  d21d              BCS      |L5.140|
000050  4629              MOV      r1,r5                 ;123
000052  a098              ADR      r0,|L5.692|
000054  f7fffffe          BL       __2printf
000058  08a2              LSRS     r2,r4,#2              ;124
00005a  2000              MOVS     r0,#0                 ;125
00005c  49a4              LDR      r1,|L5.752|
00005e  e006              B        |L5.110|
                  |L5.96|
000060  eb060380          ADD      r3,r6,r0,LSL #2       ;127
000064  685b              LDR      r3,[r3,#4]            ;127
000066  f8413020          STR      r3,[r1,r0,LSL #2]     ;127
00006a  1c40              ADDS     r0,r0,#1              ;127
00006c  b280              UXTH     r0,r0                 ;125
                  |L5.110|
00006e  4290              CMP      r0,r2                 ;125
000070  d3f6              BCC      |L5.96|
000072  f5c47048          RSB      r0,r4,#0x320          ;129
000076  17c1              ASRS     r1,r0,#31             ;129
000078  eb007091          ADD      r0,r0,r1,LSR #30      ;129
00007c  f3c0008f          UBFX     r0,r0,#2,#16          ;129
000080  4683              MOV      r11,r0                ;129
000082  4601              MOV      r1,r0                 ;130
000084  a083              ADR      r0,|L5.660|
000086  f7fffffe          BL       __2printf
00008a  e7d8              B        |L5.62|
                  |L5.140|
00008c  4629              MOV      r1,r5                 ;134
00008e  a099              ADR      r0,|L5.756|
000090  f7fffffe          BL       __2printf
000094  1c6d              ADDS     r5,r5,#1              ;134
000096  b2ed              UXTB     r5,r5                 ;116
000098  2d0a              CMP      r5,#0xa               ;116
00009a  d3bd              BCC      |L5.24|
00009c  e092              B        |L5.452|
                  |L5.158|
;;;149    			{
;;;150    				if(1U == GetBListCache_u_BListValidity())//黑名单缓存区有卡号数据
00009e  f7fffffe          BL       GetBListCache_u_BListValidity
0000a2  2801              CMP      r0,#1
0000a4  d131              BNE      |L5.266|
;;;151    				{
;;;152    					*((uint32*)(&Le_u_CardNum[0U])) = GetBListCache_dw_BlistData();//读取黑名单缓存区卡号数据
0000a6  f7fffffe          BL       GetBListCache_dw_BlistData
0000aa  4606              MOV      r6,r0
0000ac  2700              MOVS     r7,#0
                  |L5.174|
0000ae  21c9              MOVS     r1,#0xc9
0000b0  fb07f001          MUL      r0,r7,r1
0000b4  f81a2020          LDRB     r2,[r10,r0,LSL #2]
0000b8  2a01              CMP      r2,#1
0000ba  d109              BNE      |L5.208|
0000bc  eb0a0180          ADD      r1,r10,r0,LSL #2
0000c0  466b              MOV      r3,sp
0000c2  8848              LDRH     r0,[r1,#2]
0000c4  0882              LSRS     r2,r0,#2
0000c6  4630              MOV      r0,r6
0000c8  f7fffffe          BL       BListMng_BinSearch
0000cc  2801              CMP      r0,#1
0000ce  d023              BEQ      |L5.280|
                  |L5.208|
0000d0  1c7f              ADDS     r7,r7,#1
0000d2  b2ff              UXTB     r7,r7
0000d4  2f0a              CMP      r7,#0xa
0000d6  d3ea              BCC      |L5.174|
0000d8  0e30              LSRS     r0,r6,#24
;;;153    					if(0U == BListMng_CntrstBList(*((uint32*)(&Le_u_CardNum[0U]))))//非易失性存储区未匹配到该卡号
;;;154    					{
;;;155    						USART_PRINTF_CARD_NUM("卡号：%x%x%x%x 加入黑名单\n",Le_u_CardNum[0],Le_u_CardNum[1],	\
0000da  9000              STR      r0,[sp,#0]
0000dc  f3c64307          UBFX     r3,r6,#16,#8
0000e0  f3c62207          UBFX     r2,r6,#8,#8
0000e4  b2f1              UXTB     r1,r6
0000e6  a08e              ADR      r0,|L5.800|
0000e8  f7fffffe          BL       __2printf
;;;156    											  Le_u_CardNum[2],Le_u_CardNum[3]);
;;;157    						*((uint32*)(&(CARD_Array[(Le_w_Lng/BLISTMNG_CARD_NO_LNG)].CardNum[0U]))) = 	\
0000ec  4880              LDR      r0,|L5.752|
0000ee  f0240103          BIC      r1,r4,#3
0000f2  1d24              ADDS     r4,r4,#4
0000f4  5046              STR      r6,[r0,r1]
;;;158    							*((uint32*)(&Le_u_CardNum[0U]));
;;;159    						Le_w_Lng = Le_w_Lng + BLISTMNG_CARD_NO_LNG;
;;;160    						Se_u_WrFlag = 1U;
0000f6  4991              LDR      r1,|L5.828|
0000f8  2001              MOVS     r0,#1
0000fa  b2a4              UXTH     r4,r4                 ;159
0000fc  7008              STRB     r0,[r1,#0]
                  |L5.254|
0000fe  f1080001          ADD      r0,r8,#1              ;148
000102  b280              UXTH     r0,r0                 ;148
                  |L5.260|
000104  4680              MOV      r8,r0                 ;148
000106  4558              CMP      r0,r11                ;148
000108  d3c9              BCC      |L5.158|
                  |L5.266|
;;;161    					}
;;;162    					else
;;;163    					{
;;;164    						USART_PRINTF_CARD_NUM("卡号%x%x%x%x已存在\n",Le_u_CardNum[0],Le_u_CardNum[1],	\
;;;165    											  Le_u_CardNum[2],Le_u_CardNum[3]);
;;;166    					}
;;;167    				}
;;;168    				else
;;;169    				{//黑名单缓存区无卡号数据
;;;170    					break;
;;;171    				}
;;;172    			}
;;;173    #ifdef TIME_DEBUG
;;;174    			SeBListMng_dw_time[7]  = GetSysTick_Timer();
;;;175    #endif		
;;;176    			if(1U == Se_u_WrFlag)//黑名单列表有更新
00010a  e000              B        |L5.270|
                  |L5.268|
00010c  e05e              B        |L5.460|
                  |L5.270|
00010e  488b              LDR      r0,|L5.828|
000110  7801              LDRB     r1,[r0,#0]  ; Se_u_WrFlag
000112  2901              CMP      r1,#1
000114  d00b              BEQ      |L5.302|
000116  e055              B        |L5.452|
                  |L5.280|
000118  0e30              LSRS     r0,r6,#24
00011a  9000              STR      r0,[sp,#0]            ;164
00011c  f3c64307          UBFX     r3,r6,#16,#8          ;164
000120  f3c62207          UBFX     r2,r6,#8,#8           ;164
000124  b2f1              UXTB     r1,r6                 ;164
000126  a086              ADR      r0,|L5.832|
000128  f7fffffe          BL       __2printf
00012c  e7e7              B        |L5.254|
                  |L5.302|
;;;177    			{
;;;178    				Se_u_WrFlag = 0U;
00012e  2100              MOVS     r1,#0
000130  7001              STRB     r1,[r0,#0]
;;;179    				Se_u_UpdataFlag[Le_u_i] = 1U;
000132  4888              LDR      r0,|L5.852|
000134  2101              MOVS     r1,#1
;;;180    				Le_w_num = (Le_w_Lng/BLISTMNG_CARD_NO_LNG);
000136  ea4f0894          LSR      r8,r4,#2
00013a  5541              STRB     r1,[r0,r5]            ;179
00013c  46c3              MOV      r11,r8
;;;181    #ifdef TIME_DEBUG
;;;182    				SeBListMng_dw_time[2]  = GetSysTick_Timer();
;;;183    #endif
;;;184    				BListMng_BubbleSort(CARD_Array,Le_w_num);//排序
00013e  496c              LDR      r1,|L5.752|
000140  2200              MOVS     r2,#0
000142  f1a80e01          SUB      lr,r8,#1
000146  e015              B        |L5.372|
                  |L5.328|
000148  eba80c02          SUB      r12,r8,r2
00014c  2000              MOVS     r0,#0
00014e  f1ac0c01          SUB      r12,r12,#1
000152  e00b              B        |L5.364|
                  |L5.340|
000154  eb010780          ADD      r7,r1,r0,LSL #2
000158  f8516020          LDR      r6,[r1,r0,LSL #2]
00015c  687b              LDR      r3,[r7,#4]
00015e  429e              CMP      r6,r3
000160  d902              BLS      |L5.360|
000162  f8413020          STR      r3,[r1,r0,LSL #2]
000166  607e              STR      r6,[r7,#4]
                  |L5.360|
000168  1c40              ADDS     r0,r0,#1
00016a  b280              UXTH     r0,r0
                  |L5.364|
00016c  4584              CMP      r12,r0
00016e  dcf1              BGT      |L5.340|
000170  1c52              ADDS     r2,r2,#1
000172  b292              UXTH     r2,r2
                  |L5.372|
000174  4572              CMP      r2,lr
000176  dbe7              BLT      |L5.328|
;;;185    #ifdef TIME_DEBUG
;;;186    				SeBListMng_dw_time[3]  = GetSysTick_Timer();
;;;187    #endif
;;;188    				USART_PRINTF_D("写入到非易失性存储器数据块区为 %d\n",Le_u_i);
000178  4629              MOV      r1,r5
00017a  a077              ADR      r0,|L5.856|
00017c  f7fffffe          BL       __2printf
;;;189    				USART_PRINTF_S("写入到非易失性存储器的卡号如下:");
000180  a17e              ADR      r1,|L5.892|
000182  a086              ADR      r0,|L5.924|
000184  f7fffffe          BL       __2printf
;;;190    #ifdef TIME_DEBUG
;;;191    				SeBListMng_dw_time[4]  = GetSysTick_Timer();
;;;192    #endif
;;;193    				for(Le_w_j = 0U;Le_w_j < Le_w_num;Le_w_j++)
000188  2600              MOVS     r6,#0
00018a  eb0a0789          ADD      r7,r10,r9,LSL #2      ;118
00018e  f8df8160          LDR      r8,|L5.752|
000192  e011              B        |L5.440|
                  |L5.404|
;;;194    				{//复制到ram区
;;;195    					*((uint32*)(&CardNumCache[Le_u_i].CardNumArray[Le_w_j])) =  \
000194  eb070286          ADD      r2,r7,r6,LSL #2
000198  f8580026          LDR      r0,[r8,r6,LSL #2]
;;;196    						*((uint32*)(&CARD_Array[Le_w_j]));
;;;197    					USART_PRINTF_CARD_NUM("%x%x%x%x\n",CARD_Array[Le_w_j].CardNum[0U],CARD_Array[Le_w_j].CardNum[1U] \
00019c  6050              STR      r0,[r2,#4]
00019e  eb080086          ADD      r0,r8,r6,LSL #2
0001a2  78c2              LDRB     r2,[r0,#3]
0001a4  9200              STR      r2,[sp,#0]
0001a6  7883              LDRB     r3,[r0,#2]
0001a8  7842              LDRB     r2,[r0,#1]
0001aa  f8181026          LDRB     r1,[r8,r6,LSL #2]
0001ae  a07c              ADR      r0,|L5.928|
0001b0  f7fffffe          BL       __2printf
0001b4  1c76              ADDS     r6,r6,#1
0001b6  b2b6              UXTH     r6,r6                 ;193
                  |L5.440|
0001b8  455e              CMP      r6,r11                ;193
0001ba  d3eb              BCC      |L5.404|
;;;198    									 ,CARD_Array[Le_w_j].CardNum[2U],CARD_Array[Le_w_j].CardNum[3U]);
;;;199    				}
;;;200    #ifdef TIME_DEBUG
;;;201    				SeBListMng_dw_time[5]  = GetSysTick_Timer();
;;;202    #endif
;;;203    				CardNumCache[Le_u_i].lng = Le_w_Lng;
0001bc  807c              STRH     r4,[r7,#2]
;;;204    				CardNumCache[Le_u_i].validity = 1U;	
0001be  2101              MOVS     r1,#1
0001c0  f80a1029          STRB     r1,[r10,r9,LSL #2]
                  |L5.452|
;;;205    #ifdef BLISTMNG_SAVEPOWEROFF
;;;206    				BListMngCfg_WrEE(CeBListMng_u_BlockIndex[Le_u_i],&CARD_Array[0U].CardNum[0U],Le_w_Lng);//黑名单卡号数据写入非易失性存储器
;;;207    #endif			
;;;208    			}
;;;209    #ifdef TIME_DEBUG
;;;210    			SeBListMng_dw_time[1]  = GetSysTick_Timer();
;;;211    			printf("卡号比对前，当前时间：%d\n",SeBListMng_dw_time[6]);
;;;212    			printf("卡号比对后，当前时间：%d\n",SeBListMng_dw_time[7]);
;;;213    			printf("排序前，当前时间：%d\n",SeBListMng_dw_time[2]);
;;;214    			printf("排序后，当前时间：%d\n",SeBListMng_dw_time[3]);
;;;215    			printf("复制ram前，当前时间：%d\n",SeBListMng_dw_time[4]);
;;;216    			printf("复制ram后，当前时间：%d\n",SeBListMng_dw_time[5]);
;;;217    			printf("进入黑名单卡号处理，当前时间：%d\n",SeBListMng_dw_time[0]);
;;;218    			printf("退出黑名单卡号处理，当前时间：%d\n",SeBListMng_dw_time[1]);
;;;219    			printf("非易失性存储器数据块区 %d\n",Le_u_i);
;;;220    			printf("剩余存储空间可存储卡的数量 %d\n",(((BLISTMNG_CARD_NO_LNG * BLISTMNG_CARD_NUM)-Le_w_Lng)/BLISTMNG_CARD_NO_LNG));
;;;221    #endif
;;;222    			break;
;;;223    		}
;;;224    		
;;;225    		if(Le_u_i == BLISTMNG_BLIST_NUM)
0001c4  2d0a              CMP      r5,#0xa
0001c6  d101              BNE      |L5.460|
;;;226    		{
;;;227    #ifdef TIME_DEBUG
;;;228    			//黑名单存储空间不足,黑名单卡号未录入黑名单
;;;229    			printf("黑名单存储空间不足");
;;;230    #endif
;;;231    			ClrBListCache_Queue();//清缓存队列数据
0001c8  f7fffffe          BL       ClrBListCache_Queue
                  |L5.460|
;;;232    		}
;;;233    	}
;;;234    	
;;;235    	
;;;236    	if(1U == tcp_client_BListUpdataSt())
0001cc  f7fffffe          BL       tcp_client_BListUpdataSt
0001d0  2801              CMP      r0,#1
0001d2  d140              BNE      |L5.598|
;;;237    	{//黑名单增量更新中
;;;238    		CardNumCacheBkUp[Se_u_Index].validity = CardNumCache[Se_u_Index].validity;
0001d4  4d59              LDR      r5,|L5.828|
0001d6  20c9              MOVS     r0,#0xc9
0001d8  7869              LDRB     r1,[r5,#1]  ; Se_u_Index
0001da  fb11f000          SMULBB   r0,r1,r0
0001de  4e73              LDR      r6,|L5.940|
;;;239    		if(1U == Se_u_UpdataFlag[Se_u_Index])
0001e0  4b5c              LDR      r3,|L5.852|
0001e2  f81a2020          LDRB     r2,[r10,r0,LSL #2]    ;238
0001e6  f8062020          STRB     r2,[r6,r0,LSL #2]     ;238
0001ea  5c5a              LDRB     r2,[r3,r1]
0001ec  4657              MOV      r7,r10                ;238
0001ee  2a01              CMP      r2,#1
0001f0  d129              BNE      |L5.582|
;;;240    		{//有更新
;;;241    			Se_u_UpdataFlag[Se_u_Index] = 0U;
0001f2  2200              MOVS     r2,#0
0001f4  545a              STRB     r2,[r3,r1]
;;;242    			CardNumCacheBkUp[Se_u_Index].lng = CardNumCache[Se_u_Index].lng;
0001f6  eb070180          ADD      r1,r7,r0,LSL #2
0001fa  eb060080          ADD      r0,r6,r0,LSL #2
0001fe  8849              LDRH     r1,[r1,#2]
000200  8041              STRH     r1,[r0,#2]
;;;243    			USART_PRINTF_S("复制到备份ram区卡号如下:");
000202  a16b              ADR      r1,|L5.944|
000204  a065              ADR      r0,|L5.924|
000206  f7fffffe          BL       __2printf
;;;244    			for(Le_w_j = 0U;Le_w_j < (CardNumCache[Se_u_Index].lng/BLISTMNG_CARD_NO_LNG);Le_w_j++)
00020a  2400              MOVS     r4,#0
00020c  e011              B        |L5.562|
                  |L5.526|
;;;245    			{//复制到备份ram区，用于黑名单比对
;;;246    				*((uint32*)(&CardNumCacheBkUp[Se_u_Index].CardNumArray[Le_w_j])) = \
00020e  eb010184          ADD      r1,r1,r4,LSL #2
000212  eb060080          ADD      r0,r6,r0,LSL #2
000216  eb000084          ADD      r0,r0,r4,LSL #2
00021a  6849              LDR      r1,[r1,#4]
;;;247    						*((uint32*)(&CardNumCache[Se_u_Index].CardNumArray[Le_w_j]));
;;;248    				USART_PRINTF_CARD_NUM("%x%x%x%x\n",CardNumCacheBkUp[Se_u_Index].CardNumArray[Le_w_j].CardNum[0U],CardNumCacheBkUp[Se_u_Index].CardNumArray[Le_w_j].CardNum[1U] \
00021c  6041              STR      r1,[r0,#4]
00021e  79c1              LDRB     r1,[r0,#7]
000220  9100              STR      r1,[sp,#0]
000222  7983              LDRB     r3,[r0,#6]
000224  7942              LDRB     r2,[r0,#5]
000226  7901              LDRB     r1,[r0,#4]
000228  a05d              ADR      r0,|L5.928|
00022a  f7fffffe          BL       __2printf
00022e  1c64              ADDS     r4,r4,#1
000230  b2a4              UXTH     r4,r4                 ;244
                  |L5.562|
000232  7868              LDRB     r0,[r5,#1]            ;244  ; Se_u_Index
000234  21c9              MOVS     r1,#0xc9              ;244
000236  fb10f001          SMULBB   r0,r0,r1              ;244
00023a  eb070180          ADD      r1,r7,r0,LSL #2       ;244
00023e  884a              LDRH     r2,[r1,#2]            ;244
000240  ebb40f92          CMP      r4,r2,LSR #2          ;244
000244  d3e3              BCC      |L5.526|
                  |L5.582|
;;;249    									  ,CardNumCacheBkUp[Se_u_Index].CardNumArray[Le_w_j].CardNum[2U],CardNumCacheBkUp[Se_u_Index].CardNumArray[Le_w_j].CardNum[3U]);
;;;250    			}
;;;251    		}
;;;252    		Se_u_Index++;
000246  7868              LDRB     r0,[r5,#1]  ; Se_u_Index
000248  1c40              ADDS     r0,r0,#1
00024a  b2c0              UXTB     r0,r0
00024c  7068              STRB     r0,[r5,#1]
;;;253    		if(BLISTMNG_BLIST_NUM == Se_u_Index)
00024e  280a              CMP      r0,#0xa
000250  d101              BNE      |L5.598|
;;;254    		{
;;;255    			Se_u_Index = 0U;
000252  2000              MOVS     r0,#0
000254  7068              STRB     r0,[r5,#1]
                  |L5.598|
;;;256    		}
;;;257    	}
;;;258    }
000256  e8bd8ff8          POP      {r3-r11,pc}
;;;259    
                          ENDP

00025a  0000              DCW      0x0000
                  |L5.604|
                          DCD      CardNumCache
                  |L5.608|
000260  b7c7d2d7          DCB      183,199,210,215,202,167,208,212,180,230,180,162,198,247,202
000264  caa7d0d4
000268  b4e6b4a2
00026c  c6f7ca  
00026f  fdbeddbf          DCB      253,190,221,191,233,199,248," %d ",206,170,191,213,163,172
000273  e9c7f820
000277  256420ce
00027b  aabfd5a3
00027f  ac      
000280  badac3fb          DCB      186,218,195,251,181,165,191,168,186,197,191,201,208,180,200
000284  b5a5bfa8
000288  bac5bfc9
00028c  d0b4c8  
00028f  eb0a00            DCB      235,"\n",0
000292  00                DCB      0
000293  00                DCB      0
                  |L5.660|
000294  caa3d3e0          DCB      202,163,211,224,180,230,180,162,191,213,188,228,191,201,180
000298  b4e6b4a2
00029c  bfd5bce4
0002a0  bfc9b4  
0002a3  e6b4a2bf          DCB      230,180,162,191,168,181,196,202,253,193,191," %d\n",0
0002a7  a8b5c4ca
0002ab  fdc1bf20
0002af  25640a00
0002b3  00                DCB      0
                  |L5.692|
0002b4  b7c7d2d7          DCB      183,199,210,215,202,167,208,212,180,230,180,162,198,247,202
0002b8  caa7d0d4
0002bc  b4e6b4a2
0002c0  c6f7ca  
0002c3  fdbeddbf          DCB      253,190,221,191,233,199,248," %d ",211,208,182,224,211,224
0002c7  e9c7f820
0002cb  256420d3
0002cf  d0b6e0d3
0002d3  e0      
0002d4  b4e6b4a2          DCB      180,230,180,162,191,213,188,228,163,172,186,218,195,251,181
0002d8  bfd5bce4
0002dc  a3acbada
0002e0  c3fbb5  
0002e3  a5bfa8ba          DCB      165,191,168,186,197,191,201,208,180,200,235,"\n",0
0002e7  c5bfc9d0
0002eb  b4c8eb0a
0002ef  00      
                  |L5.752|
                          DCD      CARD_Array
                  |L5.756|
0002f4  b7c7d2d7          DCB      183,199,210,215,202,167,208,212,180,230,180,162,198,247,202
0002f8  caa7d0d4
0002fc  b4e6b4a2
000300  c6f7ca  
000303  fdbeddbf          DCB      253,190,221,191,233,199,248," %d ",206,222,182,224,211,224
000307  e9c7f820
00030b  256420ce
00030f  deb6e0d3
000313  e0      
000314  b4e6b4a2          DCB      180,230,180,162,191,213,188,228,"\n",0
000318  bfd5bce4
00031c  0a00    
00031e  00                DCB      0
00031f  00                DCB      0
                  |L5.800|
000320  bfa8bac5          DCB      191,168,186,197,163,186,"%x%x%x%x ",188,211,200,235,186,218
000324  a3ba2578
000328  25782578
00032c  257820bc
000330  d3c8ebba
000334  da      
000335  c3fbb5a5          DCB      195,251,181,165,"\n",0
000339  0a00    
00033b  00                DCB      0
                  |L5.828|
                          DCD      ||.data||
                  |L5.832|
000340  bfa8bac5          DCB      191,168,186,197,"%x%x%x%x",210,209,180,230,212,218,"\n",0
000344  25782578
000348  25782578
00034c  d2d1b4e6
000350  d4da0a00
                  |L5.852|
                          DCD      ||.bss||
                  |L5.856|
000358  d0b4c8eb          DCB      208,180,200,235,181,189,183,199,210,215,202,167,208,212,180
00035c  b5bdb7c7
000360  d2d7caa7
000364  d0d4b4  
000367  e6b4a2c6          DCB      230,180,162,198,247,202,253,190,221,191,233,199,248,206,170
00036b  f7cafdbe
00036f  ddbfe9c7
000373  f8ceaa  
000376  2025640a          DCB      " %d\n",0
00037a  00      
00037b  00                DCB      0
                  |L5.892|
00037c  d0b4c8eb          DCB      208,180,200,235,181,189,183,199,210,215,202,167,208,212,180
000380  b5bdb7c7
000384  d2d7caa7
000388  d0d4b4  
00038b  e6b4a2c6          DCB      230,180,162,198,247,181,196,191,168,186,197,200,231,207,194
00038f  f7b5c4bf
000393  a8bac5c8
000397  e7cfc2  
00039a  3a00              DCB      ":",0
                  |L5.924|
00039c  25730a00          DCB      "%s\n",0
                  |L5.928|
0003a0  25782578          DCB      "%x%x%x%x\n",0
0003a4  25782578
0003a8  0a00    
0003aa  00                DCB      0
0003ab  00                DCB      0
                  |L5.940|
                          DCD      CardNumCacheBkUp
                  |L5.944|
0003b0  b8b4d6c6          DCB      184,180,214,198,181,189,177,184,183,221,"ram",199,248,191
0003b4  b5bdb1b8
0003b8  b7dd7261
0003bc  6dc7f8bf
0003c0  a8bac5c8          DCB      168,186,197,200,231,207,194,":",0
0003c4  e7cfc23a
0003c8  00      
0003c9  00                DCB      0
0003ca  00                DCB      0
0003cb  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Se_u_UpdataFlag
                          %        10

                          AREA ||.data||, DATA, ALIGN=0

                  Se_u_WrFlag
000000  00                DCB      0x00
                  Se_u_Index
000001  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\APP\\BlackListMng\\BListMng.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_BListMng_c_fdc58fc6____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_BListMng_c_fdc58fc6____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_BListMng_c_fdc58fc6____REVSH|
#line 153
|__asm___10_BListMng_c_fdc58fc6____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_BListMng_c_fdc58fc6____RRX|
#line 328
|__asm___10_BListMng_c_fdc58fc6____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
