; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\readcard.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\readcard.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\readcard.crf ..\..\APP\readcard\readcard.c]
                          THUMB

                          AREA ||i.Setreadcard_AutoSearchCard||, CODE, READONLY, ALIGN=2

                  Setreadcard_AutoSearchCard PROC
;;;125    */
;;;126    void Setreadcard_AutoSearchCard(void)
000000  b510              PUSH     {r4,lr}
;;;127    {
;;;128    	// 先计算正确的校验值
;;;129    	u8 Le_u_lng;
;;;130    	Le_u_lng = sizeof(Set_Card_ALL);
000002  2407              MOVS     r4,#7
;;;131    	calcCommandsBBC(Set_Card_ALL,Le_u_lng);
000004  4621              MOV      r1,r4
000006  4804              LDR      r0,|L1.24|
000008  f7fffffe          BL       calcCommandsBBC
;;;132    	SetUartCmn_TxMsg(Set_Card_ALL,Le_u_lng);
00000c  4621              MOV      r1,r4
00000e  e8bd4010          POP      {r4,lr}
000012  4801              LDR      r0,|L1.24|
000014  f7ffbffe          B.W      SetUartCmn_TxMsg
;;;133    }
;;;134    /*
                          ENDP

                  |L1.24|
                          DCD      ||.data||+0x9

                          AREA ||i.Setreadcard_Key||, CODE, READONLY, ALIGN=2

                  Setreadcard_Key PROC
;;;136    */
;;;137    void Setreadcard_Key(void)
000000  b510              PUSH     {r4,lr}
;;;138    {
;;;139    	SetUartCmn_TxMsg(Sereadcard_u_KeyA,12);
000002  210c              MOVS     r1,#0xc
000004  4803              LDR      r0,|L2.20|
000006  f7fffffe          BL       SetUartCmn_TxMsg
;;;140    	Sereadcard_SetKeyflag = 1U;
00000a  4902              LDR      r1,|L2.20|
00000c  2001              MOVS     r0,#1
00000e  3917              SUBS     r1,r1,#0x17
000010  7008              STRB     r0,[r1,#0]
;;;141    }
000012  bd10              POP      {r4,pc}
;;;142    
                          ENDP

                  |L2.20|
                          DCD      ||.data||+0x17

                          AREA ||i.calcCommandsBBC||, CODE, READONLY, ALIGN=1

                  calcCommandsBBC PROC
;;;147    */
;;;148    static void calcCommandsBBC(uint8_t *command,uint8_t length) 
000000  b530              PUSH     {r4,r5,lr}
;;;149    {
;;;150    	u8 i;
;;;151    	uint8_t c = command[1];
;;;152    	for (i = 2; i < length - 2; i++) 
000002  2202              MOVS     r2,#2
000004  7843              LDRB     r3,[r0,#1]            ;151
000006  1e8d              SUBS     r5,r1,#2
000008  e003              B        |L3.18|
                  |L3.10|
;;;153    	{
;;;154    		c ^= command[i];
00000a  5c84              LDRB     r4,[r0,r2]
00000c  4063              EORS     r3,r3,r4
00000e  1c52              ADDS     r2,r2,#1
000010  b2d2              UXTB     r2,r2                 ;152
                  |L3.18|
000012  42aa              CMP      r2,r5                 ;152
000014  dbf9              BLT      |L3.10|
;;;155    	}
;;;156    
;;;157    	command[length - 2] = (uint8_t) ~c;
000016  4408              ADD      r0,r0,r1
000018  43da              MVNS     r2,r3
00001a  f8002c02          STRB     r2,[r0,#-2]
;;;158    }
00001e  bd30              POP      {r4,r5,pc}
;;;159    
                          ENDP


                          AREA ||i.decodeReadBlock||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  decodeReadBlock PROC
;;;216    */
;;;217    static void decodeReadBlock(RebackInfo rebackInfo) 
000000  b40f              PUSH     {r0-r3}
;;;218    {
000002  e92d5ff0          PUSH     {r4-r12,lr}
;;;219    	u8 Le_u_i;
;;;220    	u8 Le_u_matchFlg = 0U;
;;;221    	switch (rebackInfo.Dt.DtSrt.Seqnr) 
;;;222    	{
;;;223    		 case Block_0x14://读取小区id
;;;224    		 {
;;;225    			if (rebackInfo.Dt.DtSrt.St != OK) 
;;;226    			{
;;;227    				if(rebackInfo.Dt.DtSrt.St == 0x09)//读卡器密码验证失败
;;;228    				{
;;;229    					Sereadcard_SetKeyflag = 0U;
;;;230    					USART_PRINTF_S("扇区5 key密码验证失败  X\n");
;;;231    				}
;;;232    				// 如果数据块0x14读取数据失败
;;;233    				isSectedCard_flag = 1;
;;;234    				USART_PRINTF_S("读扇区5块0x14失败  X\n");
;;;235    				SetAudioIO_PlayFile(AudioIO_CardInvalid);
;;;236    			} 
;;;237    			else 
;;;238    			{	
;;;239    				USART_PRINTF_S("读扇区5块0x14成功  √\n");
;;;240    				if(1U == ReadCard_CardSetSt())
;;;241    				{//卡片设置模式
;;;242    					//("小区id:");
;;;243    					for(Le_u_i = 0;Le_u_i < rebackInfo.Dt.DtSrt.DtLng;Le_u_i++)
;;;244    					{			
;;;245    						sminfo.community_id[Le_u_i] = rebackInfo.Dt.DtSrt.ValidDt[Le_u_i];
;;;246    					}
;;;247    					readBlock(Read_Block, (uint8_t) 0x15,sizeof(Read_Block));
;;;248    				}
;;;249    				else
;;;250    				{//非卡片设置模式，比对小区id
;;;251    					for(Le_u_i = 0;Le_u_i < rebackInfo.Dt.DtSrt.DtLng;Le_u_i++)
;;;252    					{	
;;;253    						if(sminfo1.community_id[Le_u_i] != rebackInfo.Dt.DtSrt.ValidDt[Le_u_i])
000006  f8dfa294          LDR      r10,|L4.668|
00000a  f89d1028          LDRB     r1,[sp,#0x28]         ;221
00000e  f04f0900          MOV      r9,#0                 ;220
000012  2501              MOVS     r5,#1                 ;233
000014  f89d0029          LDRB     r0,[sp,#0x29]         ;225
000018  4ca1              LDR      r4,|L4.672|
00001a  f89d702a          LDRB     r7,[sp,#0x2a]         ;243
00001e  3914              SUBS     r1,r1,#0x14           ;243
000020  464a              MOV      r2,r9                 ;221
;;;254    						{
;;;255    							break;
;;;256    						}
;;;257    					}
;;;258    					if(Le_u_i == rebackInfo.Dt.DtSrt.DtLng)
;;;259    					{//小区id匹配
;;;260    						if(1U == ReadCard_DEVICE_TYPE)
;;;261    						{//围墙机，小区id匹配就可以开门
;;;262    							open_door = 1;
;;;263    							USART_PRINTF_S("围墙机，小区id匹配 -> 开门\n");
;;;264    						}
;;;265    						else if(2U == ReadCard_DEVICE_TYPE)
;;;266    						{//门口机，继续匹配楼栋编号
;;;267    							readBlock(Read_Block, (uint8_t)0x15,sizeof(Read_Block));
;;;268    						}
;;;269    						else
;;;270    						{
;;;271    							USART_PRINTF_D("设备类型错误,类型码 %d\n",ReadCard_DEVICE_TYPE);
;;;272    						}
;;;273    					}
;;;274    					else
;;;275    					{//小区id不匹配
;;;276    						isSectedCard_flag = 1U;
;;;277    						USART_PRINTF_S("读扇区5块0x14小区id不匹配  X\n");
;;;278    						SetAudioIO_PlayFile(AudioIO_CardInvalid);
;;;279    					}
;;;280    				}
;;;281    			}
;;;282    		 }
;;;283    		break;
;;;284    		case Block_0x15://读取楼栋编号1
;;;285    			if (rebackInfo.Dt.DtSrt.St != OK) 
;;;286    			{
;;;287    				isSectedCard_flag = 1;
;;;288    				SetAudioIO_PlayFile(AudioIO_CardInvalid);
;;;289    				USART_PRINTF_S("读扇区5块0x15失败  X\n");
;;;290    			} 
;;;291    			else
;;;292    			{	
;;;293    				USART_PRINTF_S("读扇区5块0x15成功   √\n");
;;;294    				if(1U == GetZR60Ctrl_u_CardSetSt())
;;;295    				{//卡片设置模式
;;;296    					//("楼栋编号1:");
;;;297    					for(Le_u_i = 0;Le_u_i < rebackInfo.Dt.DtSrt.DtLng;Le_u_i++)
;;;298    					{
;;;299    						sminfo.build_numOne[Le_u_i]= rebackInfo.Dt.DtSrt.ValidDt[Le_u_i];
;;;300    					}		
;;;301    
;;;302    					readBlock(Read_Block, (uint8_t)0x16,sizeof(Read_Block));
;;;303    				}
;;;304    				else
;;;305    				{//非卡片设置模式，比对楼栋编号
;;;306    					if((*((uint64_t*)(&rebackInfo.Dt.DtSrt.ValidDt[0U])) == 0xAAAAAAAAAAAAAAAA) && (*((uint64_t*)(&rebackInfo.Dt.DtSrt.ValidDt[8U])) == 0xAAAAAAAAAAAAAAAA))
;;;307    					{//工作人员卡
;;;308    						open_door = 1;
;;;309    						USART_PRINTF_S("工作人员卡\n");
;;;310    					}
;;;311    					else
;;;312    					{
;;;313    						for(Le_u_i = 0U;Le_u_i < (rebackInfo.Dt.DtSrt.DtLng/2);Le_u_i++)
;;;314    						{//每个楼栋编号2字节，一个块可以装8个楼栋编号
;;;315    							if(0xFFFF != *((uint16*)(&rebackInfo.Dt.DtSrt.ValidDt[2*Le_u_i])))
000022  f64f7bff          MOV      r11,#0xffff
000026  ae0a              ADD      r6,sp,#0x28           ;221
000028  f1aa0851          SUB      r8,r10,#0x51          ;245
00002c  2907              CMP      r1,#7                 ;221
00002e  d276              BCS      |L4.286|
000030  e8dff001          TBB      [pc,r1]               ;221
000034  044ba275          DCB      0x04,0x4b,0xa2,0x75
000038  e2f1f000          DCB      0xe2,0xf1,0xf0,0x00
00003c  b148              CBZ      r0,|L4.82|
00003e  2809              CMP      r0,#9                 ;227
000040  d104              BNE      |L4.76|
000042  7022              STRB     r2,[r4,#0]            ;229
000044  a197              ADR      r1,|L4.676|
000046  a09e              ADR      r0,|L4.704|
000048  f7fffffe          BL       __2printf
                  |L4.76|
00004c  70a5              STRB     r5,[r4,#2]            ;233
00004e  a19d              ADR      r1,|L4.708|
000050  e031              B        |L4.182|
                  |L4.82|
000052  a1a2              ADR      r1,|L4.732|
000054  a09a              ADR      r0,|L4.704|
000056  f7fffffe          BL       __2printf
00005a  f7fffffe          BL       GetZR60Ctrl_u_CardSetSt
00005e  2801              CMP      r0,#1                 ;240
000060  f04f0000          MOV      r0,#0                 ;251
000064  d001              BEQ      |L4.106|
000066  4651              MOV      r1,r10                ;253
000068  e012              B        |L4.144|
                  |L4.106|
00006a  4641              MOV      r1,r8                 ;245
00006c  e004              B        |L4.120|
                  |L4.110|
00006e  1832              ADDS     r2,r6,r0              ;245
000070  78d2              LDRB     r2,[r2,#3]            ;245
000072  540a              STRB     r2,[r1,r0]            ;245
000074  1c40              ADDS     r0,r0,#1              ;245
000076  b2c0              UXTB     r0,r0                 ;243
                  |L4.120|
000078  4287              CMP      r7,r0                 ;243
00007a  d8f8              BHI      |L4.110|
                  |L4.124|
00007c  2207              MOVS     r2,#7                 ;247
00007e  2115              MOVS     r1,#0x15              ;247
000080  e0ee              B        |L4.608|
                  |L4.130|
000082  1833              ADDS     r3,r6,r0              ;253
000084  5c0a              LDRB     r2,[r1,r0]            ;253
000086  78db              LDRB     r3,[r3,#3]            ;253
000088  429a              CMP      r2,r3                 ;253
00008a  d103              BNE      |L4.148|
00008c  1c40              ADDS     r0,r0,#1              ;253
00008e  b2c0              UXTB     r0,r0                 ;251
                  |L4.144|
000090  4287              CMP      r7,r0                 ;251
000092  d8f6              BHI      |L4.130|
                  |L4.148|
000094  4287              CMP      r7,r0                 ;258
000096  d10c              BNE      |L4.178|
000098  4896              LDR      r0,|L4.756|
00009a  7801              LDRB     r1,[r0,#0]            ;260  ; machine_type
00009c  2901              CMP      r1,#1                 ;260
00009e  d005              BEQ      |L4.172|
0000a0  7801              LDRB     r1,[r0,#0]            ;265  ; machine_type
0000a2  2902              CMP      r1,#2                 ;265
0000a4  d0ea              BEQ      |L4.124|
0000a6  7801              LDRB     r1,[r0,#0]            ;271  ; machine_type
0000a8  a093              ADR      r0,|L4.760|
0000aa  e0e8              B        |L4.638|
                  |L4.172|
0000ac  70e5              STRB     r5,[r4,#3]            ;262
0000ae  a198              ADR      r1,|L4.784|
0000b0  e0e4              B        |L4.636|
                  |L4.178|
0000b2  70a5              STRB     r5,[r4,#2]            ;276
0000b4  a19d              ADR      r1,|L4.812|
                  |L4.182|
0000b6  a082              ADR      r0,|L4.704|
0000b8  f7fffffe          BL       __2printf
0000bc  e8bd1ff0          POP      {r4-r12}              ;278
0000c0  2007              MOVS     r0,#7                 ;278
0000c2  f85deb14          LDR      lr,[sp],#0x14         ;278
0000c6  f7ffbffe          B.W      SetAudioIO_PlayFile
0000ca  b128              CBZ      r0,|L4.216|
0000cc  70a5              STRB     r5,[r4,#2]            ;287
0000ce  2007              MOVS     r0,#7                 ;288
0000d0  f7fffffe          BL       SetAudioIO_PlayFile
0000d4  a19d              ADR      r1,|L4.844|
0000d6  e0d1              B        |L4.636|
                  |L4.216|
0000d8  a1a2              ADR      r1,|L4.868|
0000da  a079              ADR      r0,|L4.704|
0000dc  f7fffffe          BL       __2printf
0000e0  f7fffffe          BL       GetZR60Ctrl_u_CardSetSt
0000e4  2801              CMP      r0,#1                 ;294
0000e6  d00a              BEQ      |L4.254|
0000e8  f8dd002b          LDR      r0,[sp,#0x2b]         ;306
0000ec  f8dd102f          LDR      r1,[sp,#0x2f]         ;306
0000f0  f08030aa          EOR      r0,r0,#0xaaaaaaaa     ;306
0000f4  f08131aa          EOR      r1,r1,#0xaaaaaaaa     ;306
0000f8  4308              ORRS     r0,r0,r1              ;306
0000fa  d011              BEQ      |L4.288|
0000fc  e01a              B        |L4.308|
                  |L4.254|
0000fe  2000              MOVS     r0,#0                 ;297
000100  4641              MOV      r1,r8                 ;245
000102  f89d202a          LDRB     r2,[sp,#0x2a]         ;243
000106  e005              B        |L4.276|
                  |L4.264|
000108  1833              ADDS     r3,r6,r0              ;299
00010a  180c              ADDS     r4,r1,r0              ;299
00010c  78db              LDRB     r3,[r3,#3]            ;299
00010e  1c40              ADDS     r0,r0,#1              ;299
000110  7423              STRB     r3,[r4,#0x10]         ;299
000112  b2c0              UXTB     r0,r0                 ;297
                  |L4.276|
000114  4282              CMP      r2,r0                 ;297
000116  d8f7              BHI      |L4.264|
                  |L4.280|
000118  2207              MOVS     r2,#7                 ;302
00011a  2116              MOVS     r1,#0x16              ;302
00011c  e0a0              B        |L4.608|
                  |L4.286|
00011e  e0b9              B        |L4.660|
                  |L4.288|
000120  f8dd0033          LDR      r0,[sp,#0x33]         ;306
000124  f8dd1037          LDR      r1,[sp,#0x37]         ;306
000128  f08030aa          EOR      r0,r0,#0xaaaaaaaa     ;306
00012c  f08131aa          EOR      r1,r1,#0xaaaaaaaa     ;306
000130  4308              ORRS     r0,r0,r1              ;306
000132  d006              BEQ      |L4.322|
                  |L4.308|
000134  2000              MOVS     r0,#0                 ;313
;;;316    							{
;;;317    								if(*((uint16*)(&sminfo1.build_numOne[0U])) == *((uint16*)(&rebackInfo.Dt.DtSrt.ValidDt[2*Le_u_i])))
000136  f8ba2010          LDRH     r2,[r10,#0x10]
00013a  465f              MOV      r7,r11                ;315
00013c  f89d302a          LDRB     r3,[sp,#0x2a]         ;243
000140  e00c              B        |L4.348|
                  |L4.322|
000142  70e5              STRB     r5,[r4,#3]            ;308
000144  a18d              ADR      r1,|L4.892|
000146  e099              B        |L4.636|
                  |L4.328|
000148  eb060140          ADD      r1,r6,r0,LSL #1       ;315
00014c  f8b11003          LDRH     r1,[r1,#3]            ;315
000150  42b9              CMP      r1,r7                 ;315
000152  d001              BEQ      |L4.344|
000154  428a              CMP      r2,r1
000156  d007              BEQ      |L4.360|
                  |L4.344|
000158  1c40              ADDS     r0,r0,#1
00015a  b2c0              UXTB     r0,r0                 ;313
                  |L4.348|
00015c  ebb00f53          CMP      r0,r3,LSR #1          ;313
000160  d3f2              BCC      |L4.328|
;;;318    								{//比对楼栋编号
;;;319    									Le_u_matchFlg = 1U;
;;;320    									break;
;;;321    								}
;;;322    							}
;;;323    						}
;;;324    						
;;;325    						if(1U == Le_u_matchFlg)
000162  f1b90f00          CMP      r9,#0
000166  d002              BEQ      |L4.366|
                  |L4.360|
;;;326    						{//匹配到楼栋编号
;;;327    							open_door = 1;
000168  70e5              STRB     r5,[r4,#3]
;;;328    							USART_PRINTF_S("读扇区5块0x15匹配到楼栋编号 -> 开门\n");
00016a  a187              ADR      r1,|L4.904|
00016c  e086              B        |L4.636|
                  |L4.366|
;;;329    						}
;;;330    						else
;;;331    						{//未匹配到楼栋编号
;;;332    							USART_PRINTF_S("扇区5块0x15未匹配到楼栋编号,继续匹配扇区0x16楼栋编号\n");
00016e  a190              ADR      r1,|L4.944|
000170  a053              ADR      r0,|L4.704|
000172  f7fffffe          BL       __2printf
;;;333    							readBlock(Read_Block, (uint8_t)0x16,sizeof(Read_Block));
000176  e7cf              B        |L4.280|
;;;334    						}
;;;335    					}
;;;336    				}
;;;337    			}
;;;338    		break;
;;;339    		case Block_0x16://读取楼栋编号
;;;340    		{
;;;341    			if (rebackInfo.Dt.DtSrt.St != OK) 
000178  b128              CBZ      r0,|L4.390|
;;;342    			{
;;;343    				//("decodeReadBlock: Block_0x16 fail\n");
;;;344    				isSectedCard_flag = 1;
00017a  70a5              STRB     r5,[r4,#2]
;;;345    				SetAudioIO_PlayFile(AudioIO_CardInvalid);
00017c  2007              MOVS     r0,#7
00017e  f7fffffe          BL       SetAudioIO_PlayFile
;;;346    				USART_PRINTF_S("读扇区5块0x16失败  X\n");
000182  a199              ADR      r1,|L4.1000|
000184  e07a              B        |L4.636|
                  |L4.390|
;;;347    			} 
;;;348    			else
;;;349    			{
;;;350    				USART_PRINTF_S("读扇区5块0x16成功  √\n");
000186  a19e              ADR      r1,|L4.1024|
000188  a04d              ADR      r0,|L4.704|
00018a  f7fffffe          BL       __2printf
;;;351    				if(1U == GetZR60Ctrl_u_CardSetSt())
00018e  f7fffffe          BL       GetZR60Ctrl_u_CardSetSt
000192  2801              CMP      r0,#1
;;;352    				{//卡片设置模式
;;;353    					//("楼栋编号2:");
;;;354    					for(Le_u_i = 0;Le_u_i < rebackInfo.Dt.DtSrt.DtLng;Le_u_i++)
;;;355    					{
;;;356    						sminfo.build_numTwo[Le_u_i]= rebackInfo.Dt.DtSrt.ValidDt[Le_u_i];
;;;357    					}		
;;;358    					#ifdef ZR50
;;;359    					setcard = 1U;
;;;360    					#else
;;;361    					readBlock(Read_Block, (uint8_t)0x18,sizeof(Read_Block));//读取楼栋id
;;;362    					#endif
;;;363    				}
;;;364    				else
;;;365    				{
;;;366    					for(Le_u_i = 0U;Le_u_i < (rebackInfo.Dt.DtSrt.DtLng/2);Le_u_i++)
000194  f04f0000          MOV      r0,#0
000198  d005              BEQ      |L4.422|
00019a  465f              MOV      r7,r11                ;315
;;;367    					{//每个楼栋编号2字节，一个块可以装8个楼栋编号
;;;368    						if(0xFFFF != *((uint16*)(&rebackInfo.Dt.DtSrt.ValidDt[2*Le_u_i])))
;;;369    						{
;;;370    							if(*((uint16*)(&sminfo1.build_numTwo[0U])) == *((uint16*)(&rebackInfo.Dt.DtSrt.ValidDt[2*Le_u_i])))
00019c  f8ba2020          LDRH     r2,[r10,#0x20]
0001a0  f89d302a          LDRB     r3,[sp,#0x2a]         ;243
0001a4  e019              B        |L4.474|
                  |L4.422|
0001a6  4641              MOV      r1,r8                 ;245
0001a8  f89d202a          LDRB     r2,[sp,#0x2a]         ;243
0001ac  e006              B        |L4.444|
                  |L4.430|
0001ae  1833              ADDS     r3,r6,r0              ;356
0001b0  180c              ADDS     r4,r1,r0              ;356
0001b2  78db              LDRB     r3,[r3,#3]            ;356
0001b4  1c40              ADDS     r0,r0,#1              ;356
0001b6  f8843020          STRB     r3,[r4,#0x20]         ;356
0001ba  b2c0              UXTB     r0,r0                 ;354
                  |L4.444|
0001bc  4282              CMP      r2,r0                 ;354
0001be  d8f6              BHI      |L4.430|
0001c0  2207              MOVS     r2,#7                 ;361
0001c2  2118              MOVS     r1,#0x18              ;361
0001c4  e04c              B        |L4.608|
                  |L4.454|
0001c6  eb060140          ADD      r1,r6,r0,LSL #1       ;368
0001ca  f8b11003          LDRH     r1,[r1,#3]            ;368
0001ce  42b9              CMP      r1,r7                 ;368
0001d0  d001              BEQ      |L4.470|
0001d2  428a              CMP      r2,r1
0001d4  d007              BEQ      |L4.486|
                  |L4.470|
0001d6  1c40              ADDS     r0,r0,#1
0001d8  b2c0              UXTB     r0,r0                 ;366
                  |L4.474|
0001da  ebb00f53          CMP      r0,r3,LSR #1          ;366
0001de  d3f2              BCC      |L4.454|
;;;371    							{
;;;372    								Le_u_matchFlg = 1U;
;;;373    								break;
;;;374    							}
;;;375    						}
;;;376    					}
;;;377    
;;;378    					if(1U == Le_u_matchFlg)
0001e0  f1b90f00          CMP      r9,#0
0001e4  d002              BEQ      |L4.492|
                  |L4.486|
;;;379    					{//匹配到楼栋编号
;;;380    						open_door = 1;
0001e6  70e5              STRB     r5,[r4,#3]
;;;381    						USART_PRINTF_S("读扇区5块0x16匹配到楼栋编号 -> 开门\n");
0001e8  a18b              ADR      r1,|L4.1048|
0001ea  e047              B        |L4.636|
                  |L4.492|
;;;382    					}
;;;383    					else
;;;384    					{//未匹配到楼栋编号
;;;385    						isSectedCard_flag = 1U;
0001ec  70a5              STRB     r5,[r4,#2]
;;;386    						SetAudioIO_PlayFile(AudioIO_CardInvalid);
0001ee  2007              MOVS     r0,#7
0001f0  f7fffffe          BL       SetAudioIO_PlayFile
;;;387    						USART_PRINTF_S("读扇区5块0x16未匹配到楼栋编号\n");
0001f4  a192              ADR      r1,|L4.1088|
0001f6  e041              B        |L4.636|
;;;388    					}
;;;389    				}
;;;390    			}
;;;391    		}
;;;392    		break;
;;;393    		case Block_0x18://读取楼栋id（卡片设置模式下）
;;;394    		{
;;;395    			if (rebackInfo.Dt.DtSrt.St != OK) 
0001f8  b170              CBZ      r0,|L4.536|
;;;396    			{
;;;397    				if(rebackInfo.Dt.DtSrt.St == 0x09)//读卡器密码验证失败
0001fa  2809              CMP      r0,#9
0001fc  d104              BNE      |L4.520|
;;;398    				{
;;;399    					Sereadcard_SetKeyflag = 0U;
0001fe  7022              STRB     r2,[r4,#0]
;;;400    					USART_PRINTF_S("扇区6 key密码验证失败  X\n");
000200  a197              ADR      r1,|L4.1120|
000202  a02f              ADR      r0,|L4.704|
000204  f7fffffe          BL       __2printf
                  |L4.520|
;;;401    				}
;;;402    				isSectedCard_flag = 1;
000208  70a5              STRB     r5,[r4,#2]
;;;403    				SetAudioIO_PlayFile(AudioIO_CardInvalid);
00020a  2007              MOVS     r0,#7
00020c  f7fffffe          BL       SetAudioIO_PlayFile
;;;404    				USART_PRINTF_S("读扇区6块0x18失败  X\n");
000210  a19a              ADR      r1,|L4.1148|
000212  e033              B        |L4.636|
000214  e02c              B        |L4.624|
000216  e00e              B        |L4.566|
                  |L4.536|
;;;405    			} 
;;;406    			else
;;;407    			{
;;;408    				//("楼栋id:");
;;;409    				for(Le_u_i = 0;Le_u_i < rebackInfo.Dt.DtSrt.DtLng;Le_u_i++)
000218  2000              MOVS     r0,#0
00021a  4641              MOV      r1,r8                 ;245
00021c  e006              B        |L4.556|
                  |L4.542|
;;;410    				{
;;;411    					sminfo.build_id[Le_u_i]= rebackInfo.Dt.DtSrt.ValidDt[Le_u_i];
00021e  1832              ADDS     r2,r6,r0
000220  180b              ADDS     r3,r1,r0
000222  78d2              LDRB     r2,[r2,#3]
000224  1c40              ADDS     r0,r0,#1
000226  f8832030          STRB     r2,[r3,#0x30]
00022a  b2c0              UXTB     r0,r0                 ;409
                  |L4.556|
00022c  4287              CMP      r7,r0                 ;409
00022e  d8f6              BHI      |L4.542|
;;;412    				}		
;;;413    				readBlock(Read_Block, (uint8_t)0x19,sizeof(Read_Block));//读取楼栋门id
000230  2207              MOVS     r2,#7
000232  2119              MOVS     r1,#0x19
000234  e014              B        |L4.608|
                  |L4.566|
;;;414    			}
;;;415    		}
;;;416    		break;
;;;417    		case Block_0x19://读取门id（卡片设置模式下）
;;;418    		{
;;;419    			if (rebackInfo.Dt.DtSrt.St != OK) 
000236  b128              CBZ      r0,|L4.580|
;;;420    			{
;;;421    				//("decodeReadBlock: Block_0x19 fail\n");
;;;422    				isSectedCard_flag = 1;
000238  70a5              STRB     r5,[r4,#2]
;;;423    				SetAudioIO_PlayFile(AudioIO_CardInvalid);
00023a  2007              MOVS     r0,#7
00023c  f7fffffe          BL       SetAudioIO_PlayFile
;;;424    				USART_PRINTF_S("读扇区6块0x19失败  X\n");
000240  a194              ADR      r1,|L4.1172|
000242  e01b              B        |L4.636|
                  |L4.580|
;;;425    			} 
;;;426    			else
;;;427    			{
;;;428    				//("门id:");
;;;429    				for(Le_u_i = 0;Le_u_i < rebackInfo.Dt.DtSrt.DtLng;Le_u_i++)
000244  2000              MOVS     r0,#0
000246  4641              MOV      r1,r8                 ;245
000248  e006              B        |L4.600|
                  |L4.586|
;;;430    				{
;;;431    					sminfo.door_id[Le_u_i]= rebackInfo.Dt.DtSrt.ValidDt[Le_u_i];
00024a  1832              ADDS     r2,r6,r0
00024c  180b              ADDS     r3,r1,r0
00024e  78d2              LDRB     r2,[r2,#3]
000250  1c40              ADDS     r0,r0,#1
000252  f8832040          STRB     r2,[r3,#0x40]
000256  b2c0              UXTB     r0,r0                 ;429
                  |L4.600|
000258  4287              CMP      r7,r0                 ;429
00025a  d8f6              BHI      |L4.586|
;;;432    				}		
;;;433    				readBlock(Read_Block, (uint8_t)0x1A,sizeof(Read_Block));//读取下标
00025c  2207              MOVS     r2,#7
00025e  211a              MOVS     r1,#0x1a
                  |L4.608|
000260  e8bd1ff0          POP      {r4-r12}
000264  480e              LDR      r0,|L4.672|
000266  f85deb14          LDR      lr,[sp],#0x14
00026a  3010              ADDS     r0,r0,#0x10
00026c  f7ffbffe          B.W      readBlock
                  |L4.624|
;;;434    			}
;;;435    		}
;;;436    		break;
;;;437    		case Block_0x1A://读取下标（卡片设置模式下）
;;;438    		{
;;;439    			if (rebackInfo.Dt.DtSrt.St != OK) 
000270  b158              CBZ      r0,|L4.650|
;;;440    			{
;;;441    				//("decodeReadBlock: Block_0x20 fail\n");
;;;442    				isSectedCard_flag = 1;
000272  70a5              STRB     r5,[r4,#2]
;;;443    				SetAudioIO_PlayFile(AudioIO_CardInvalid);
000274  2007              MOVS     r0,#7
000276  f7fffffe          BL       SetAudioIO_PlayFile
;;;444    				USART_PRINTF_S("读扇区6块0x1A失败  X\n");
00027a  a18c              ADR      r1,|L4.1196|
                  |L4.636|
00027c  a010              ADR      r0,|L4.704|
                  |L4.638|
00027e  e8bd1ff0          POP      {r4-r12}
000282  f85deb14          LDR      lr,[sp],#0x14
000286  f7ffbffe          B.W      __2printf
                  |L4.650|
;;;445    			} 
;;;446    			else
;;;447    			{
;;;448    				//("下标:");
;;;449    				sminfo.suffix = rebackInfo.Dt.DtSrt.ValidDt[0U];	
00028a  f89d102b          LDRB     r1,[sp,#0x2b]
00028e  f8881050          STRB     r1,[r8,#0x50]
;;;450    				setcard = 1U;
000292  7065              STRB     r5,[r4,#1]
                  |L4.660|
;;;451    			}
;;;452    		}
;;;453    		break;
;;;454    		default:
;;;455    		break;
;;;456    	}
;;;457    }		
000294  e8bd1ff0          POP      {r4-r12}
000298  f85dfb14          LDR      pc,[sp],#0x14
;;;458    
                          ENDP

                  |L4.668|
                          DCD      ||.bss||+0x51
                  |L4.672|
                          DCD      ||.data||
                  |L4.676|
0002a4  c9c8c7f8          DCB      201,200,199,248,"5 key",195,220,194,235,209,233,214,164,202
0002a8  35206b65
0002ac  79c3dcc2
0002b0  ebd1e9d6
0002b4  a4ca    
0002b6  a7b0dc20          DCB      167,176,220,"  X\n",0
0002ba  20580a00
0002be  00                DCB      0
0002bf  00                DCB      0
                  |L4.704|
0002c0  25730a00          DCB      "%s\n",0
                  |L4.708|
0002c4  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x14",202,167,176,220
0002c8  c7f835bf
0002cc  e9307831
0002d0  34caa7b0
0002d4  dc      
0002d5  2020580a          DCB      "  X\n",0
0002d9  00      
0002da  00                DCB      0
0002db  00                DCB      0
                  |L4.732|
0002dc  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x14",179,201,185,166
0002e0  c7f835bf
0002e4  e9307831
0002e8  34b3c9b9
0002ec  a6      
0002ed  2020a1cc          DCB      "  ",161,204,"\n",0
0002f1  0a00    
0002f3  00                DCB      0
                  |L4.756|
                          DCD      machine_type
                  |L4.760|
0002f8  c9e8b1b8          DCB      201,232,177,184,192,224,208,205,180,237,206,243,",",192,224
0002fc  c0e0d0cd
000300  b4edcef3
000304  2cc0e0  
000307  d0cdc2eb          DCB      208,205,194,235," %d\n",0
00030b  2025640a
00030f  00      
                  |L4.784|
000310  cea7c7bd          DCB      206,167,199,189,187,250,163,172,208,161,199,248,"id",198
000314  bbfaa3ac
000318  d0a1c7f8
00031c  6964c6  
00031f  a5c5e420          DCB      165,197,228," -> ",191,170,195,197,"\n",0
000323  2d3e20bf
000327  aac3c50a
00032b  00      
                  |L4.812|
00032c  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x14",208,161,199,248
000330  c7f835bf
000334  e9307831
000338  34d0a1c7
00033c  f8      
00033d  6964b2bb          DCB      "id",178,187,198,165,197,228,"  X\n",0
000341  c6a5c5e4
000345  2020580a
000349  00      
00034a  00                DCB      0
00034b  00                DCB      0
                  |L4.844|
00034c  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x15",202,167,176,220
000350  c7f835bf
000354  e9307831
000358  35caa7b0
00035c  dc      
00035d  2020580a          DCB      "  X\n",0
000361  00      
000362  00                DCB      0
000363  00                DCB      0
                  |L4.868|
000364  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x15",179,201,185,166
000368  c7f835bf
00036c  e9307831
000370  35b3c9b9
000374  a6      
000375  202020a1          DCB      "   ",161,204,"\n",0
000379  cc0a00  
                  |L4.892|
00037c  b9a4d7f7          DCB      185,164,215,247,200,203,212,177,191,168,"\n",0
000380  c8cbd4b1
000384  bfa80a00
                  |L4.904|
000388  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x15",198,165,197,228
00038c  c7f835bf
000390  e9307831
000394  35c6a5c5
000398  e4      
000399  b5bdc2a5          DCB      181,189,194,165,182,176,177,224,186,197," -> ",191,170,195
00039d  b6b0b1e0
0003a1  bac5202d
0003a5  3e20bfaa
0003a9  c3      
0003aa  c50a00            DCB      197,"\n",0
0003ad  00                DCB      0
0003ae  00                DCB      0
0003af  00                DCB      0
                  |L4.944|
0003b0  c9c8c7f8          DCB      201,200,199,248,"5",191,233,"0x15",206,180,198,165,197,228
0003b4  35bfe930
0003b8  783135ce
0003bc  b4c6a5c5
0003c0  e4      
0003c1  b5bdc2a5          DCB      181,189,194,165,182,176,177,224,186,197,",",188,204,208,248
0003c5  b6b0b1e0
0003c9  bac52cbc
0003cd  ccd0f8  
0003d0  c6a5c5e4          DCB      198,165,197,228,201,200,199,248,"0x16",194,165,182,176,177
0003d4  c9c8c7f8
0003d8  30783136
0003dc  c2a5b6b0
0003e0  b1      
0003e1  e0bac50a          DCB      224,186,197,"\n",0
0003e5  00      
0003e6  00                DCB      0
0003e7  00                DCB      0
                  |L4.1000|
0003e8  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x16",202,167,176,220
0003ec  c7f835bf
0003f0  e9307831
0003f4  36caa7b0
0003f8  dc      
0003f9  2020580a          DCB      "  X\n",0
0003fd  00      
0003fe  00                DCB      0
0003ff  00                DCB      0
                  |L4.1024|
000400  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x16",179,201,185,166
000404  c7f835bf
000408  e9307831
00040c  36b3c9b9
000410  a6      
000411  2020a1cc          DCB      "  ",161,204,"\n",0
000415  0a00    
000417  00                DCB      0
                  |L4.1048|
000418  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x16",198,165,197,228
00041c  c7f835bf
000420  e9307831
000424  36c6a5c5
000428  e4      
000429  b5bdc2a5          DCB      181,189,194,165,182,176,177,224,186,197," -> ",191,170,195
00042d  b6b0b1e0
000431  bac5202d
000435  3e20bfaa
000439  c3      
00043a  c50a00            DCB      197,"\n",0
00043d  00                DCB      0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L4.1088|
000440  b6c1c9c8          DCB      182,193,201,200,199,248,"5",191,233,"0x16",206,180,198,165
000444  c7f835bf
000448  e9307831
00044c  36ceb4c6
000450  a5      
000451  c5e4b5bd          DCB      197,228,181,189,194,165,182,176,177,224,186,197,"\n",0
000455  c2a5b6b0
000459  b1e0bac5
00045d  0a00    
00045f  00                DCB      0
                  |L4.1120|
000460  c9c8c7f8          DCB      201,200,199,248,"6 key",195,220,194,235,209,233,214,164,202
000464  36206b65
000468  79c3dcc2
00046c  ebd1e9d6
000470  a4ca    
000472  a7b0dc20          DCB      167,176,220,"  X\n",0
000476  20580a00
00047a  00                DCB      0
00047b  00                DCB      0
                  |L4.1148|
00047c  b6c1c9c8          DCB      182,193,201,200,199,248,"6",191,233,"0x18",202,167,176,220
000480  c7f836bf
000484  e9307831
000488  38caa7b0
00048c  dc      
00048d  2020580a          DCB      "  X\n",0
000491  00      
000492  00                DCB      0
000493  00                DCB      0
                  |L4.1172|
000494  b6c1c9c8          DCB      182,193,201,200,199,248,"6",191,233,"0x19",202,167,176,220
000498  c7f836bf
00049c  e9307831
0004a0  39caa7b0
0004a4  dc      
0004a5  2020580a          DCB      "  X\n",0
0004a9  00      
0004aa  00                DCB      0
0004ab  00                DCB      0
                  |L4.1196|
0004ac  b6c1c9c8          DCB      182,193,201,200,199,248,"6",191,233,"0x1A",202,167,176,220
0004b0  c7f836bf
0004b4  e9307831
0004b8  41caa7b0
0004bc  dc      
0004bd  2020580a          DCB      "  X\n",0
0004c1  00      
0004c2  00                DCB      0
0004c3  00                DCB      0

                          AREA ||i.handleMsg||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  handleMsg PROC
;;;61     */
;;;62     void handleMsg(RebackInfo rebackInfo) 
000000  b40f              PUSH     {r0-r3}
;;;63     {
000002  b510              PUSH     {r4,lr}
000004  b08c              SUB      sp,sp,#0x30
;;;64     	//uint8 Le_u_i;
;;;65     	switch (rebackInfo.Dt.DtSrt.Seqnr) 
000006  f89d0038          LDRB     r0,[sp,#0x38]
00000a  2815              CMP      r0,#0x15
00000c  d010              BEQ      |L5.48|
00000e  dc07              BGT      |L5.32|
000010  b1e0              CBZ      r0,|L5.76|
000012  2801              CMP      r0,#1
000014  d049              BEQ      |L5.170|
000016  2803              CMP      r0,#3
000018  d049              BEQ      |L5.174|
00001a  2814              CMP      r0,#0x14
00001c  d112              BNE      |L5.68|
00001e  e007              B        |L5.48|
                  |L5.32|
000020  2816              CMP      r0,#0x16
000022  d005              BEQ      |L5.48|
000024  2818              CMP      r0,#0x18
000026  d003              BEQ      |L5.48|
000028  2819              CMP      r0,#0x19
00002a  d001              BEQ      |L5.48|
00002c  281a              CMP      r0,#0x1a
00002e  d109              BNE      |L5.68|
                  |L5.48|
;;;66     	{
;;;67     		case On_Card :  
;;;68     		{
;;;69     			//标签位为0表示读到卡了
;;;70     			if(OK == rebackInfo.Dt.DtSrt.St)//获取卡号信息
;;;71     			{
;;;72     				if(0U == GetZR60Ctrl_u_CardSetSt())//非卡片设置状态
;;;73     				{
;;;74     					SeReadcard_h_CardID.lng = rebackInfo.Dt.DtSrt.ValidDt[3];//获取卡号长度信息
;;;75     					if((SeReadcard_h_CardID.lng == 4U) && (0U == ReadCard_VrfyCardNumber(*((uint32*)(&(rebackInfo.Dt.DtSrt.ValidDt[4]))))))//卡号验证通过,卡号不在黑名单中
;;;76     					{
;;;77     						*((uint32*)SeReadcard_h_CardID.CardID) = *((uint32*)(&(rebackInfo.Dt.DtSrt.ValidDt[4])));
;;;78     						readBlock(Read_Block, (uint8_t) 0x14,sizeof(Read_Block));//读取扇区0x14：小区id
;;;79     						USART_PRINTF_S("卡号验证通过  √");
;;;80     					}
;;;81     					else
;;;82     					{
;;;83     						isSectedCard_flag = 1U;
;;;84     						SetAudioIO_PlayFile(AudioIO_CardInvalid);
;;;85     						USART_PRINTF_S("卡号验证不通过  X");
;;;86     					}
;;;87     				}
;;;88     				else
;;;89     				{
;;;90     					readBlock(Read_Block, (uint8_t) 0x14,sizeof(Read_Block));//读取扇区0x14
;;;91     				}
;;;92     			}
;;;93     		}
;;;94     		break;
;;;95     		case Load_Key://标签位为Load_Key表示这是从机给主机的装载秘钥的反馈
;;;96     		{
;;;97     			USART_PRINTF_S("key密码设置成功");
;;;98     			//decodeLoadKeyResult(rebackInfo);
;;;99     		}
;;;100    		break;
;;;101    		case SetDetectCard_ALL://表示这是从机给主机的设置自动读卡的反馈
;;;102    		{
;;;103    			USART_PRINTF_S("自动寻卡设置成功");
;;;104    			//isSectedCard_flag = 0U;
;;;105    			//decodeSetDetectCard(rebackInfo);
;;;106    		}
;;;107    		break;
;;;108    		case Block_0x14://表示这是从机读取扇区5 0x14的反馈
;;;109    		case Block_0x15://表示这是从机读取扇区5 0x15的反馈
;;;110    		case Block_0x16://表示这是从机读取扇区5 0x16的反馈
;;;111    		case Block_0x18://表示这是从机读取扇区6 0x18的反馈
;;;112    		case Block_0x19://表示这是从机读取扇区6 0x19的反馈
;;;113    		case Block_0x1A://表示这是从机读取扇区6 0x1A的反馈
;;;114    		{
;;;115    			decodeReadBlock(rebackInfo);
000030  222b              MOVS     r2,#0x2b
000032  a912              ADD      r1,sp,#0x48
000034  4668              MOV      r0,sp
000036  f7fffffe          BL       __aeabi_memcpy4
00003a  ac0e              ADD      r4,sp,#0x38
00003c  e894000f          LDM      r4,{r0-r3}
000040  f7fffffe          BL       decodeReadBlock
                  |L5.68|
;;;116    		}
;;;117    		break;
;;;118    		default:
;;;119    		break;
;;;120    	}
;;;121    }
000044  b00c              ADD      sp,sp,#0x30
000046  bc10              POP      {r4}
000048  f85dfb14          LDR      pc,[sp],#0x14
                  |L5.76|
00004c  f89d0039          LDRB     r0,[sp,#0x39]         ;70
000050  2800              CMP      r0,#0                 ;70
000052  d1f7              BNE      |L5.68|
000054  f7fffffe          BL       GetZR60Ctrl_u_CardSetSt
000058  b140              CBZ      r0,|L5.108|
00005a  b00c              ADD      sp,sp,#0x30           ;90
00005c  2207              MOVS     r2,#7                 ;90
00005e  bc10              POP      {r4}                  ;90
000060  2114              MOVS     r1,#0x14              ;90
000062  4817              LDR      r0,|L5.192|
000064  f85deb14          LDR      lr,[sp],#0x14         ;90
000068  f7ffbffe          B.W      readBlock
                  |L5.108|
00006c  4c14              LDR      r4,|L5.192|
00006e  f89d003e          LDRB     r0,[sp,#0x3e]         ;74
000072  3c0c              SUBS     r4,r4,#0xc            ;74
000074  2804              CMP      r0,#4                 ;75
000076  7120              STRB     r0,[r4,#4]            ;74
000078  d104              BNE      |L5.132|
00007a  f8dd003f          LDR      r0,[sp,#0x3f]         ;75
00007e  f7fffffe          BL       BListMng_u_ContrastBList
000082  b140              CBZ      r0,|L5.150|
                  |L5.132|
000084  490e              LDR      r1,|L5.192|
000086  2001              MOVS     r0,#1                 ;83
000088  3910              SUBS     r1,r1,#0x10           ;83
00008a  7088              STRB     r0,[r1,#2]            ;83
00008c  2007              MOVS     r0,#7                 ;84
00008e  f7fffffe          BL       SetAudioIO_PlayFile
000092  a10c              ADR      r1,|L5.196|
000094  e00c              B        |L5.176|
                  |L5.150|
000096  f8dd003f          LDR      r0,[sp,#0x3f]         ;77
00009a  6020              STR      r0,[r4,#0]            ;78  ; SeReadcard_h_CardID
00009c  2207              MOVS     r2,#7                 ;78
00009e  2114              MOVS     r1,#0x14              ;78
0000a0  4807              LDR      r0,|L5.192|
0000a2  f7fffffe          BL       readBlock
0000a6  a10c              ADR      r1,|L5.216|
0000a8  e002              B        |L5.176|
                  |L5.170|
0000aa  a110              ADR      r1,|L5.236|
0000ac  e000              B        |L5.176|
                  |L5.174|
0000ae  a113              ADR      r1,|L5.252|
                  |L5.176|
0000b0  b00c              ADD      sp,sp,#0x30           ;103
0000b2  a017              ADR      r0,|L5.272|
0000b4  bc10              POP      {r4}                  ;103
0000b6  f85deb14          LDR      lr,[sp],#0x14         ;103
0000ba  f7ffbffe          B.W      __2printf
;;;122    
                          ENDP

0000be  0000              DCW      0x0000
                  |L5.192|
                          DCD      ||.data||+0x10
                  |L5.196|
0000c4  bfa8bac5          DCB      191,168,186,197,209,233,214,164,178,187,205,168,185,253," "
0000c8  d1e9d6a4
0000cc  b2bbcda8
0000d0  b9fd20  
0000d3  205800            DCB      " X",0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L5.216|
0000d8  bfa8bac5          DCB      191,168,186,197,209,233,214,164,205,168,185,253,"  ",161
0000dc  d1e9d6a4
0000e0  cda8b9fd
0000e4  2020a1  
0000e7  cc00              DCB      204,0
0000e9  00                DCB      0
0000ea  00                DCB      0
0000eb  00                DCB      0
                  |L5.236|
0000ec  6b6579c3          DCB      "key",195,220,194,235,201,232,214,195,179,201,185,166,0
0000f0  dcc2ebc9
0000f4  e8d6c3b3
0000f8  c9b9a600
                  |L5.252|
0000fc  d7d4b6af          DCB      215,212,182,175,209,176,191,168,201,232,214,195,179,201,185
000100  d1b0bfa8
000104  c9e8d6c3
000108  b3c9b9  
00010b  a600              DCB      166,0
00010d  00                DCB      0
00010e  00                DCB      0
00010f  00                DCB      0
                  |L5.272|
000110  25730a00          DCB      "%s\n",0

                          AREA ||i.readBlock||, CODE, READONLY, ALIGN=1

                  readBlock PROC
;;;161    
;;;162    static void readBlock(uint8_t * blockCommand, uint8_t  block,uint8_t length) 
000000  b570              PUSH     {r4-r6,lr}
;;;163    {
;;;164    	blockCommand[4] = block;    // 要读的扇区的数据
000002  7101              STRB     r1,[r0,#4]
;;;165    	blockCommand[1] = block;    // 本次读取数据的请求头
000004  7041              STRB     r1,[r0,#1]
000006  4615              MOV      r5,r2                 ;163
000008  4604              MOV      r4,r0                 ;163
;;;166    	calcCommandsBBC(blockCommand,length);// 先计算正确的校验值
00000a  4611              MOV      r1,r2
00000c  f7fffffe          BL       calcCommandsBBC
;;;167    	SetUartCmn_TxMsg(blockCommand,length);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4070          POP      {r4-r6,lr}
000018  f7ffbffe          B.W      SetUartCmn_TxMsg
;;;168    }
;;;169    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  sminfo
                          %        81
                  sminfo1
                          %        81

                          AREA ||area_number.9||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.9||, ||.bss||
                  rebackinfo
                          %        59

                          AREA ||.data||, DATA, ALIGN=0

                  Sereadcard_SetKeyflag
000000  00                DCB      0x00
                  setcard
000001  00                DCB      0x00
                  isSectedCard_flag
000002  01                DCB      0x01
                  open_door
000003  00                DCB      0x00
                  SeReadcard_h_CardID
                          DCDU     0x00000000
000008  00                DCB      0x00
                  Set_Card_ALL
000009  200325            DCB      0x20,0x03,0x25
00000c  01010003          DCB      0x01,0x01,0x00,0x03
                  Read_Block
000010  20002201          DCB      0x20,0x00,0x22,0x01
000014  020003            DCB      0x02,0x00,0x03
                  Sereadcard_u_KeyA
000017  20                DCB      0x20
000018  012006f5          DCB      0x01,0x20,0x06,0xf5
00001c  79edd89f          DCB      0x79,0xed,0xd8,0x9f
000020  778903            DCB      0x77,0x89,0x03

;*** Start embedded assembler ***

#line 1 "..\\..\\APP\\readcard\\readcard.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_readcard_c_b948f24d____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_readcard_c_b948f24d____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_readcard_c_b948f24d____REVSH|
#line 153
|__asm___10_readcard_c_b948f24d____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_readcard_c_b948f24d____RRX|
#line 328
|__asm___10_readcard_c_b948f24d____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
