; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\psfltr.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\psfltr.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\psfltr.crf ..\..\Ecal\PeriStFliter\PSFltr.c]
                          THUMB

                          AREA ||i.GetPSFltr_u_PeriSt||, CODE, READONLY, ALIGN=2

                  GetPSFltr_u_PeriSt PROC
;;;128    ******************************************************/
;;;129    uint8 GetPSFltr_u_PeriSt(uint8 LePSFltr_u_Index)
000000  4902              LDR      r1,|L1.12|
;;;130    {
;;;131    	return SaPSFltr_h_Para[LePSFltr_u_Index].e_u_PSt;
000002  eb000040          ADD      r0,r0,r0,LSL #1
000006  5c08              LDRB     r0,[r1,r0]
;;;132    }
000008  4770              BX       lr
;;;133    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      ||.data||

                          AREA ||i.InitPSFltr_Parameter||, CODE, READONLY, ALIGN=2

                  InitPSFltr_Parameter PROC
;;;47     ******************************************************/
;;;48     void InitPSFltr_Parameter(void)
000000  2000              MOVS     r0,#0
;;;49     {
;;;50     	uint8 LePSFltr_u_Index;
;;;51     	for(LePSFltr_u_Index = 0U;LePSFltr_u_Index < PSFLTR_NUM;LePSFltr_u_Index++)
;;;52     	{
;;;53     		SaPSFltr_h_Para[LePSFltr_u_Index].e_u_PSt = STD_OFF;
000002  4b06              LDR      r3,|L2.28|
000004  4602              MOV      r2,r0                 ;51
                  |L2.6|
000006  eb000140          ADD      r1,r0,r0,LSL #1
;;;54     		SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OnFltrCnt = STD_NULL;
;;;55     		SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OffFltrCnt = STD_NULL;
00000a  1c40              ADDS     r0,r0,#1
00000c  545a              STRB     r2,[r3,r1]            ;53
00000e  4419              ADD      r1,r1,r3              ;54
000010  f01000ff          ANDS     r0,r0,#0xff           ;51
000014  704a              STRB     r2,[r1,#1]            ;54
000016  708a              STRB     r2,[r1,#2]
000018  d0f5              BEQ      |L2.6|
;;;56     	}
;;;57     }
00001a  4770              BX       lr
;;;58     
                          ENDP

                  |L2.28|
                          DCD      ||.data||

                          AREA ||i.PSFltr_FltrDeal||, CODE, READONLY, ALIGN=2

                  PSFltr_FltrDeal PROC
;;;86     ******************************************************/
;;;87     static void PSFltr_FltrDeal(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;88     {
;;;89     	uint8 LePSFltr_u_Index;
;;;90     	uint8 LePSFltr_u_St;
;;;91     	for(LePSFltr_u_Index = 0U;LePSFltr_u_Index < PSFLTR_NUM;LePSFltr_u_Index++)
000004  2400              MOVS     r4,#0
;;;92     	{
;;;93     		LePSFltr_u_St = GetPSFltrCfg_u_RTSt(LePSFltr_u_Index);
;;;94     		if(CaPSFltr_u_Active[LePSFltr_u_Index] == LePSFltr_u_St)/*开/关当前实际状态：开启*/
000006  4f13              LDR      r7,|L3.84|
;;;95     		{
;;;96     			SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OffFltrCnt =0U;
000008  4d13              LDR      r5,|L3.88|
00000a  4626              MOV      r6,r4                 ;94
                  |L3.12|
00000c  4620              MOV      r0,r4                 ;93
00000e  f7fffffe          BL       GetPSFltrCfg_u_RTSt
000012  5d39              LDRB     r1,[r7,r4]            ;94
;;;97     			SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OnFltrCnt++;/*滤波计时*/
;;;98     			if(SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OnFltrCnt >= PSFLTR_FLTRTIME)/*按键短按触发时间门限条件*/
;;;99     			{
;;;100    				SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OnFltrCnt =0U;
;;;101    				SaPSFltr_h_Para[LePSFltr_u_Index].e_u_PSt = STD_ON;/*开状态*/
;;;102    			}
;;;103    		}
;;;104    		else/*开/关当前实际状态：关闭*/
;;;105    		{
;;;106    			SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OnFltrCnt =0U;
000014  eb040244          ADD      r2,r4,r4,LSL #1
000018  4281              CMP      r1,r0                 ;94
00001a  eb020005          ADD      r0,r2,r5
00001e  d10a              BNE      |L3.54|
000020  7086              STRB     r6,[r0,#2]            ;96
000022  7841              LDRB     r1,[r0,#1]            ;97
000024  1c49              ADDS     r1,r1,#1              ;97
000026  b2c9              UXTB     r1,r1                 ;97
000028  7041              STRB     r1,[r0,#1]            ;97
00002a  290a              CMP      r1,#0xa               ;98
00002c  d30c              BCC      |L3.72|
00002e  7046              STRB     r6,[r0,#1]            ;100
000030  2001              MOVS     r0,#1                 ;101
000032  54a8              STRB     r0,[r5,r2]            ;101
000034  e008              B        |L3.72|
                  |L3.54|
000036  7046              STRB     r6,[r0,#1]
;;;107    			SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OffFltrCnt++;/*滤波计时*/
000038  7881              LDRB     r1,[r0,#2]
00003a  1c49              ADDS     r1,r1,#1
00003c  b2c9              UXTB     r1,r1
00003e  7081              STRB     r1,[r0,#2]
;;;108    			if(SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OffFltrCnt >= PSFLTR_FLTRTIME)/*按键短按触发时间门限条件*/
000040  290a              CMP      r1,#0xa
000042  d301              BCC      |L3.72|
;;;109    			{
;;;110    				SaPSFltr_h_Para[LePSFltr_u_Index].e_u_OffFltrCnt =0U;
000044  7086              STRB     r6,[r0,#2]
;;;111    				SaPSFltr_h_Para[LePSFltr_u_Index].e_u_PSt = STD_OFF;/*关状态*/
000046  54ae              STRB     r6,[r5,r2]
                  |L3.72|
000048  1c64              ADDS     r4,r4,#1
00004a  f01404ff          ANDS     r4,r4,#0xff           ;91
00004e  d0dd              BEQ      |L3.12|
;;;112    			}
;;;113    		}
;;;114    	}
;;;115    }
000050  e8bd81f0          POP      {r4-r8,pc}
;;;116    
                          ENDP

                  |L3.84|
                          DCD      CaPSFltr_u_Active
                  |L3.88|
                          DCD      ||.data||

                          AREA ||i.TskPSFltr_MainFunction||, CODE, READONLY, ALIGN=1

                  TskPSFltr_MainFunction PROC
;;;70     ******************************************************/
;;;71     void TskPSFltr_MainFunction(void)
000000  f7ffbffe          B.W      PSFltr_FltrDeal
;;;72     {
;;;73     	PSFltr_FltrDeal();
;;;74     }
;;;75     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  SaPSFltr_h_Para
000000  000000            DCB      0x00,0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Ecal\\PeriStFliter\\PSFltr.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_PSFltr_c_c8e97168____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_PSFltr_c_c8e97168____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_PSFltr_c_c8e97168____REVSH|
#line 153
|__asm___8_PSFltr_c_c8e97168____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_PSFltr_c_c8e97168____RRX|
#line 328
|__asm___8_PSFltr_c_c8e97168____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
