; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\bsp_exti.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\bsp_exti.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\ZR60_v1.0_freeRTOS -I..\..\Lwip\App -I..\..\Lwip\Bsp -I..\..\Lwip\Bsp\LAN8742A -I..\..\Lwip\lwip-1.4.1 -I..\..\Lwip\lwip-1.4.1\port -I..\..\Lwip\lwip-1.4.1\port\arch -I..\..\Lwip\lwip-1.4.1\port\Standalone -I..\..\Lwip\lwip-1.4.1\src\include -I..\..\Lwip\lwip-1.4.1\src\include\ipv4 -I..\..\Lwip\lwip-1.4.1\src\include\lwip -I..\..\Lwip\lwip-1.4.1\src\include\netif -I..\..\Ecal\BtnFltr -I..\..\Ecal\UartComn -I..\..\Ecal\MemIf -I..\..\APP -I..\..\APP\BlackListMng -I..\..\APP\SeverNewsPush -I..\..\APP\NewsPull -I..\..\Ecal -I..\..\Ecal\JsonIf -I..\..\Ecal\Mcu_Init -I..\..\Service -I..\..\Complex -I..\..\Complex\FATFS -I..\..\FreeRTOS\Source\include -I..\..\FreeRTOS\Source\portable\RVDS\ARM_CM4F -I..\..\FreeRTOS -I.\RTE\_ZR60 -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=..\..\output\bsp_exti.crf ..\..\Complex\key\bsp_exti.c]
                          THUMB

                          AREA ||i.Key_Config||, CODE, READONLY, ALIGN=2

                  Key_Config PROC
;;;48     
;;;49     void Key_Config(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;50     {
000002  b085              SUB      sp,sp,#0x14
;;;51     	GPIO_InitTypeDef GPIO_InitStructure; 
;;;52     	EXTI_InitTypeDef EXTI_InitStructure;
;;;53     	/*开启按键GPIO口的时钟*/
;;;54     	RCC_AHB1PeriphClockCmd(KEY1_INT_GPIO_CLK|DOORLOCK_GPIO_CLK|KEY2_INT_GPIO_CLK| \
000004  2101              MOVS     r1,#1
000006  2055              MOVS     r0,#0x55
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;55     						   KEY3_INT_GPIO_CLK|KEY4_INT_GPIO_CLK ,ENABLE);
;;;56     	/* 使能 SYSCFG 时钟 ，使用GPIO外部中断时必须使能SYSCFG时钟*/
;;;57     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0388              LSLS     r0,r1,#14
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58     	/* 选择按键1的引脚 */ 
;;;59     	GPIO_InitStructure.GPIO_Pin = KEY1_INT_GPIO_PIN;
;;;60     	/* 设置引脚为输入模式 */ 
;;;61     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;	    		
000014  2400              MOVS     r4,#0
;;;62     	/* 设置引脚不上拉也不下拉 */
;;;63     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;64     	/* 使用上面的结构体初始化按键 */
;;;65     	GPIO_Init(KEY1_INT_GPIO_PORT, &GPIO_InitStructure); 
000016  4f21              LDR      r7,|L1.156|
000018  2501              MOVS     r5,#1                 ;59
00001a  f88d4004          STRB     r4,[sp,#4]            ;61
00001e  9500              STR      r5,[sp,#0]            ;61
000020  f88d4007          STRB     r4,[sp,#7]            ;63
000024  4669              MOV      r1,sp
000026  4638              MOV      r0,r7
000028  f7fffffe          BL       GPIO_Init
;;;66     
;;;67     	/* 选择门锁状态检测的引脚 */ 
;;;68     	GPIO_InitStructure.GPIO_Pin = DOORLOCK_GPIO_PIN; 
00002c  2608              MOVS     r6,#8
;;;69     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
00002e  9600              STR      r6,[sp,#0]
000030  f88d5007          STRB     r5,[sp,#7]
;;;70     	/* 其他配置与上面相同 */
;;;71     	GPIO_Init(DOORLOCK_GPIO_PORT, &GPIO_InitStructure);
000034  4669              MOV      r1,sp
000036  4638              MOV      r0,r7
000038  f7fffffe          BL       GPIO_Init
;;;72     	
;;;73     	/* 选择按键2的引脚 */ 
;;;74     	GPIO_InitStructure.GPIO_Pin = KEY2_INT_GPIO_PIN;  
00003c  2704              MOVS     r7,#4
;;;75     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00003e  9700              STR      r7,[sp,#0]
000040  f88d4007          STRB     r4,[sp,#7]
;;;76     	/* 其他配置与上面相同 */
;;;77     	GPIO_Init(KEY2_INT_GPIO_PORT, &GPIO_InitStructure);      
000044  4669              MOV      r1,sp
000046  4816              LDR      r0,|L1.160|
000048  f7fffffe          BL       GPIO_Init
;;;78     
;;;79     
;;;80     	  /* 选择按键3的引脚 */ 
;;;81     	GPIO_InitStructure.GPIO_Pin = KEY3_INT_GPIO_PIN;  
00004c  03e8              LSLS     r0,r5,#15
;;;82     	GPIO_Init(KEY3_INT_GPIO_PORT, &GPIO_InitStructure);      
00004e  9000              STR      r0,[sp,#0]
000050  4669              MOV      r1,sp
000052  4814              LDR      r0,|L1.164|
000054  f7fffffe          BL       GPIO_Init
;;;83     
;;;84     	/*选择按键4的引脚*/
;;;85     	GPIO_InitStructure.GPIO_Pin = KEY4_INT_GPIO_PIN;   
;;;86     	GPIO_Init(KEY4_INT_GPIO_PORT, &GPIO_InitStructure); 
000058  4669              MOV      r1,sp
00005a  4813              LDR      r0,|L1.168|
00005c  9600              STR      r6,[sp,#0]
00005e  f7fffffe          BL       GPIO_Init
;;;87     	
;;;88     	
;;;89     	
;;;90     	/* 连接 EXTI 中断源 到key2 引脚 */
;;;91     	SYSCFG_EXTILineConfig(KEY2_INT_EXTI_PORTSOURCE,KEY2_INT_EXTI_PINSOURCE);
000062  2102              MOVS     r1,#2
000064  4608              MOV      r0,r1
000066  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;92     
;;;93     	/* 选择 EXTI 中断源 */
;;;94     	EXTI_InitStructure.EXTI_Line = KEY2_INT_EXTI_LINE;
;;;95     	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
00006a  f88d400c          STRB     r4,[sp,#0xc]
;;;96     	/* 上升沿触发 */
;;;97     	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
00006e  200c              MOVS     r0,#0xc
000070  f88d000d          STRB     r0,[sp,#0xd]
000074  9702              STR      r7,[sp,#8]            ;95
;;;98     	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000076  f88d500e          STRB     r5,[sp,#0xe]
;;;99     	EXTI_Init(&EXTI_InitStructure);
00007a  a802              ADD      r0,sp,#8
00007c  f7fffffe          BL       EXTI_Init
000080  f88d6010          STRB     r6,[sp,#0x10]
000084  2002              MOVS     r0,#2
000086  f88d0011          STRB     r0,[sp,#0x11]
00008a  f88d4012          STRB     r4,[sp,#0x12]
00008e  f88d5013          STRB     r5,[sp,#0x13]
000092  a804              ADD      r0,sp,#0x10
000094  f7fffffe          BL       NVIC_Init
;;;100    	NVIC_Configuration();
;;;101    }
000098  b005              ADD      sp,sp,#0x14
00009a  bdf0              POP      {r4-r7,pc}
;;;102    
                          ENDP

                  |L1.156|
                          DCD      0x40020000
                  |L1.160|
                          DCD      0x40020800
                  |L1.164|
                          DCD      0x40021800
                  |L1.168|
                          DCD      0x40021000

;*** Start embedded assembler ***

#line 1 "..\\..\\Complex\\key\\bsp_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_exti_c_9742c8c6____REV16|
#line 138 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_exti_c_9742c8c6____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_exti_c_9742c8c6____REVSH|
#line 153
|__asm___10_bsp_exti_c_9742c8c6____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_exti_c_9742c8c6____RRX|
#line 328
|__asm___10_bsp_exti_c_9742c8c6____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
